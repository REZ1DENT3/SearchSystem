-- phpMyAdmin SQL Dump
-- version 4.0.10.6
-- http://www.phpmyadmin.net
--
-- Хост: 127.0.0.1:3306
-- Время создания: Апр 05 2015 г., 11:54
-- Версия сервера: 5.6.22-log
-- Версия PHP: 5.6.3

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- База данных: `habr-search`
--

-- --------------------------------------------------------

--
-- Структура таблицы `indices`
--

CREATE TABLE IF NOT EXISTS `indices` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `word_id` int(11) NOT NULL,
  `table_id` int(11) NOT NULL,
  `table_index` int(11) NOT NULL,
  `rating_reps` int(11) NOT NULL,
  `weight` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `word_id` (`word_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=9789 ;

--
-- Дамп данных таблицы `indices`
--

INSERT INTO `indices` (`id`, `word_id`, `table_id`, `table_index`, `rating_reps`, `weight`) VALUES
(1, 1, 2, 1, 44, 0),
(2, 2, 2, 1, 28, 0),
(3, 3, 2, 1, 25, 0),
(4, 4, 2, 1, 18, 0),
(5, 5, 2, 1, 16, 0),
(6, 6, 2, 1, 15, 0),
(7, 7, 2, 1, 15, 0),
(8, 8, 2, 1, 14, 3),
(9, 9, 2, 1, 14, 2),
(10, 10, 2, 1, 13, 1),
(11, 11, 2, 1, 12, 1),
(12, 12, 2, 1, 11, 1),
(13, 13, 2, 1, 11, 3),
(14, 14, 2, 1, 10, 2),
(15, 15, 2, 1, 10, 0),
(16, 16, 2, 1, 10, 0),
(17, 17, 2, 1, 10, 1),
(18, 18, 2, 1, 9, 1),
(19, 19, 2, 1, 9, 3),
(20, 20, 2, 1, 9, 0),
(21, 21, 2, 1, 8, 0),
(22, 22, 2, 1, 8, 0),
(23, 23, 2, 1, 8, 2),
(24, 24, 2, 1, 8, 2),
(25, 25, 2, 1, 8, 0),
(26, 26, 2, 1, 8, 1),
(27, 27, 2, 1, 7, 1),
(28, 28, 2, 1, 7, 0),
(29, 29, 2, 1, 7, 2),
(30, 30, 2, 1, 7, 2),
(31, 31, 2, 1, 7, 0),
(32, 32, 2, 1, 7, 1),
(33, 33, 2, 1, 7, 3),
(34, 34, 2, 1, 6, 0),
(35, 35, 2, 1, 6, 1),
(36, 36, 2, 1, 6, 1),
(37, 37, 2, 1, 6, 3),
(38, 38, 2, 1, 6, 3),
(39, 39, 2, 1, 6, 3),
(40, 40, 2, 1, 6, 3),
(41, 41, 2, 1, 6, 0),
(42, 42, 2, 1, 6, 1),
(43, 43, 2, 1, 6, 1),
(44, 44, 2, 1, 6, 3),
(45, 45, 2, 1, 5, 2),
(46, 46, 2, 1, 5, 1),
(47, 47, 2, 1, 5, 3),
(48, 48, 2, 1, 5, 1),
(49, 49, 2, 1, 5, 1),
(50, 50, 2, 1, 5, 3),
(51, 51, 2, 1, 5, 3),
(52, 52, 2, 1, 5, 1),
(53, 53, 2, 1, 4, 3),
(54, 54, 2, 1, 4, 3),
(55, 55, 2, 1, 4, 1),
(56, 56, 2, 1, 4, 1),
(57, 57, 2, 1, 4, 1),
(58, 58, 2, 1, 4, 3),
(59, 59, 2, 1, 4, 3),
(60, 60, 2, 1, 4, 1),
(61, 61, 2, 1, 4, 1),
(62, 62, 2, 1, 4, 1),
(63, 63, 2, 1, 4, 1),
(64, 64, 2, 1, 4, 3),
(65, 65, 2, 1, 4, 0),
(66, 66, 2, 1, 4, 1),
(67, 67, 2, 1, 4, 3),
(68, 68, 2, 1, 4, 3),
(69, 69, 2, 1, 4, 1),
(70, 70, 2, 1, 4, 1),
(71, 71, 2, 1, 4, 0),
(72, 72, 2, 1, 4, 0),
(73, 73, 2, 1, 4, 1),
(74, 74, 2, 1, 4, 0),
(75, 75, 2, 1, 3, 1),
(76, 76, 2, 1, 3, 1),
(77, 77, 2, 1, 3, 1),
(78, 78, 2, 1, 3, 1),
(79, 79, 2, 1, 3, 0),
(80, 80, 2, 1, 3, 1),
(81, 81, 2, 1, 3, 3),
(82, 82, 2, 1, 3, 2),
(83, 83, 2, 1, 3, 1),
(84, 84, 2, 1, 3, 3),
(85, 85, 2, 1, 3, 3),
(86, 86, 2, 1, 3, 3),
(87, 87, 2, 1, 3, 3),
(88, 88, 2, 1, 3, 1),
(89, 89, 2, 1, 3, 3),
(90, 90, 2, 1, 3, 1),
(91, 91, 2, 1, 3, 1),
(92, 92, 2, 1, 3, 3),
(93, 93, 2, 1, 3, 1),
(94, 94, 2, 1, 3, 3),
(95, 95, 2, 1, 3, 3),
(96, 96, 2, 1, 3, 1),
(97, 97, 2, 1, 3, 1),
(98, 98, 2, 1, 3, 1),
(99, 99, 2, 1, 3, 2),
(100, 100, 2, 1, 3, 1),
(101, 101, 2, 1, 3, 2),
(102, 102, 2, 1, 3, 2),
(103, 103, 2, 1, 3, 3),
(104, 104, 2, 1, 3, 1),
(105, 105, 2, 1, 3, 3),
(106, 106, 2, 1, 3, 3),
(107, 107, 2, 1, 3, 1),
(108, 108, 2, 1, 3, 1),
(109, 109, 2, 1, 3, 1),
(110, 110, 2, 1, 2, 1),
(111, 111, 2, 1, 2, 1),
(112, 112, 2, 1, 2, 3),
(113, 113, 2, 1, 2, 2),
(114, 114, 2, 1, 2, 2),
(115, 115, 2, 1, 2, 3),
(116, 116, 2, 1, 2, 3),
(117, 117, 2, 1, 2, 1),
(118, 118, 2, 1, 2, 3),
(119, 119, 2, 1, 2, 1),
(120, 120, 2, 1, 2, 1),
(121, 121, 2, 1, 2, 2),
(122, 122, 2, 1, 2, 2),
(123, 123, 2, 1, 2, 1),
(124, 124, 2, 1, 2, 2),
(125, 125, 2, 1, 2, 1),
(126, 126, 2, 1, 2, 1),
(127, 127, 2, 1, 2, 1),
(128, 128, 2, 1, 2, 1),
(129, 129, 2, 1, 2, 1),
(130, 130, 2, 1, 2, 1),
(131, 131, 2, 1, 2, 1),
(132, 132, 2, 1, 2, 1),
(133, 133, 2, 1, 2, 1),
(134, 134, 2, 1, 2, 1),
(135, 135, 2, 1, 2, 1),
(136, 136, 2, 1, 2, 1),
(137, 137, 2, 1, 2, 1),
(138, 138, 2, 1, 2, 1),
(139, 139, 2, 1, 2, 3),
(140, 140, 2, 1, 2, 2),
(141, 141, 2, 1, 2, 3),
(142, 142, 2, 1, 2, 1),
(143, 143, 2, 1, 2, 1),
(144, 144, 2, 1, 2, 1),
(145, 145, 2, 1, 2, 1),
(146, 146, 2, 1, 2, 1),
(147, 147, 2, 1, 2, 1),
(148, 148, 2, 1, 2, 1),
(149, 149, 2, 1, 2, 1),
(150, 150, 2, 1, 2, 1),
(151, 151, 2, 1, 2, 1),
(152, 152, 2, 1, 2, 3),
(153, 153, 2, 1, 2, 1),
(154, 154, 2, 1, 2, 0),
(155, 155, 2, 1, 2, 1),
(156, 156, 2, 1, 2, 1),
(157, 157, 2, 1, 2, 1),
(158, 158, 2, 1, 2, 1),
(159, 159, 2, 1, 2, 1),
(160, 160, 2, 1, 2, 1),
(161, 161, 2, 1, 2, 3),
(162, 162, 2, 1, 2, 1),
(163, 163, 2, 1, 2, 1),
(164, 164, 2, 1, 2, 1),
(165, 165, 2, 1, 2, 0),
(166, 166, 2, 1, 2, 2),
(167, 167, 2, 1, 2, 1),
(168, 168, 2, 1, 2, 0),
(169, 169, 2, 1, 2, 1),
(170, 170, 2, 1, 2, 1),
(171, 171, 2, 1, 2, 1),
(172, 172, 2, 1, 2, 1),
(173, 173, 2, 1, 2, 1),
(174, 174, 2, 1, 2, 1),
(175, 175, 2, 1, 2, 2),
(176, 176, 2, 1, 2, 3),
(177, 177, 2, 1, 2, 3),
(178, 178, 2, 1, 2, 1),
(179, 179, 2, 1, 2, 2),
(180, 180, 2, 1, 2, 2),
(181, 181, 2, 1, 2, 3),
(182, 182, 2, 1, 2, 2),
(183, 183, 2, 1, 2, 1),
(184, 184, 2, 1, 2, 1),
(185, 185, 2, 1, 2, 3),
(186, 186, 2, 1, 2, 1),
(187, 187, 2, 1, 2, 3),
(188, 188, 2, 1, 2, 2),
(189, 189, 2, 1, 2, 0),
(190, 190, 2, 1, 2, 1),
(191, 191, 2, 1, 2, 2),
(192, 192, 2, 1, 2, 3),
(193, 193, 2, 1, 2, 1),
(194, 194, 2, 1, 2, 1),
(195, 195, 2, 1, 2, 0),
(196, 196, 2, 1, 2, 2),
(197, 197, 2, 1, 2, 1),
(198, 198, 2, 1, 2, 3),
(199, 199, 2, 1, 2, 1),
(200, 200, 2, 1, 2, 2),
(201, 201, 2, 1, 2, 2),
(202, 202, 2, 1, 2, 0),
(203, 203, 2, 1, 2, 1),
(204, 204, 2, 1, 2, 3),
(205, 205, 2, 1, 2, 3),
(206, 206, 2, 1, 2, 3),
(207, 207, 2, 1, 2, 3),
(208, 208, 2, 1, 1, 1),
(209, 209, 2, 1, 1, 1),
(210, 210, 2, 1, 1, 1),
(211, 211, 2, 1, 1, 1),
(212, 212, 2, 1, 1, 1),
(213, 213, 2, 1, 1, 1),
(214, 214, 2, 1, 1, 3),
(215, 215, 2, 1, 1, 0),
(216, 216, 2, 1, 1, 1),
(217, 217, 2, 1, 1, 3),
(218, 218, 2, 1, 1, 3),
(219, 219, 2, 1, 1, 1),
(220, 220, 2, 1, 1, 0),
(221, 221, 2, 1, 1, 2),
(222, 222, 2, 1, 1, 1),
(223, 223, 2, 1, 1, 3),
(224, 224, 2, 1, 1, 1),
(225, 225, 2, 1, 1, 1),
(226, 226, 2, 1, 1, 2),
(227, 227, 2, 1, 1, 0),
(228, 228, 2, 1, 1, 2),
(229, 229, 2, 1, 1, 1),
(230, 230, 2, 1, 1, 2),
(231, 231, 2, 1, 1, 3),
(232, 232, 2, 1, 1, 1),
(233, 233, 2, 1, 1, 1),
(234, 234, 2, 1, 1, 3),
(235, 235, 2, 1, 1, 1),
(236, 236, 2, 1, 1, 3),
(237, 237, 2, 1, 1, 3),
(238, 238, 2, 1, 1, 1),
(239, 239, 2, 1, 1, 2),
(240, 240, 2, 1, 1, 1),
(241, 241, 2, 1, 1, 1),
(242, 242, 2, 1, 1, 3),
(243, 243, 2, 1, 1, 2),
(244, 244, 2, 1, 1, 3),
(245, 245, 2, 1, 1, 2),
(246, 246, 2, 1, 1, 3),
(247, 247, 2, 1, 1, 2),
(248, 248, 2, 1, 1, 3),
(249, 249, 2, 1, 1, 1),
(250, 250, 2, 1, 1, 2),
(251, 251, 2, 1, 1, 2),
(252, 252, 2, 1, 1, 1),
(253, 253, 2, 1, 1, 2),
(254, 254, 2, 1, 1, 1),
(255, 255, 2, 1, 1, 1),
(256, 256, 2, 1, 1, 1),
(257, 257, 2, 1, 1, 0),
(258, 258, 2, 1, 1, 3),
(259, 259, 2, 1, 1, 1),
(260, 260, 2, 1, 1, 1),
(261, 261, 2, 1, 1, 1),
(262, 262, 2, 1, 1, 1),
(263, 263, 2, 1, 1, 1),
(264, 264, 2, 1, 1, 1),
(265, 265, 2, 1, 1, 1),
(266, 266, 2, 1, 1, 0),
(267, 267, 2, 1, 1, 3),
(268, 268, 2, 1, 1, 1),
(269, 269, 2, 1, 1, 1),
(270, 270, 2, 1, 1, 3),
(271, 271, 2, 1, 1, 1),
(272, 272, 2, 1, 1, 1),
(273, 273, 2, 1, 1, 3),
(274, 274, 2, 1, 1, 1),
(275, 275, 2, 1, 1, 1),
(276, 276, 2, 1, 1, 1),
(277, 277, 2, 1, 1, 2),
(278, 278, 2, 1, 1, 1),
(279, 279, 2, 1, 1, 2),
(280, 280, 2, 1, 1, 0),
(281, 281, 2, 1, 1, 1),
(282, 282, 2, 1, 1, 3),
(283, 283, 2, 1, 1, 1),
(284, 284, 2, 1, 1, 1),
(285, 285, 2, 1, 1, 1),
(286, 286, 2, 1, 1, 1),
(287, 287, 2, 1, 1, 1),
(288, 288, 2, 1, 1, 1),
(289, 289, 2, 1, 1, 1),
(290, 290, 2, 1, 1, 1),
(291, 291, 2, 1, 1, 1),
(292, 292, 2, 1, 1, 1),
(293, 293, 2, 1, 1, 1),
(294, 294, 2, 1, 1, 2),
(295, 295, 2, 1, 1, 1),
(296, 296, 2, 1, 1, 3),
(297, 297, 2, 1, 1, 3),
(298, 298, 2, 1, 1, 3),
(299, 299, 2, 1, 1, 1),
(300, 300, 2, 1, 1, 1),
(301, 301, 2, 1, 1, 1),
(302, 302, 2, 1, 1, 2),
(303, 303, 2, 1, 1, 3),
(304, 304, 2, 1, 1, 2),
(305, 305, 2, 1, 1, 3),
(306, 306, 2, 1, 1, 1),
(307, 307, 2, 1, 1, 1),
(308, 308, 2, 1, 1, 3),
(309, 309, 2, 1, 1, 3),
(310, 310, 2, 1, 1, 2),
(311, 311, 2, 1, 1, 3),
(312, 312, 2, 1, 1, 3),
(313, 313, 2, 1, 1, 1),
(314, 314, 2, 1, 1, 1),
(315, 315, 2, 1, 1, 2),
(316, 316, 2, 1, 1, 1),
(317, 317, 2, 1, 1, 1),
(318, 318, 2, 1, 1, 2),
(319, 319, 2, 1, 1, 1),
(320, 320, 2, 1, 1, 1),
(321, 321, 2, 1, 1, 3),
(322, 322, 2, 1, 1, 3),
(323, 323, 2, 1, 1, 2),
(324, 324, 2, 1, 1, 2),
(325, 325, 2, 1, 1, 3),
(326, 326, 2, 1, 1, 1),
(327, 327, 2, 1, 1, 1),
(328, 328, 2, 1, 1, 2),
(329, 329, 2, 1, 1, 0),
(330, 330, 2, 1, 1, 2),
(331, 331, 2, 1, 1, 2),
(332, 332, 2, 1, 1, 3),
(333, 333, 2, 1, 1, 0),
(334, 334, 2, 1, 1, 1),
(335, 335, 2, 1, 1, 1),
(336, 336, 2, 1, 1, 1),
(337, 337, 2, 1, 1, 1),
(338, 338, 2, 1, 1, 1),
(339, 339, 2, 1, 1, 1),
(340, 340, 2, 1, 1, 1),
(341, 341, 2, 1, 1, 1),
(342, 342, 2, 1, 1, 1),
(343, 343, 2, 1, 1, 1),
(344, 344, 2, 1, 1, 1),
(345, 345, 2, 1, 1, 3),
(346, 346, 2, 1, 1, 1),
(347, 347, 2, 1, 1, 2),
(348, 348, 2, 1, 1, 2),
(349, 349, 2, 1, 1, 1),
(350, 350, 2, 1, 1, 1),
(351, 351, 2, 1, 1, 1),
(352, 352, 2, 1, 1, 1),
(353, 353, 2, 1, 1, 2),
(354, 354, 2, 1, 1, 0),
(355, 355, 2, 1, 1, 3),
(356, 356, 2, 1, 1, 1),
(357, 357, 2, 1, 1, 1),
(358, 358, 2, 1, 1, 1),
(359, 359, 2, 1, 1, 2),
(360, 360, 2, 1, 1, 3),
(361, 361, 2, 1, 1, 1),
(362, 362, 2, 1, 1, 1),
(363, 363, 2, 1, 1, 1),
(364, 364, 2, 1, 1, 3),
(365, 365, 2, 1, 1, 3),
(366, 366, 2, 1, 1, 1),
(367, 367, 2, 1, 1, 1),
(368, 368, 2, 1, 1, 1),
(369, 369, 2, 1, 1, 3),
(370, 370, 2, 1, 1, 3),
(371, 371, 2, 1, 1, 1),
(372, 372, 2, 1, 1, 2),
(373, 373, 2, 1, 1, 1),
(374, 374, 2, 1, 1, 3),
(375, 375, 2, 1, 1, 3),
(376, 376, 2, 1, 1, 1),
(377, 377, 2, 1, 1, 3),
(378, 378, 2, 1, 1, 0),
(379, 379, 2, 1, 1, 1),
(380, 380, 2, 1, 1, 2),
(381, 381, 2, 1, 1, 3),
(382, 382, 2, 1, 1, 3),
(383, 383, 2, 1, 1, 1),
(384, 384, 2, 1, 1, 2),
(385, 385, 2, 1, 1, 3),
(386, 386, 2, 1, 1, 1),
(387, 387, 2, 1, 1, 2),
(388, 388, 2, 1, 1, 3),
(389, 389, 2, 1, 1, 1),
(390, 390, 2, 1, 1, 0),
(391, 391, 2, 1, 1, 1),
(392, 392, 2, 1, 1, 2),
(393, 393, 2, 1, 1, 1),
(394, 394, 2, 1, 1, 2),
(395, 395, 2, 1, 1, 2),
(396, 396, 2, 1, 1, 1),
(397, 397, 2, 1, 1, 2),
(398, 398, 2, 1, 1, 2),
(399, 399, 2, 1, 1, 1),
(400, 400, 2, 1, 1, 3),
(401, 401, 2, 1, 1, 1),
(402, 402, 2, 1, 1, 3),
(403, 403, 2, 1, 1, 2),
(404, 404, 2, 1, 1, 1),
(405, 405, 2, 1, 1, 3),
(406, 406, 2, 1, 1, 1),
(407, 407, 2, 1, 1, 3),
(408, 408, 2, 1, 1, 1),
(409, 409, 2, 1, 1, 1),
(410, 410, 2, 1, 1, 3),
(411, 411, 2, 1, 1, 1),
(412, 412, 2, 1, 1, 3),
(413, 413, 2, 1, 1, 1),
(414, 414, 2, 1, 1, 3),
(415, 415, 2, 1, 1, 1),
(416, 416, 2, 1, 1, 3),
(417, 417, 2, 1, 1, 1),
(418, 418, 2, 1, 1, 3),
(419, 419, 2, 1, 1, 2),
(420, 420, 2, 1, 1, 1),
(421, 421, 2, 1, 1, 1),
(422, 422, 2, 1, 1, 1),
(423, 423, 2, 1, 1, 3),
(424, 424, 2, 1, 1, 1),
(425, 425, 2, 1, 1, 3),
(426, 426, 2, 1, 1, 2),
(427, 427, 2, 1, 1, 3),
(428, 428, 2, 1, 1, 1),
(429, 429, 2, 1, 1, 1),
(430, 430, 2, 1, 1, 3),
(431, 431, 2, 1, 1, 3),
(432, 432, 2, 1, 1, 1),
(433, 433, 2, 1, 1, 2),
(434, 434, 2, 1, 1, 3),
(435, 435, 2, 1, 1, 2),
(436, 436, 2, 1, 1, 0),
(437, 437, 2, 1, 1, 1),
(438, 438, 2, 1, 1, 2),
(439, 439, 2, 1, 1, 3),
(440, 440, 2, 1, 1, 2),
(441, 441, 2, 1, 1, 1),
(442, 442, 2, 1, 1, 2),
(443, 443, 2, 1, 1, 1),
(444, 444, 2, 1, 1, 1),
(445, 445, 2, 1, 1, 3),
(446, 446, 2, 1, 1, 2),
(447, 447, 2, 1, 1, 3),
(448, 448, 2, 1, 1, 1),
(449, 449, 2, 1, 1, 3),
(450, 450, 2, 1, 1, 1),
(451, 451, 2, 1, 1, 3),
(452, 452, 2, 1, 1, 1),
(453, 453, 2, 1, 1, 2),
(454, 454, 2, 1, 1, 2),
(455, 455, 2, 1, 1, 3),
(456, 456, 2, 1, 1, 3),
(457, 457, 2, 1, 1, 3),
(458, 458, 2, 1, 1, 2),
(459, 459, 2, 1, 1, 2),
(460, 460, 2, 1, 1, 2),
(461, 461, 2, 1, 1, 1),
(462, 462, 2, 1, 1, 3),
(463, 463, 2, 1, 1, 2),
(464, 464, 2, 1, 1, 3),
(465, 465, 2, 1, 1, 3),
(466, 466, 2, 1, 1, 3),
(467, 467, 2, 1, 1, 3),
(468, 468, 2, 1, 1, 3),
(469, 469, 2, 1, 1, 1),
(470, 470, 2, 1, 1, 1),
(471, 471, 2, 1, 1, 1),
(472, 472, 2, 1, 1, 2),
(473, 473, 2, 1, 1, 1),
(474, 474, 2, 1, 1, 1),
(475, 475, 2, 1, 1, 2),
(476, 476, 2, 1, 1, 3),
(477, 477, 2, 1, 1, 3),
(478, 478, 2, 1, 1, 1),
(479, 479, 2, 1, 1, 1),
(480, 480, 2, 1, 1, 1),
(481, 481, 2, 1, 1, 1),
(482, 482, 2, 1, 1, 1),
(483, 483, 2, 1, 1, 3),
(484, 484, 2, 1, 1, 1),
(485, 485, 2, 1, 1, 2),
(486, 486, 2, 1, 1, 1),
(487, 487, 2, 1, 1, 0),
(488, 488, 2, 1, 1, 0),
(489, 489, 2, 1, 1, 2),
(490, 490, 2, 1, 1, 2),
(491, 491, 2, 1, 1, 1),
(492, 492, 2, 1, 1, 2),
(493, 493, 2, 1, 1, 3),
(494, 494, 2, 1, 1, 1),
(495, 495, 2, 1, 1, 1),
(496, 496, 2, 1, 1, 1),
(497, 497, 2, 1, 1, 1),
(498, 498, 2, 1, 1, 1),
(499, 499, 2, 1, 1, 1),
(500, 500, 2, 1, 1, 3),
(501, 501, 2, 1, 1, 1),
(502, 502, 2, 1, 1, 1),
(503, 503, 2, 1, 1, 1),
(504, 504, 2, 1, 1, 2),
(505, 505, 2, 1, 1, 1),
(506, 506, 2, 1, 1, 1),
(507, 507, 2, 1, 1, 1),
(508, 508, 2, 1, 1, 1),
(509, 509, 2, 1, 1, 2),
(510, 510, 2, 1, 1, 3),
(511, 511, 2, 1, 1, 2),
(512, 512, 2, 1, 1, 1),
(513, 513, 2, 1, 1, 3),
(514, 514, 2, 1, 1, 2),
(515, 515, 2, 1, 1, 1),
(516, 516, 2, 1, 1, 3),
(517, 517, 2, 1, 1, 1),
(518, 518, 2, 1, 1, 3),
(519, 519, 2, 1, 1, 0),
(520, 520, 2, 1, 1, 3),
(521, 521, 2, 1, 1, 1),
(522, 522, 2, 1, 1, 1),
(523, 523, 2, 1, 1, 2),
(524, 524, 2, 1, 1, 1),
(525, 525, 2, 1, 1, 2),
(526, 526, 2, 1, 1, 1),
(527, 527, 2, 1, 1, 1),
(528, 528, 2, 1, 1, 1),
(529, 529, 2, 1, 1, 3),
(530, 530, 2, 1, 1, 0),
(531, 531, 2, 1, 1, 2),
(532, 532, 2, 1, 1, 1),
(533, 533, 2, 1, 1, 1),
(534, 534, 2, 1, 1, 1),
(535, 535, 2, 1, 1, 2),
(536, 536, 2, 1, 1, 1),
(537, 537, 2, 1, 1, 2),
(538, 538, 2, 1, 1, 1),
(539, 539, 2, 1, 1, 1),
(540, 540, 2, 1, 1, 1),
(541, 541, 2, 1, 1, 3),
(542, 542, 2, 1, 1, 3),
(543, 543, 2, 1, 1, 3),
(544, 544, 2, 1, 1, 1),
(545, 545, 2, 1, 1, 1),
(546, 546, 2, 1, 1, 3),
(547, 547, 2, 1, 1, 1),
(548, 548, 2, 1, 1, 1),
(549, 3, 2, 2, 21, 0),
(550, 7, 2, 2, 17, 0),
(551, 1, 2, 2, 16, 0),
(552, 2, 2, 2, 13, 0),
(553, 5, 2, 2, 8, 0),
(554, 549, 2, 2, 8, 3),
(555, 61, 2, 2, 7, 1),
(556, 28, 2, 2, 6, 0),
(557, 55, 2, 2, 6, 1),
(558, 550, 2, 2, 6, 3),
(559, 551, 2, 2, 6, 3),
(560, 552, 2, 2, 6, 3),
(561, 9, 2, 2, 5, 2),
(562, 553, 2, 2, 5, 3),
(563, 6, 2, 2, 5, 0),
(564, 76, 2, 2, 5, 1),
(565, 17, 2, 2, 5, 1),
(566, 79, 2, 2, 5, 0),
(567, 554, 2, 2, 5, 3),
(568, 21, 2, 2, 5, 0),
(569, 401, 2, 2, 4, 1),
(570, 555, 2, 2, 4, 3),
(571, 35, 2, 2, 4, 1),
(572, 556, 2, 2, 4, 0),
(573, 557, 2, 2, 4, 3),
(574, 558, 2, 2, 4, 3),
(575, 559, 2, 2, 4, 1),
(576, 12, 2, 2, 4, 1),
(577, 560, 2, 2, 4, 1),
(578, 561, 2, 2, 4, 3),
(579, 23, 2, 2, 4, 2),
(580, 562, 2, 2, 4, 3),
(581, 563, 2, 2, 4, 1),
(582, 20, 2, 2, 4, 0),
(583, 564, 2, 2, 3, 1),
(584, 565, 2, 2, 3, 1),
(585, 566, 2, 2, 3, 2),
(586, 567, 2, 2, 3, 3),
(587, 144, 2, 2, 3, 1),
(588, 568, 2, 2, 3, 1),
(589, 569, 2, 2, 3, 2),
(590, 570, 2, 2, 3, 2),
(591, 193, 2, 2, 3, 1),
(592, 30, 2, 2, 3, 2),
(593, 44, 2, 2, 3, 3),
(594, 15, 2, 2, 3, 0),
(595, 520, 2, 2, 3, 3),
(596, 571, 2, 2, 2, 2),
(597, 572, 2, 2, 2, 3),
(598, 573, 2, 2, 2, 1),
(599, 119, 2, 2, 2, 1),
(600, 574, 2, 2, 2, 2),
(601, 22, 2, 2, 2, 0),
(602, 34, 2, 2, 2, 0),
(603, 575, 2, 2, 2, 3),
(604, 576, 2, 2, 2, 2),
(605, 577, 2, 2, 2, 3),
(606, 578, 2, 2, 2, 1),
(607, 154, 2, 2, 2, 0),
(608, 579, 2, 2, 2, 3),
(609, 103, 2, 2, 2, 3),
(610, 74, 2, 2, 2, 0),
(611, 580, 2, 2, 2, 2),
(612, 581, 2, 2, 2, 3),
(613, 582, 2, 2, 2, 3),
(614, 465, 2, 2, 2, 3),
(615, 192, 2, 2, 2, 3),
(616, 444, 2, 2, 2, 1),
(617, 583, 2, 2, 2, 1),
(618, 65, 2, 2, 2, 0),
(619, 56, 2, 2, 2, 1),
(620, 584, 2, 2, 2, 3),
(621, 585, 2, 2, 2, 3),
(622, 105, 2, 2, 2, 3),
(623, 188, 2, 2, 2, 2),
(624, 586, 2, 2, 2, 3),
(625, 416, 2, 2, 2, 3),
(626, 587, 2, 2, 2, 3),
(627, 588, 2, 2, 2, 3),
(628, 589, 2, 2, 2, 1),
(629, 152, 2, 2, 2, 3),
(630, 590, 2, 2, 2, 1),
(631, 591, 2, 2, 2, 3),
(632, 41, 2, 2, 2, 0),
(633, 592, 2, 2, 2, 3),
(634, 195, 2, 2, 2, 0),
(635, 593, 2, 2, 2, 3),
(636, 14, 2, 2, 2, 2),
(637, 29, 2, 2, 2, 2),
(638, 594, 2, 2, 2, 3),
(639, 45, 2, 2, 2, 2),
(640, 595, 2, 2, 2, 3),
(641, 596, 2, 2, 2, 1),
(642, 597, 2, 2, 2, 3),
(643, 598, 2, 2, 2, 2),
(644, 115, 2, 2, 2, 3),
(645, 599, 2, 2, 2, 1),
(646, 101, 2, 2, 2, 2),
(647, 25, 2, 2, 2, 0),
(648, 600, 2, 2, 2, 3),
(649, 601, 2, 2, 2, 3),
(650, 602, 2, 2, 2, 3),
(651, 153, 2, 2, 2, 1),
(652, 603, 2, 2, 2, 3),
(653, 77, 2, 2, 2, 1),
(654, 604, 2, 2, 2, 2),
(655, 605, 2, 2, 2, 3),
(656, 606, 2, 2, 2, 3),
(657, 607, 2, 2, 2, 2),
(658, 608, 2, 2, 2, 1),
(659, 609, 2, 2, 1, 2),
(660, 610, 2, 2, 1, 1),
(661, 611, 2, 2, 1, 1),
(662, 612, 2, 2, 1, 3),
(663, 613, 2, 2, 1, 3),
(664, 614, 2, 2, 1, 1),
(665, 615, 2, 2, 1, 3),
(666, 616, 2, 2, 1, 3),
(667, 617, 2, 2, 1, 1),
(668, 221, 2, 2, 1, 2),
(669, 531, 2, 2, 1, 2),
(670, 618, 2, 2, 1, 1),
(671, 519, 2, 2, 1, 0),
(672, 619, 2, 2, 1, 1),
(673, 202, 2, 2, 1, 0),
(674, 386, 2, 2, 1, 1),
(675, 620, 2, 2, 1, 1),
(676, 621, 2, 2, 1, 3),
(677, 622, 2, 2, 1, 1),
(678, 623, 2, 2, 1, 3),
(679, 158, 2, 2, 1, 1),
(680, 624, 2, 2, 1, 2),
(681, 46, 2, 2, 1, 1),
(682, 244, 2, 2, 1, 3),
(683, 625, 2, 2, 1, 3),
(684, 626, 2, 2, 1, 2),
(685, 627, 2, 2, 1, 3),
(686, 628, 2, 2, 1, 3),
(687, 629, 2, 2, 1, 2),
(688, 630, 2, 2, 1, 2),
(689, 631, 2, 2, 1, 1),
(690, 632, 2, 2, 1, 1),
(691, 633, 2, 2, 1, 3),
(692, 634, 2, 2, 1, 3),
(693, 635, 2, 2, 1, 2),
(694, 636, 2, 2, 1, 1),
(695, 637, 2, 2, 1, 1),
(696, 638, 2, 2, 1, 3),
(697, 639, 2, 2, 1, 1),
(698, 640, 2, 2, 1, 2),
(699, 641, 2, 2, 1, 3),
(700, 33, 2, 2, 1, 3),
(701, 116, 2, 2, 1, 3),
(702, 642, 2, 2, 1, 2),
(703, 494, 2, 2, 1, 1),
(704, 643, 2, 2, 1, 1),
(705, 644, 2, 2, 1, 1),
(706, 645, 2, 2, 1, 1),
(707, 646, 2, 2, 1, 2),
(708, 647, 2, 2, 1, 3),
(709, 648, 2, 2, 1, 0),
(710, 266, 2, 2, 1, 0),
(711, 649, 2, 2, 1, 3),
(712, 650, 2, 2, 1, 3),
(713, 651, 2, 2, 1, 3),
(714, 652, 2, 2, 1, 3),
(715, 49, 2, 2, 1, 1),
(716, 653, 2, 2, 1, 2),
(717, 654, 2, 2, 1, 1),
(718, 655, 2, 2, 1, 3),
(719, 487, 2, 2, 1, 0),
(720, 656, 2, 2, 1, 1),
(721, 657, 2, 2, 1, 1),
(722, 658, 2, 2, 1, 3),
(723, 659, 2, 2, 1, 3),
(724, 660, 2, 2, 1, 1),
(725, 661, 2, 2, 1, 1),
(726, 662, 2, 2, 1, 1),
(727, 663, 2, 2, 1, 1),
(728, 664, 2, 2, 1, 3),
(729, 665, 2, 2, 1, 3),
(730, 666, 2, 2, 1, 3),
(731, 667, 2, 2, 1, 1),
(732, 668, 2, 2, 1, 3),
(733, 203, 2, 2, 1, 1),
(734, 669, 2, 2, 1, 3),
(735, 417, 2, 2, 1, 1),
(736, 670, 2, 2, 1, 1),
(737, 529, 2, 2, 1, 3),
(738, 671, 2, 2, 1, 3),
(739, 672, 2, 2, 1, 3),
(740, 673, 2, 2, 1, 1),
(741, 674, 2, 2, 1, 1),
(742, 19, 2, 2, 1, 3),
(743, 675, 2, 2, 1, 2),
(744, 448, 2, 2, 1, 1),
(745, 676, 2, 2, 1, 3),
(746, 32, 2, 2, 1, 1),
(747, 677, 2, 2, 1, 0),
(748, 678, 2, 2, 1, 3),
(749, 329, 2, 2, 1, 0),
(750, 679, 2, 2, 1, 2),
(751, 485, 2, 2, 1, 2),
(752, 37, 2, 2, 1, 3),
(753, 680, 2, 2, 1, 3),
(754, 681, 2, 2, 1, 1),
(755, 682, 2, 2, 1, 3),
(756, 683, 2, 2, 1, 1),
(757, 684, 2, 2, 1, 2),
(758, 685, 2, 2, 1, 1),
(759, 686, 2, 2, 1, 2),
(760, 687, 2, 2, 1, 2),
(761, 688, 2, 2, 1, 3),
(762, 18, 2, 2, 1, 1),
(763, 689, 2, 2, 1, 3),
(764, 460, 2, 2, 1, 2),
(765, 690, 2, 2, 1, 1),
(766, 691, 2, 2, 1, 3),
(767, 4, 2, 2, 1, 0),
(768, 92, 2, 2, 1, 3),
(769, 184, 2, 2, 1, 1),
(770, 692, 2, 2, 1, 0),
(771, 53, 2, 2, 1, 3),
(772, 693, 2, 2, 1, 3),
(773, 694, 2, 2, 1, 1),
(774, 695, 2, 2, 1, 1),
(775, 696, 2, 2, 1, 2),
(776, 697, 2, 2, 1, 1),
(777, 698, 2, 2, 1, 1),
(778, 699, 2, 2, 1, 1),
(779, 700, 2, 2, 1, 3),
(780, 64, 2, 2, 1, 3),
(781, 701, 2, 2, 1, 1),
(782, 702, 2, 2, 1, 2),
(783, 703, 2, 2, 1, 1),
(784, 704, 2, 2, 1, 2),
(785, 705, 2, 2, 1, 3),
(786, 706, 2, 2, 1, 2),
(787, 707, 2, 2, 1, 2),
(788, 708, 2, 2, 1, 1),
(789, 709, 2, 2, 1, 1),
(790, 710, 2, 2, 1, 2),
(791, 54, 2, 2, 1, 3),
(792, 711, 2, 2, 1, 1),
(793, 712, 2, 2, 1, 3),
(794, 713, 2, 2, 1, 2),
(795, 714, 2, 2, 1, 2),
(796, 715, 2, 2, 1, 3),
(797, 716, 2, 2, 1, 3),
(798, 717, 2, 2, 1, 1),
(799, 718, 2, 2, 1, 1),
(800, 719, 2, 2, 1, 1),
(801, 720, 2, 2, 1, 2),
(802, 721, 2, 2, 1, 3),
(803, 722, 2, 2, 1, 3),
(804, 723, 2, 2, 1, 3),
(805, 724, 2, 2, 1, 1),
(806, 725, 2, 2, 1, 2),
(807, 726, 2, 2, 1, 3),
(808, 727, 2, 2, 1, 3),
(809, 728, 2, 2, 1, 2),
(810, 168, 2, 2, 1, 0),
(811, 729, 2, 2, 1, 1),
(812, 730, 2, 2, 1, 2),
(813, 731, 2, 2, 1, 1),
(814, 732, 2, 2, 1, 3),
(815, 201, 2, 2, 1, 2),
(816, 88, 2, 2, 1, 1),
(817, 733, 2, 2, 1, 3),
(818, 734, 2, 2, 1, 1),
(819, 735, 2, 2, 1, 1),
(820, 736, 2, 2, 1, 1),
(821, 737, 2, 2, 1, 1),
(822, 738, 2, 2, 1, 3),
(823, 739, 2, 2, 1, 1),
(824, 740, 2, 2, 1, 3),
(825, 741, 2, 2, 1, 3),
(826, 742, 2, 2, 1, 3),
(827, 743, 2, 2, 1, 1),
(828, 744, 2, 2, 1, 1),
(829, 745, 2, 2, 1, 2),
(830, 746, 2, 2, 1, 3),
(831, 747, 2, 2, 1, 2),
(832, 748, 2, 2, 1, 3),
(833, 749, 2, 2, 1, 2),
(834, 750, 2, 2, 1, 3),
(835, 751, 2, 2, 1, 3),
(836, 752, 2, 2, 1, 2),
(837, 753, 2, 2, 1, 1),
(838, 754, 2, 2, 1, 3),
(839, 755, 2, 2, 1, 1),
(840, 8, 2, 2, 1, 3),
(841, 756, 2, 2, 1, 3),
(842, 91, 2, 2, 1, 1),
(843, 215, 2, 2, 1, 0),
(844, 757, 2, 2, 1, 1),
(845, 38, 2, 2, 1, 3),
(846, 758, 2, 2, 1, 3),
(847, 759, 2, 2, 1, 2),
(848, 90, 2, 2, 1, 1),
(849, 760, 2, 2, 1, 1),
(850, 761, 2, 2, 1, 3),
(851, 762, 2, 2, 1, 3),
(852, 763, 2, 2, 1, 2),
(853, 764, 2, 2, 1, 3),
(854, 16, 2, 2, 1, 0),
(855, 765, 2, 2, 1, 3),
(856, 766, 2, 2, 1, 2),
(857, 767, 2, 2, 1, 2),
(858, 328, 2, 2, 1, 2),
(859, 768, 2, 2, 1, 1),
(860, 769, 2, 2, 1, 3),
(861, 770, 2, 2, 1, 3),
(862, 121, 2, 2, 1, 2),
(863, 771, 2, 2, 1, 3),
(864, 772, 2, 2, 1, 1),
(865, 773, 2, 2, 1, 1),
(866, 774, 2, 2, 1, 3),
(867, 775, 2, 2, 1, 1),
(868, 236, 2, 2, 1, 3),
(869, 776, 2, 2, 1, 2),
(870, 777, 2, 2, 1, 1),
(871, 778, 2, 2, 1, 3),
(872, 779, 2, 2, 1, 3),
(873, 780, 2, 2, 1, 1),
(874, 781, 2, 2, 1, 2),
(875, 782, 2, 2, 1, 2),
(876, 783, 2, 2, 1, 3),
(877, 784, 2, 2, 1, 3),
(878, 785, 2, 2, 1, 3),
(879, 786, 2, 2, 1, 1),
(880, 787, 2, 2, 1, 2),
(881, 788, 2, 2, 1, 1),
(882, 789, 2, 2, 1, 3),
(883, 790, 2, 2, 1, 3),
(884, 791, 2, 2, 1, 2),
(885, 792, 2, 2, 1, 3),
(886, 47, 2, 2, 1, 3),
(887, 793, 2, 2, 1, 1),
(888, 63, 2, 2, 1, 1),
(889, 794, 2, 2, 1, 1),
(890, 795, 2, 2, 1, 1),
(891, 796, 2, 2, 1, 3),
(892, 797, 2, 2, 1, 1),
(893, 798, 2, 2, 1, 3),
(894, 799, 2, 2, 1, 1),
(895, 234, 2, 2, 1, 3),
(896, 800, 2, 2, 1, 2),
(897, 172, 2, 2, 1, 1),
(898, 801, 2, 2, 1, 3),
(899, 449, 2, 2, 1, 3),
(900, 802, 2, 2, 1, 2),
(901, 803, 2, 2, 1, 3),
(902, 804, 2, 2, 1, 3),
(903, 805, 2, 2, 1, 1),
(904, 806, 2, 2, 1, 1),
(905, 807, 2, 2, 1, 3),
(906, 808, 2, 2, 1, 1),
(907, 809, 2, 2, 1, 1),
(908, 810, 2, 2, 1, 1),
(909, 811, 2, 2, 1, 1),
(910, 424, 2, 2, 1, 1),
(911, 812, 2, 2, 1, 1),
(912, 813, 2, 2, 1, 3),
(913, 814, 2, 2, 1, 2),
(914, 815, 2, 2, 1, 3),
(915, 816, 2, 2, 1, 3),
(916, 817, 2, 2, 1, 2),
(917, 818, 2, 2, 1, 3),
(918, 361, 2, 2, 1, 1),
(919, 819, 2, 2, 1, 2),
(920, 820, 2, 2, 1, 2),
(921, 821, 2, 2, 1, 1),
(922, 822, 2, 2, 1, 3),
(923, 823, 2, 2, 1, 2),
(924, 824, 2, 2, 1, 2),
(925, 456, 2, 2, 1, 3),
(926, 825, 2, 2, 1, 2),
(927, 826, 2, 2, 1, 1),
(928, 827, 2, 2, 1, 3),
(929, 97, 2, 2, 1, 1),
(930, 828, 2, 2, 1, 1),
(931, 829, 2, 2, 1, 2),
(932, 134, 2, 2, 1, 1),
(933, 146, 2, 2, 1, 1),
(934, 458, 2, 2, 1, 2),
(935, 250, 2, 2, 1, 2),
(936, 830, 2, 2, 1, 3),
(937, 831, 2, 2, 1, 1),
(938, 832, 2, 2, 1, 3),
(939, 833, 2, 2, 1, 1),
(940, 24, 2, 2, 1, 2),
(941, 834, 2, 2, 1, 1),
(942, 835, 2, 2, 1, 3),
(943, 836, 2, 2, 1, 3),
(944, 837, 2, 2, 1, 3),
(945, 838, 2, 2, 1, 2),
(946, 839, 2, 2, 1, 3),
(947, 840, 2, 2, 1, 3),
(948, 841, 2, 2, 1, 1),
(949, 842, 2, 2, 1, 2),
(950, 843, 2, 2, 1, 2),
(951, 844, 2, 2, 1, 0),
(952, 845, 2, 2, 1, 2),
(953, 846, 2, 2, 1, 3),
(954, 847, 2, 2, 1, 3),
(955, 848, 2, 2, 1, 1),
(956, 849, 2, 2, 1, 2),
(957, 850, 2, 2, 1, 1),
(958, 851, 2, 2, 1, 3),
(959, 852, 2, 2, 1, 3),
(960, 307, 2, 2, 1, 1),
(961, 853, 2, 2, 1, 3),
(962, 854, 2, 2, 1, 3),
(963, 855, 2, 2, 1, 3),
(964, 856, 2, 2, 1, 2),
(965, 51, 2, 2, 1, 3),
(966, 857, 2, 2, 1, 3),
(967, 7, 2, 3, 19, 0),
(968, 3, 2, 3, 18, 0),
(969, 1, 2, 3, 15, 0),
(970, 858, 2, 3, 15, 1),
(971, 45, 2, 3, 10, 2),
(972, 859, 2, 3, 10, 3),
(973, 860, 2, 3, 10, 1),
(974, 5, 2, 3, 9, 0),
(975, 17, 2, 3, 8, 1),
(976, 98, 2, 3, 8, 1),
(977, 9, 2, 3, 6, 2),
(978, 65, 2, 3, 6, 0),
(979, 861, 2, 3, 6, 3),
(980, 52, 2, 3, 5, 1),
(981, 862, 2, 3, 5, 1),
(982, 119, 2, 3, 5, 1),
(983, 863, 2, 3, 5, 3),
(984, 550, 2, 3, 5, 3),
(985, 14, 2, 3, 5, 2),
(986, 27, 2, 3, 5, 1),
(987, 864, 2, 3, 5, 1),
(988, 865, 2, 3, 4, 3),
(989, 28, 2, 3, 4, 0),
(990, 866, 2, 3, 4, 3),
(991, 30, 2, 3, 4, 2),
(992, 867, 2, 3, 4, 1),
(993, 868, 2, 3, 4, 1),
(994, 869, 2, 3, 4, 1),
(995, 192, 2, 3, 4, 3),
(996, 76, 2, 3, 4, 1),
(997, 870, 2, 3, 4, 1),
(998, 337, 2, 3, 3, 1),
(999, 23, 2, 3, 3, 2),
(1000, 871, 2, 3, 3, 1),
(1001, 364, 2, 3, 3, 3),
(1002, 19, 2, 3, 3, 3),
(1003, 91, 2, 3, 3, 1),
(1004, 118, 2, 3, 3, 3),
(1005, 12, 2, 3, 3, 1),
(1006, 24, 2, 3, 3, 2),
(1007, 117, 2, 3, 3, 1),
(1008, 11, 2, 3, 3, 1),
(1009, 872, 2, 3, 3, 2),
(1010, 873, 2, 3, 3, 3),
(1011, 874, 2, 3, 3, 1),
(1012, 875, 2, 3, 3, 1),
(1013, 876, 2, 3, 3, 3),
(1014, 877, 2, 3, 3, 1),
(1015, 878, 2, 3, 3, 3),
(1016, 143, 2, 3, 3, 1),
(1017, 879, 2, 3, 3, 1),
(1018, 310, 2, 3, 3, 2),
(1019, 880, 2, 3, 3, 3),
(1020, 86, 2, 3, 3, 3),
(1021, 755, 2, 3, 3, 1),
(1022, 881, 2, 3, 3, 1),
(1023, 74, 2, 3, 3, 0),
(1024, 882, 2, 3, 3, 0),
(1025, 18, 2, 3, 3, 1),
(1026, 883, 2, 3, 3, 1),
(1027, 25, 2, 3, 3, 0),
(1028, 115, 2, 3, 2, 3),
(1029, 708, 2, 3, 2, 1),
(1030, 884, 2, 3, 2, 3),
(1031, 401, 2, 3, 2, 1),
(1032, 188, 2, 3, 2, 2),
(1033, 885, 2, 3, 2, 1),
(1034, 79, 2, 3, 2, 0),
(1035, 886, 2, 3, 2, 1),
(1036, 887, 2, 3, 2, 1),
(1037, 888, 2, 3, 2, 3),
(1038, 889, 2, 3, 2, 1),
(1039, 266, 2, 3, 2, 0),
(1040, 890, 2, 3, 2, 1),
(1041, 891, 2, 3, 2, 1),
(1042, 271, 2, 3, 2, 1),
(1043, 15, 2, 3, 2, 0),
(1044, 520, 2, 3, 2, 3),
(1045, 892, 2, 3, 2, 1),
(1046, 803, 2, 3, 2, 3),
(1047, 893, 2, 3, 2, 1),
(1048, 894, 2, 3, 2, 1),
(1049, 895, 2, 3, 2, 2),
(1050, 896, 2, 3, 2, 1),
(1051, 897, 2, 3, 2, 2),
(1052, 898, 2, 3, 2, 1),
(1053, 899, 2, 3, 2, 3),
(1054, 690, 2, 3, 2, 1),
(1055, 900, 2, 3, 2, 1),
(1056, 624, 2, 3, 2, 2),
(1057, 16, 2, 3, 2, 0),
(1058, 844, 2, 3, 2, 0),
(1059, 901, 2, 3, 2, 1),
(1060, 449, 2, 3, 2, 3),
(1061, 144, 2, 3, 2, 1),
(1062, 902, 2, 3, 2, 3),
(1063, 903, 2, 3, 2, 3),
(1064, 904, 2, 3, 2, 1),
(1065, 905, 2, 3, 2, 3),
(1066, 906, 2, 3, 2, 1),
(1067, 154, 2, 3, 2, 0),
(1068, 907, 2, 3, 2, 2),
(1069, 51, 2, 3, 2, 3),
(1070, 575, 2, 3, 2, 3),
(1071, 62, 2, 3, 2, 1),
(1072, 908, 2, 3, 2, 3),
(1073, 592, 2, 3, 2, 3),
(1074, 61, 2, 3, 2, 1),
(1075, 549, 2, 3, 2, 3),
(1076, 153, 2, 3, 2, 1),
(1077, 909, 2, 3, 2, 3),
(1078, 41, 2, 3, 2, 0),
(1079, 910, 2, 3, 2, 1),
(1080, 911, 2, 3, 2, 1),
(1081, 88, 2, 3, 2, 1),
(1082, 912, 2, 3, 2, 0),
(1083, 913, 2, 3, 2, 1),
(1084, 914, 2, 3, 2, 3),
(1085, 915, 2, 3, 2, 1),
(1086, 916, 2, 3, 2, 2),
(1087, 917, 2, 3, 2, 3),
(1088, 918, 2, 3, 2, 1),
(1089, 919, 2, 3, 2, 1),
(1090, 920, 2, 3, 2, 3),
(1091, 921, 2, 3, 2, 1),
(1092, 922, 2, 3, 2, 1),
(1093, 923, 2, 3, 2, 3),
(1094, 615, 2, 3, 1, 3),
(1095, 924, 2, 3, 1, 3),
(1096, 551, 2, 3, 1, 3),
(1097, 925, 2, 3, 1, 1),
(1098, 926, 2, 3, 1, 1),
(1099, 182, 2, 3, 1, 2),
(1100, 6, 2, 3, 1, 0),
(1101, 927, 2, 3, 1, 2),
(1102, 928, 2, 3, 1, 1),
(1103, 929, 2, 3, 1, 3),
(1104, 930, 2, 3, 1, 1),
(1105, 931, 2, 3, 1, 1),
(1106, 578, 2, 3, 1, 1),
(1107, 693, 2, 3, 1, 3),
(1108, 932, 2, 3, 1, 3),
(1109, 933, 2, 3, 1, 1),
(1110, 934, 2, 3, 1, 3),
(1111, 935, 2, 3, 1, 1),
(1112, 936, 2, 3, 1, 1),
(1113, 937, 2, 3, 1, 1),
(1114, 938, 2, 3, 1, 1),
(1115, 939, 2, 3, 1, 1),
(1116, 940, 2, 3, 1, 1),
(1117, 941, 2, 3, 1, 1),
(1118, 942, 2, 3, 1, 1),
(1119, 943, 2, 3, 1, 1),
(1120, 811, 2, 3, 1, 1),
(1121, 944, 2, 3, 1, 1),
(1122, 945, 2, 3, 1, 1),
(1123, 946, 2, 3, 1, 1),
(1124, 947, 2, 3, 1, 1),
(1125, 948, 2, 3, 1, 1),
(1126, 949, 2, 3, 1, 1),
(1127, 950, 2, 3, 1, 1),
(1128, 951, 2, 3, 1, 1),
(1129, 952, 2, 3, 1, 1),
(1130, 953, 2, 3, 1, 1),
(1131, 954, 2, 3, 1, 1),
(1132, 955, 2, 3, 1, 1),
(1133, 956, 2, 3, 1, 1),
(1134, 957, 2, 3, 1, 3),
(1135, 958, 2, 3, 1, 1),
(1136, 959, 2, 3, 1, 1),
(1137, 960, 2, 3, 1, 1),
(1138, 961, 2, 3, 1, 1),
(1139, 962, 2, 3, 1, 3),
(1140, 963, 2, 3, 1, 1),
(1141, 964, 2, 3, 1, 1),
(1142, 965, 2, 3, 1, 1),
(1143, 966, 2, 3, 1, 1),
(1144, 967, 2, 3, 1, 1),
(1145, 968, 2, 3, 1, 1),
(1146, 969, 2, 3, 1, 1),
(1147, 278, 2, 3, 1, 1),
(1148, 970, 2, 3, 1, 1),
(1149, 971, 2, 3, 1, 1),
(1150, 972, 2, 3, 1, 1),
(1151, 973, 2, 3, 1, 2),
(1152, 775, 2, 3, 1, 1),
(1153, 974, 2, 3, 1, 1),
(1154, 33, 2, 3, 1, 3),
(1155, 975, 2, 3, 1, 1),
(1156, 976, 2, 3, 1, 1),
(1157, 977, 2, 3, 1, 1),
(1158, 978, 2, 3, 1, 3),
(1159, 979, 2, 3, 1, 1),
(1160, 980, 2, 3, 1, 1),
(1161, 981, 2, 3, 1, 1),
(1162, 36, 2, 3, 1, 1),
(1163, 982, 2, 3, 1, 3),
(1164, 983, 2, 3, 1, 3),
(1165, 984, 2, 3, 1, 2),
(1166, 396, 2, 3, 1, 1),
(1167, 985, 2, 3, 1, 2),
(1168, 986, 2, 3, 1, 1),
(1169, 987, 2, 3, 1, 3),
(1170, 72, 2, 3, 1, 0),
(1171, 988, 2, 3, 1, 3),
(1172, 989, 2, 3, 1, 1),
(1173, 990, 2, 3, 1, 1),
(1174, 991, 2, 3, 1, 1),
(1175, 992, 2, 3, 1, 2),
(1176, 993, 2, 3, 1, 3),
(1177, 994, 2, 3, 1, 3),
(1178, 995, 2, 3, 1, 1),
(1179, 29, 2, 3, 1, 2),
(1180, 996, 2, 3, 1, 1),
(1181, 997, 2, 3, 1, 1),
(1182, 998, 2, 3, 1, 1),
(1183, 999, 2, 3, 1, 3),
(1184, 1000, 2, 3, 1, 3),
(1185, 1001, 2, 3, 1, 1),
(1186, 1002, 2, 3, 1, 1),
(1187, 152, 2, 3, 1, 3),
(1188, 1003, 2, 3, 1, 1),
(1189, 1004, 2, 3, 1, 2),
(1190, 1005, 2, 3, 1, 2),
(1191, 202, 2, 3, 1, 0),
(1192, 1006, 2, 3, 1, 3),
(1193, 558, 2, 3, 1, 3),
(1194, 55, 2, 3, 1, 1),
(1195, 1007, 2, 3, 1, 3),
(1196, 659, 2, 3, 1, 3),
(1197, 1008, 2, 3, 1, 2),
(1198, 1009, 2, 3, 1, 3),
(1199, 1010, 2, 3, 1, 2),
(1200, 741, 2, 3, 1, 3),
(1201, 1011, 2, 3, 1, 1),
(1202, 1012, 2, 3, 1, 3),
(1203, 1013, 2, 3, 1, 1),
(1204, 1014, 2, 3, 1, 1),
(1205, 1015, 2, 3, 1, 3),
(1206, 1016, 2, 3, 1, 3),
(1207, 1017, 2, 3, 1, 3),
(1208, 436, 2, 3, 1, 0),
(1209, 1018, 2, 3, 1, 1),
(1210, 1019, 2, 3, 1, 2),
(1211, 1020, 2, 3, 1, 3),
(1212, 1021, 2, 3, 1, 3),
(1213, 1022, 2, 3, 1, 3),
(1214, 1023, 2, 3, 1, 1),
(1215, 1024, 2, 3, 1, 2),
(1216, 1025, 2, 3, 1, 1),
(1217, 35, 2, 3, 1, 1),
(1218, 77, 2, 3, 1, 1),
(1219, 1026, 2, 3, 1, 1),
(1220, 1027, 2, 3, 1, 3),
(1221, 1028, 2, 3, 1, 1),
(1222, 1029, 2, 3, 1, 1),
(1223, 1030, 2, 3, 1, 1),
(1224, 1031, 2, 3, 1, 3),
(1225, 1032, 2, 3, 1, 1),
(1226, 1033, 2, 3, 1, 1),
(1227, 1034, 2, 3, 1, 2),
(1228, 1035, 2, 3, 1, 1),
(1229, 1036, 2, 3, 1, 1),
(1230, 1037, 2, 3, 1, 2),
(1231, 1038, 2, 3, 1, 2),
(1232, 1039, 2, 3, 1, 2),
(1233, 31, 2, 3, 1, 0),
(1234, 56, 2, 3, 1, 1),
(1235, 205, 2, 3, 1, 3),
(1236, 1040, 2, 3, 1, 1),
(1237, 1041, 2, 3, 1, 1),
(1238, 1042, 2, 3, 1, 1),
(1239, 1043, 2, 3, 1, 1),
(1240, 1044, 2, 3, 1, 1),
(1241, 1045, 2, 3, 1, 1),
(1242, 1046, 2, 3, 1, 1),
(1243, 1047, 2, 3, 1, 1),
(1244, 1048, 2, 3, 1, 1),
(1245, 1049, 2, 3, 1, 1),
(1246, 1050, 2, 3, 1, 1),
(1247, 1051, 2, 3, 1, 1),
(1248, 1052, 2, 3, 1, 2),
(1249, 1053, 2, 3, 1, 3),
(1250, 636, 2, 3, 1, 1),
(1251, 1054, 2, 3, 1, 1),
(1252, 1055, 2, 3, 1, 3),
(1253, 1056, 2, 3, 1, 3),
(1254, 1057, 2, 3, 1, 1),
(1255, 1058, 2, 3, 1, 3),
(1256, 692, 2, 3, 1, 0),
(1257, 1059, 2, 3, 1, 3),
(1258, 1060, 2, 3, 1, 1),
(1259, 1061, 2, 3, 1, 1),
(1260, 1062, 2, 3, 1, 1),
(1261, 1063, 2, 3, 1, 1),
(1262, 1064, 2, 3, 1, 1),
(1263, 1065, 2, 3, 1, 1),
(1264, 1066, 2, 3, 1, 1),
(1265, 1067, 2, 3, 1, 1),
(1266, 1068, 2, 3, 1, 1),
(1267, 1069, 2, 3, 1, 1),
(1268, 1070, 2, 3, 1, 1),
(1269, 1071, 2, 3, 1, 1),
(1270, 1072, 2, 3, 1, 1),
(1271, 1073, 2, 3, 1, 1),
(1272, 1074, 2, 3, 1, 1),
(1273, 1075, 2, 3, 1, 1),
(1274, 1076, 2, 3, 1, 1),
(1275, 1077, 2, 3, 1, 1),
(1276, 126, 2, 3, 1, 1),
(1277, 1078, 2, 3, 1, 1),
(1278, 1079, 2, 3, 1, 1),
(1279, 1080, 2, 3, 1, 1),
(1280, 1081, 2, 3, 1, 1),
(1281, 1082, 2, 3, 1, 1),
(1282, 1083, 2, 3, 1, 2),
(1283, 1084, 2, 3, 1, 3),
(1284, 1085, 2, 3, 1, 2),
(1285, 1086, 2, 3, 1, 3),
(1286, 1087, 2, 3, 1, 1),
(1287, 1088, 2, 3, 1, 0),
(1288, 1089, 2, 3, 1, 3),
(1289, 1090, 2, 3, 1, 3),
(1290, 1091, 2, 3, 1, 1),
(1291, 82, 2, 3, 1, 2),
(1292, 1092, 2, 3, 1, 1),
(1293, 112, 2, 3, 1, 3),
(1294, 1093, 2, 3, 1, 1),
(1295, 1094, 2, 3, 1, 3),
(1296, 1095, 2, 3, 1, 2),
(1297, 1096, 2, 3, 1, 3),
(1298, 1097, 2, 3, 1, 0),
(1299, 1098, 2, 3, 1, 1),
(1300, 1099, 2, 3, 1, 1),
(1301, 32, 2, 3, 1, 1),
(1302, 1100, 2, 3, 1, 1),
(1303, 1101, 2, 3, 1, 2),
(1304, 1102, 2, 3, 1, 1),
(1305, 1103, 2, 3, 1, 3),
(1306, 722, 2, 3, 1, 3),
(1307, 789, 2, 3, 1, 3),
(1308, 1104, 2, 3, 1, 2),
(1309, 1105, 2, 3, 1, 2),
(1310, 1106, 2, 3, 1, 1),
(1311, 168, 2, 3, 1, 0),
(1312, 180, 2, 3, 1, 2),
(1313, 54, 2, 3, 1, 3),
(1314, 22, 2, 3, 1, 0),
(1315, 1107, 2, 3, 1, 1),
(1316, 1108, 2, 3, 1, 1),
(1317, 1109, 2, 3, 1, 1),
(1318, 99, 2, 3, 1, 2),
(1319, 1110, 2, 3, 1, 0),
(1320, 765, 2, 3, 1, 3),
(1321, 1111, 2, 3, 1, 1),
(1322, 378, 2, 3, 1, 0),
(1323, 1112, 2, 3, 1, 1),
(1324, 1113, 2, 3, 1, 3),
(1325, 799, 2, 3, 1, 1),
(1326, 1114, 2, 3, 1, 3),
(1327, 1115, 2, 3, 1, 1),
(1328, 1116, 2, 3, 1, 1),
(1329, 1117, 2, 3, 1, 1),
(1330, 1118, 2, 3, 1, 1),
(1331, 1119, 2, 3, 1, 1),
(1332, 1120, 2, 3, 1, 1),
(1333, 1121, 2, 3, 1, 3),
(1334, 1122, 2, 3, 1, 3),
(1335, 1123, 2, 3, 1, 1),
(1336, 1124, 2, 3, 1, 1),
(1337, 1125, 2, 3, 1, 1),
(1338, 20, 2, 3, 1, 0),
(1339, 1126, 2, 3, 1, 1),
(1340, 1127, 2, 3, 1, 1),
(1341, 1128, 2, 3, 1, 1),
(1342, 1129, 2, 3, 1, 1),
(1343, 1130, 2, 3, 1, 1),
(1344, 1131, 2, 3, 1, 1),
(1345, 1132, 2, 3, 1, 1),
(1346, 1133, 2, 3, 1, 1),
(1347, 1134, 2, 3, 1, 1),
(1348, 1135, 2, 3, 1, 1),
(1349, 1136, 2, 3, 1, 1),
(1350, 1137, 2, 3, 1, 1),
(1351, 1138, 2, 3, 1, 1),
(1352, 1139, 2, 3, 1, 1),
(1353, 1140, 2, 3, 1, 3),
(1354, 1141, 2, 3, 1, 1),
(1355, 1142, 2, 3, 1, 1),
(1356, 1143, 2, 3, 1, 1),
(1357, 1144, 2, 3, 1, 1),
(1358, 1145, 2, 3, 1, 1),
(1359, 1146, 2, 3, 1, 1),
(1360, 1147, 2, 3, 1, 1),
(1361, 1148, 2, 3, 1, 1),
(1362, 1149, 2, 3, 1, 1),
(1363, 1150, 2, 3, 1, 1),
(1364, 1151, 2, 3, 1, 1),
(1365, 608, 2, 3, 1, 1),
(1366, 567, 2, 3, 1, 3),
(1367, 1152, 2, 3, 1, 1),
(1368, 1153, 2, 3, 1, 1),
(1369, 1154, 2, 3, 1, 1),
(1370, 1155, 2, 3, 1, 1),
(1371, 1156, 2, 3, 1, 1),
(1372, 1157, 2, 3, 1, 1),
(1373, 1158, 2, 3, 1, 1),
(1374, 1159, 2, 3, 1, 1),
(1375, 1160, 2, 3, 1, 1),
(1376, 1161, 2, 3, 1, 1),
(1377, 1162, 2, 3, 1, 3),
(1378, 1163, 2, 3, 1, 1),
(1379, 384, 2, 3, 1, 2),
(1380, 1164, 2, 3, 1, 1),
(1381, 1165, 2, 3, 1, 1),
(1382, 505, 2, 3, 1, 1),
(1383, 1166, 2, 3, 1, 1),
(1384, 1167, 2, 3, 1, 3),
(1385, 1168, 2, 3, 1, 3),
(1386, 1169, 2, 3, 1, 1),
(1387, 1170, 2, 3, 1, 1),
(1388, 1171, 2, 3, 1, 1),
(1389, 1172, 2, 3, 1, 1),
(1390, 1173, 2, 3, 1, 1),
(1391, 1174, 2, 3, 1, 1),
(1392, 1175, 2, 3, 1, 1),
(1393, 1176, 2, 3, 1, 1),
(1394, 1177, 2, 3, 1, 1),
(1395, 1178, 2, 3, 1, 1),
(1396, 146, 2, 3, 1, 1),
(1397, 193, 2, 3, 1, 1),
(1398, 1179, 2, 3, 1, 1),
(1399, 1180, 2, 3, 1, 1),
(1400, 37, 2, 3, 1, 3),
(1401, 1181, 2, 3, 1, 2),
(1402, 1182, 2, 3, 1, 2),
(1403, 1183, 2, 3, 1, 1),
(1404, 1184, 2, 3, 1, 1),
(1405, 1185, 2, 3, 1, 1),
(1406, 1186, 2, 3, 1, 1),
(1407, 1187, 2, 3, 1, 3),
(1408, 675, 2, 3, 1, 2),
(1409, 1188, 2, 3, 1, 3),
(1410, 1189, 2, 3, 1, 3),
(1411, 1190, 2, 3, 1, 2),
(1412, 105, 2, 3, 1, 3),
(1413, 1191, 2, 3, 1, 3),
(1414, 1192, 2, 3, 1, 1),
(1415, 246, 2, 3, 1, 3),
(1416, 1193, 2, 3, 1, 3),
(1417, 594, 2, 3, 1, 3),
(1418, 1194, 2, 3, 1, 1),
(1419, 1195, 2, 3, 1, 1),
(1420, 1196, 2, 3, 1, 1),
(1421, 1197, 2, 3, 1, 1),
(1422, 3, 2, 4, 17, 0),
(1423, 634, 2, 4, 15, 3),
(1424, 1, 2, 4, 14, 0),
(1425, 2, 2, 4, 14, 0),
(1426, 595, 2, 4, 13, 3),
(1427, 425, 2, 4, 11, 3),
(1428, 9, 2, 4, 10, 2),
(1429, 1010, 2, 4, 9, 2),
(1430, 1198, 2, 4, 8, 1),
(1431, 1199, 2, 4, 8, 3),
(1432, 1200, 2, 4, 7, 2),
(1433, 185, 2, 4, 7, 3),
(1434, 7, 2, 4, 7, 0),
(1435, 12, 2, 4, 7, 1),
(1436, 1201, 2, 4, 6, 2),
(1437, 16, 2, 4, 6, 0),
(1438, 21, 2, 4, 6, 0),
(1439, 5, 2, 4, 6, 0),
(1440, 144, 2, 4, 5, 1),
(1441, 1202, 2, 4, 5, 3),
(1442, 664, 2, 4, 5, 3),
(1443, 46, 2, 4, 4, 1),
(1444, 181, 2, 4, 4, 3),
(1445, 76, 2, 4, 4, 1),
(1446, 522, 2, 4, 4, 1),
(1447, 28, 2, 4, 4, 0),
(1448, 31, 2, 4, 4, 0),
(1449, 1203, 2, 4, 3, 1),
(1450, 105, 2, 4, 3, 3),
(1451, 36, 2, 4, 3, 1),
(1452, 49, 2, 4, 3, 1),
(1453, 41, 2, 4, 3, 0),
(1454, 563, 2, 4, 3, 1),
(1455, 103, 2, 4, 3, 3),
(1456, 578, 2, 4, 3, 1),
(1457, 56, 2, 4, 3, 1),
(1458, 608, 2, 4, 3, 1),
(1459, 124, 2, 4, 3, 2),
(1460, 77, 2, 4, 3, 1),
(1461, 485, 2, 4, 3, 2),
(1462, 65, 2, 4, 3, 0),
(1463, 61, 2, 4, 3, 1),
(1464, 1204, 2, 4, 2, 1),
(1465, 1205, 2, 4, 2, 1),
(1466, 465, 2, 4, 2, 3),
(1467, 1206, 2, 4, 2, 1),
(1468, 196, 2, 4, 2, 2),
(1469, 1207, 2, 4, 2, 1),
(1470, 231, 2, 4, 2, 3),
(1471, 44, 2, 4, 2, 3),
(1472, 1208, 2, 4, 2, 1),
(1473, 146, 2, 4, 2, 1),
(1474, 179, 2, 4, 2, 2),
(1475, 205, 2, 4, 2, 3),
(1476, 657, 2, 4, 2, 1),
(1477, 1209, 2, 4, 2, 1),
(1478, 207, 2, 4, 2, 3),
(1479, 692, 2, 4, 2, 0),
(1480, 22, 2, 4, 2, 0),
(1481, 1210, 2, 4, 2, 1),
(1482, 1211, 2, 4, 2, 2),
(1483, 1212, 2, 4, 2, 1),
(1484, 400, 2, 4, 2, 3),
(1485, 1213, 2, 4, 2, 1),
(1486, 153, 2, 4, 2, 1),
(1487, 1214, 2, 4, 2, 3),
(1488, 1027, 2, 4, 2, 3),
(1489, 1215, 2, 4, 2, 1),
(1490, 37, 2, 4, 2, 3),
(1491, 1216, 2, 4, 2, 3),
(1492, 184, 2, 4, 2, 1),
(1493, 266, 2, 4, 2, 0),
(1494, 15, 2, 4, 2, 0),
(1495, 592, 2, 4, 2, 3),
(1496, 1217, 2, 4, 2, 3),
(1497, 101, 2, 4, 2, 2),
(1498, 1218, 2, 4, 2, 1),
(1499, 1219, 2, 4, 2, 2),
(1500, 1097, 2, 4, 2, 0),
(1501, 1220, 2, 4, 2, 1),
(1502, 722, 2, 4, 2, 3),
(1503, 215, 2, 4, 2, 0),
(1504, 1221, 2, 4, 2, 3),
(1505, 882, 2, 4, 2, 0),
(1506, 757, 2, 4, 2, 1),
(1507, 23, 2, 4, 2, 2),
(1508, 1222, 2, 4, 2, 3),
(1509, 70, 2, 4, 2, 1),
(1510, 504, 2, 4, 2, 2),
(1511, 999, 2, 4, 2, 3),
(1512, 1223, 2, 4, 2, 1),
(1513, 1224, 2, 4, 2, 3),
(1514, 331, 2, 4, 2, 2),
(1515, 1225, 2, 4, 2, 3),
(1516, 55, 2, 4, 2, 1),
(1517, 842, 2, 4, 2, 2),
(1518, 1226, 2, 4, 2, 1),
(1519, 1168, 2, 4, 2, 3),
(1520, 140, 2, 4, 2, 2),
(1521, 47, 2, 4, 2, 3),
(1522, 1227, 2, 4, 1, 3),
(1523, 1228, 2, 4, 1, 3),
(1524, 1229, 2, 4, 1, 3),
(1525, 1230, 2, 4, 1, 1),
(1526, 1231, 2, 4, 1, 3),
(1527, 1232, 2, 4, 1, 1),
(1528, 675, 2, 4, 1, 2),
(1529, 1233, 2, 4, 1, 3),
(1530, 1234, 2, 4, 1, 1),
(1531, 1235, 2, 4, 1, 3),
(1532, 34, 2, 4, 1, 0),
(1533, 1236, 2, 4, 1, 1),
(1534, 1237, 2, 4, 1, 3),
(1535, 809, 2, 4, 1, 1),
(1536, 416, 2, 4, 1, 3),
(1537, 1238, 2, 4, 1, 2),
(1538, 1239, 2, 4, 1, 3),
(1539, 1240, 2, 4, 1, 3),
(1540, 458, 2, 4, 1, 2),
(1541, 82, 2, 4, 1, 2),
(1542, 1241, 2, 4, 1, 3),
(1543, 481, 2, 4, 1, 1),
(1544, 1242, 2, 4, 1, 1),
(1545, 1082, 2, 4, 1, 1),
(1546, 1243, 2, 4, 1, 1),
(1547, 1244, 2, 4, 1, 1),
(1548, 1245, 2, 4, 1, 3),
(1549, 79, 2, 4, 1, 0),
(1550, 1246, 2, 4, 1, 3),
(1551, 1247, 2, 4, 1, 3),
(1552, 611, 2, 4, 1, 1),
(1553, 1248, 2, 4, 1, 2),
(1554, 332, 2, 4, 1, 3),
(1555, 1249, 2, 4, 1, 3),
(1556, 1250, 2, 4, 1, 2),
(1557, 192, 2, 4, 1, 3),
(1558, 1251, 2, 4, 1, 3),
(1559, 1252, 2, 4, 1, 1),
(1560, 1253, 2, 4, 1, 1),
(1561, 1254, 2, 4, 1, 3),
(1562, 1255, 2, 4, 1, 2),
(1563, 1256, 2, 4, 1, 3),
(1564, 1257, 2, 4, 1, 3),
(1565, 1258, 2, 4, 1, 1),
(1566, 1259, 2, 4, 1, 2),
(1567, 604, 2, 4, 1, 2),
(1568, 1260, 2, 4, 1, 1),
(1569, 1261, 2, 4, 1, 3),
(1570, 1262, 2, 4, 1, 1),
(1571, 357, 2, 4, 1, 1),
(1572, 1263, 2, 4, 1, 2),
(1573, 1264, 2, 4, 1, 3),
(1574, 1265, 2, 4, 1, 0),
(1575, 1266, 2, 4, 1, 2),
(1576, 1267, 2, 4, 1, 1),
(1577, 354, 2, 4, 1, 0),
(1578, 14, 2, 4, 1, 2),
(1579, 1268, 2, 4, 1, 3),
(1580, 1269, 2, 4, 1, 3),
(1581, 112, 2, 4, 1, 3),
(1582, 1270, 2, 4, 1, 2),
(1583, 1271, 2, 4, 1, 3),
(1584, 1272, 2, 4, 1, 2),
(1585, 168, 2, 4, 1, 0),
(1586, 62, 2, 4, 1, 1),
(1587, 1273, 2, 4, 1, 3),
(1588, 679, 2, 4, 1, 2),
(1589, 1274, 2, 4, 1, 1),
(1590, 1275, 2, 4, 1, 1),
(1591, 1276, 2, 4, 1, 1),
(1592, 919, 2, 4, 1, 1),
(1593, 234, 2, 4, 1, 3),
(1594, 1277, 2, 4, 1, 2),
(1595, 1278, 2, 4, 1, 3),
(1596, 114, 2, 4, 1, 2),
(1597, 475, 2, 4, 1, 2),
(1598, 688, 2, 4, 1, 3),
(1599, 1279, 2, 4, 1, 2),
(1600, 740, 2, 4, 1, 3),
(1601, 1280, 2, 4, 1, 3),
(1602, 18, 2, 4, 1, 1),
(1603, 1281, 2, 4, 1, 3),
(1604, 1282, 2, 4, 1, 2),
(1605, 1283, 2, 4, 1, 3),
(1606, 1284, 2, 4, 1, 1),
(1607, 1285, 2, 4, 1, 3),
(1608, 1286, 2, 4, 1, 1),
(1609, 6, 2, 4, 1, 0),
(1610, 1287, 2, 4, 1, 2),
(1611, 528, 2, 4, 1, 1),
(1612, 1288, 2, 4, 1, 3),
(1613, 1289, 2, 4, 1, 3),
(1614, 116, 2, 4, 1, 3),
(1615, 1290, 2, 4, 1, 2),
(1616, 1291, 2, 4, 1, 1),
(1617, 1292, 2, 4, 1, 1),
(1618, 1293, 2, 4, 1, 1),
(1619, 33, 2, 4, 1, 3),
(1620, 1294, 2, 4, 1, 1),
(1621, 1295, 2, 4, 1, 1),
(1622, 1296, 2, 4, 1, 2),
(1623, 1297, 2, 4, 1, 1),
(1624, 217, 2, 4, 1, 3),
(1625, 1298, 2, 4, 1, 3),
(1626, 1299, 2, 4, 1, 1),
(1627, 1300, 2, 4, 1, 1),
(1628, 1301, 2, 4, 1, 1),
(1629, 218, 2, 4, 1, 3),
(1630, 1302, 2, 4, 1, 2),
(1631, 1303, 2, 4, 1, 1),
(1632, 1304, 2, 4, 1, 1),
(1633, 900, 2, 4, 1, 1),
(1634, 1305, 2, 4, 1, 3),
(1635, 1306, 2, 4, 1, 1),
(1636, 182, 2, 4, 1, 2),
(1637, 1307, 2, 4, 1, 1),
(1638, 1308, 2, 4, 1, 1),
(1639, 1309, 2, 4, 1, 1),
(1640, 1310, 2, 4, 1, 3),
(1641, 1311, 2, 4, 1, 1),
(1642, 24, 2, 4, 1, 2),
(1643, 1312, 2, 4, 1, 1),
(1644, 1313, 2, 4, 1, 1),
(1645, 1314, 2, 4, 1, 3),
(1646, 1315, 2, 4, 1, 2),
(1647, 1316, 2, 4, 1, 1),
(1648, 1317, 2, 4, 1, 1),
(1649, 550, 2, 4, 1, 3),
(1650, 1318, 2, 4, 1, 2),
(1651, 1319, 2, 4, 1, 1),
(1652, 1320, 2, 4, 1, 2),
(1653, 888, 2, 4, 1, 3),
(1654, 1052, 2, 4, 1, 2),
(1655, 180, 2, 4, 1, 2),
(1656, 203, 2, 4, 1, 1),
(1657, 1321, 2, 4, 1, 2),
(1658, 1322, 2, 4, 1, 2),
(1659, 1323, 2, 4, 1, 3),
(1660, 933, 2, 4, 1, 1),
(1661, 1324, 2, 4, 1, 3),
(1662, 30, 2, 4, 1, 2),
(1663, 1325, 2, 4, 1, 2),
(1664, 804, 2, 4, 1, 3),
(1665, 63, 2, 4, 1, 1),
(1666, 1326, 2, 4, 1, 1),
(1667, 1327, 2, 4, 1, 2),
(1668, 1328, 2, 4, 1, 3),
(1669, 1329, 2, 4, 1, 3),
(1670, 225, 2, 4, 1, 1),
(1671, 1330, 2, 4, 1, 2),
(1672, 278, 2, 4, 1, 1),
(1673, 1331, 2, 4, 1, 2),
(1674, 378, 2, 4, 1, 0),
(1675, 932, 2, 4, 1, 3),
(1676, 1332, 2, 4, 1, 3),
(1677, 1333, 2, 4, 1, 3),
(1678, 1334, 2, 4, 1, 2),
(1679, 1335, 2, 4, 1, 1),
(1680, 244, 2, 4, 1, 3),
(1681, 17, 2, 4, 1, 1),
(1682, 1336, 2, 4, 1, 3),
(1683, 1337, 2, 4, 1, 3),
(1684, 1338, 2, 4, 1, 3),
(1685, 1339, 2, 4, 1, 1),
(1686, 399, 2, 4, 1, 1),
(1687, 119, 2, 4, 1, 1),
(1688, 1340, 2, 4, 1, 2),
(1689, 490, 2, 4, 1, 2),
(1690, 274, 2, 4, 1, 1),
(1691, 1341, 2, 4, 1, 2),
(1692, 1342, 2, 4, 1, 1),
(1693, 35, 2, 4, 1, 1),
(1694, 1343, 2, 4, 1, 1),
(1695, 20, 2, 4, 1, 0),
(1696, 1344, 2, 4, 1, 3),
(1697, 308, 2, 4, 1, 3),
(1698, 197, 2, 4, 1, 1),
(1699, 1345, 2, 4, 1, 2),
(1700, 1346, 2, 4, 1, 2),
(1701, 1347, 2, 4, 1, 0),
(1702, 1348, 2, 4, 1, 2),
(1703, 1349, 2, 4, 1, 1),
(1704, 1007, 2, 4, 1, 3),
(1705, 1350, 2, 4, 1, 3),
(1706, 1351, 2, 4, 1, 3),
(1707, 1352, 2, 4, 1, 1),
(1708, 1353, 2, 4, 1, 3),
(1709, 1354, 2, 4, 1, 1),
(1710, 1355, 2, 4, 1, 2),
(1711, 1104, 2, 4, 1, 2),
(1712, 1356, 2, 4, 1, 1),
(1713, 500, 2, 4, 1, 3),
(1714, 729, 2, 4, 1, 1),
(1715, 1357, 2, 4, 1, 2),
(1716, 1083, 2, 4, 1, 2),
(1717, 71, 2, 4, 1, 0),
(1718, 1358, 2, 4, 1, 2),
(1719, 398, 2, 4, 1, 2),
(1720, 996, 2, 4, 1, 1),
(1721, 1359, 2, 4, 1, 2),
(1722, 310, 2, 4, 1, 2),
(1723, 1360, 2, 4, 1, 1),
(1724, 1361, 2, 4, 1, 1),
(1725, 1362, 2, 4, 1, 2),
(1726, 1363, 2, 4, 1, 1),
(1727, 1364, 2, 4, 1, 1),
(1728, 1365, 2, 4, 1, 1),
(1729, 247, 2, 4, 1, 2),
(1730, 1366, 2, 4, 1, 1),
(1731, 152, 2, 4, 1, 3),
(1732, 1367, 2, 4, 1, 1),
(1733, 390, 2, 4, 1, 0),
(1734, 1368, 2, 4, 1, 2),
(1735, 74, 2, 4, 1, 0),
(1736, 1369, 2, 4, 1, 2),
(1737, 994, 2, 4, 1, 3),
(1738, 1370, 2, 4, 1, 2),
(1739, 1371, 2, 4, 1, 1),
(1740, 1372, 2, 4, 1, 1),
(1741, 640, 2, 4, 1, 2),
(1742, 1373, 2, 4, 1, 3),
(1743, 1374, 2, 4, 1, 1),
(1744, 912, 2, 4, 1, 0),
(1745, 1, 2, 5, 26, 0),
(1746, 3, 2, 5, 23, 0),
(1747, 45, 2, 5, 15, 2),
(1748, 7, 2, 5, 13, 0),
(1749, 6, 2, 5, 13, 0),
(1750, 12, 2, 5, 9, 1),
(1751, 1375, 2, 5, 8, 3),
(1752, 2, 2, 5, 8, 0),
(1753, 1376, 2, 5, 8, 3),
(1754, 30, 2, 5, 7, 2),
(1755, 202, 2, 5, 7, 0),
(1756, 9, 2, 5, 7, 2),
(1757, 1114, 2, 5, 6, 3),
(1758, 1377, 2, 5, 6, 1),
(1759, 1378, 2, 5, 6, 1),
(1760, 999, 2, 5, 6, 3),
(1761, 1379, 2, 5, 6, 1),
(1762, 1380, 2, 5, 5, 1),
(1763, 1381, 2, 5, 5, 3),
(1764, 101, 2, 5, 5, 2),
(1765, 5, 2, 5, 5, 0),
(1766, 18, 2, 5, 5, 1),
(1767, 1382, 2, 5, 5, 1),
(1768, 25, 2, 5, 5, 0),
(1769, 196, 2, 5, 4, 2),
(1770, 117, 2, 5, 4, 1),
(1771, 1383, 2, 5, 4, 1),
(1772, 1010, 2, 5, 4, 2),
(1773, 21, 2, 5, 4, 0),
(1774, 592, 2, 5, 4, 3),
(1775, 24, 2, 5, 4, 2),
(1776, 61, 2, 5, 3, 1),
(1777, 1384, 2, 5, 3, 1),
(1778, 1385, 2, 5, 3, 1),
(1779, 1386, 2, 5, 3, 1),
(1780, 16, 2, 5, 3, 0),
(1781, 54, 2, 5, 3, 3),
(1782, 1387, 2, 5, 3, 3),
(1783, 79, 2, 5, 3, 0),
(1784, 1027, 2, 5, 3, 3),
(1785, 76, 2, 5, 3, 1),
(1786, 1388, 2, 5, 3, 3),
(1787, 28, 2, 5, 3, 0),
(1788, 378, 2, 5, 3, 0),
(1789, 119, 2, 5, 3, 1),
(1790, 789, 2, 5, 3, 3),
(1791, 684, 2, 5, 3, 2),
(1792, 35, 2, 5, 3, 1),
(1793, 52, 2, 5, 3, 1),
(1794, 145, 2, 5, 2, 1),
(1795, 1199, 2, 5, 2, 3),
(1796, 153, 2, 5, 2, 1),
(1797, 450, 2, 5, 2, 1),
(1798, 17, 2, 5, 2, 1),
(1799, 22, 2, 5, 2, 0),
(1800, 1389, 2, 5, 2, 1),
(1801, 59, 2, 5, 2, 3),
(1802, 1390, 2, 5, 2, 3),
(1803, 1391, 2, 5, 2, 1),
(1804, 20, 2, 5, 2, 0),
(1805, 1392, 2, 5, 2, 1),
(1806, 1393, 2, 5, 2, 1),
(1807, 1394, 2, 5, 2, 1),
(1808, 14, 2, 5, 2, 2),
(1809, 1278, 2, 5, 2, 3),
(1810, 1395, 2, 5, 2, 1),
(1811, 679, 2, 5, 2, 2),
(1812, 888, 2, 5, 2, 3),
(1813, 1396, 2, 5, 2, 3),
(1814, 247, 2, 5, 2, 2),
(1815, 46, 2, 5, 2, 1),
(1816, 23, 2, 5, 2, 2),
(1817, 525, 2, 5, 2, 2),
(1818, 997, 2, 5, 2, 1),
(1819, 590, 2, 5, 2, 1),
(1820, 1397, 2, 5, 2, 3),
(1821, 244, 2, 5, 2, 3),
(1822, 44, 2, 5, 2, 3),
(1823, 62, 2, 5, 2, 1),
(1824, 740, 2, 5, 2, 3),
(1825, 34, 2, 5, 2, 0),
(1826, 1398, 2, 5, 2, 1),
(1827, 1399, 2, 5, 2, 1),
(1828, 1400, 2, 5, 2, 2),
(1829, 114, 2, 5, 2, 2),
(1830, 1401, 2, 5, 2, 1),
(1831, 215, 2, 5, 2, 0),
(1832, 1402, 2, 5, 2, 1),
(1833, 844, 2, 5, 2, 0),
(1834, 1403, 2, 5, 2, 3),
(1835, 1404, 2, 5, 2, 2),
(1836, 1405, 2, 5, 2, 3),
(1837, 565, 2, 5, 2, 1),
(1838, 1248, 2, 5, 2, 2),
(1839, 105, 2, 5, 2, 3),
(1840, 86, 2, 5, 2, 3),
(1841, 624, 2, 5, 2, 2),
(1842, 1406, 2, 5, 2, 1),
(1843, 1407, 2, 5, 2, 3),
(1844, 884, 2, 5, 2, 3),
(1845, 486, 2, 5, 2, 1),
(1846, 1408, 2, 5, 2, 1),
(1847, 41, 2, 5, 1, 0),
(1848, 1186, 2, 5, 1, 1),
(1849, 1002, 2, 5, 1, 1),
(1850, 1409, 2, 5, 1, 3),
(1851, 1323, 2, 5, 1, 3),
(1852, 1410, 2, 5, 1, 1),
(1853, 1411, 2, 5, 1, 1),
(1854, 1412, 2, 5, 1, 1),
(1855, 63, 2, 5, 1, 1),
(1856, 487, 2, 5, 1, 0),
(1857, 593, 2, 5, 1, 3),
(1858, 1413, 2, 5, 1, 1),
(1859, 1414, 2, 5, 1, 1),
(1860, 1415, 2, 5, 1, 1),
(1861, 398, 2, 5, 1, 2),
(1862, 529, 2, 5, 1, 3),
(1863, 1416, 2, 5, 1, 3),
(1864, 1417, 2, 5, 1, 1),
(1865, 1418, 2, 5, 1, 2),
(1866, 106, 2, 5, 1, 3),
(1867, 1419, 2, 5, 1, 0),
(1868, 1420, 2, 5, 1, 2),
(1869, 1421, 2, 5, 1, 1),
(1870, 1422, 2, 5, 1, 2),
(1871, 1423, 2, 5, 1, 3),
(1872, 1424, 2, 5, 1, 3),
(1873, 1425, 2, 5, 1, 1),
(1874, 872, 2, 5, 1, 2),
(1875, 996, 2, 5, 1, 1),
(1876, 324, 2, 5, 1, 2),
(1877, 919, 2, 5, 1, 1),
(1878, 1426, 2, 5, 1, 3),
(1879, 1427, 2, 5, 1, 3),
(1880, 55, 2, 5, 1, 1),
(1881, 1428, 2, 5, 1, 1),
(1882, 492, 2, 5, 1, 2),
(1883, 1113, 2, 5, 1, 3),
(1884, 1429, 2, 5, 1, 3),
(1885, 817, 2, 5, 1, 2),
(1886, 1430, 2, 5, 1, 2),
(1887, 1431, 2, 5, 1, 1),
(1888, 1432, 2, 5, 1, 1),
(1889, 1433, 2, 5, 1, 1),
(1890, 907, 2, 5, 1, 2),
(1891, 1103, 2, 5, 1, 3),
(1892, 1434, 2, 5, 1, 1),
(1893, 132, 2, 5, 1, 1),
(1894, 29, 2, 5, 1, 2),
(1895, 1435, 2, 5, 1, 2),
(1896, 422, 2, 5, 1, 1),
(1897, 1436, 2, 5, 1, 3),
(1898, 364, 2, 5, 1, 3),
(1899, 36, 2, 5, 1, 1),
(1900, 1437, 2, 5, 1, 2),
(1901, 511, 2, 5, 1, 2),
(1902, 40, 2, 5, 1, 3),
(1903, 185, 2, 5, 1, 3),
(1904, 765, 2, 5, 1, 3),
(1905, 168, 2, 5, 1, 0),
(1906, 742, 2, 5, 1, 3),
(1907, 70, 2, 5, 1, 1),
(1908, 367, 2, 5, 1, 1),
(1909, 372, 2, 5, 1, 2),
(1910, 574, 2, 5, 1, 2),
(1911, 1438, 2, 5, 1, 1),
(1912, 1439, 2, 5, 1, 1),
(1913, 1440, 2, 5, 1, 3),
(1914, 1441, 2, 5, 1, 1),
(1915, 193, 2, 5, 1, 1),
(1916, 274, 2, 5, 1, 1),
(1917, 935, 2, 5, 1, 1),
(1918, 1442, 2, 5, 1, 1),
(1919, 1443, 2, 5, 1, 1),
(1920, 88, 2, 5, 1, 1),
(1921, 91, 2, 5, 1, 1),
(1922, 49, 2, 5, 1, 1),
(1923, 991, 2, 5, 1, 1),
(1924, 1444, 2, 5, 1, 0),
(1925, 1445, 2, 5, 1, 0),
(1926, 1446, 2, 5, 1, 1),
(1927, 1447, 2, 5, 1, 1),
(1928, 1448, 2, 5, 1, 1),
(1929, 1104, 2, 5, 1, 2),
(1930, 1449, 2, 5, 1, 1),
(1931, 502, 2, 5, 1, 1),
(1932, 984, 2, 5, 1, 2),
(1933, 116, 2, 5, 1, 3),
(1934, 1450, 2, 5, 1, 1),
(1935, 1451, 2, 5, 1, 3),
(1936, 65, 2, 5, 1, 0),
(1937, 1452, 2, 5, 1, 1),
(1938, 38, 2, 5, 1, 3),
(1939, 660, 2, 5, 1, 1),
(1940, 1453, 2, 5, 1, 1),
(1941, 1454, 2, 5, 1, 1),
(1942, 1455, 2, 5, 1, 3),
(1943, 690, 2, 5, 1, 1),
(1944, 1456, 2, 5, 1, 1),
(1945, 1457, 2, 5, 1, 1),
(1946, 56, 2, 5, 1, 1),
(1947, 1458, 2, 5, 1, 1),
(1948, 1459, 2, 5, 1, 1),
(1949, 1460, 2, 5, 1, 1),
(1950, 1461, 2, 5, 1, 3),
(1951, 1462, 2, 5, 1, 1),
(1952, 82, 2, 5, 1, 2),
(1953, 172, 2, 5, 1, 1),
(1954, 561, 2, 5, 1, 3),
(1955, 1463, 2, 5, 1, 3),
(1956, 1464, 2, 5, 1, 3),
(1957, 608, 2, 5, 1, 1),
(1958, 1465, 2, 5, 1, 3),
(1959, 1466, 2, 5, 1, 1),
(1960, 1467, 2, 5, 1, 1),
(1961, 1468, 2, 5, 1, 1),
(1962, 1469, 2, 5, 1, 3),
(1963, 1470, 2, 5, 1, 3),
(1964, 99, 2, 5, 1, 2),
(1965, 1471, 2, 5, 1, 3),
(1966, 1472, 2, 5, 1, 3),
(1967, 449, 2, 5, 1, 3),
(1968, 174, 2, 5, 1, 1),
(1969, 118, 2, 5, 1, 3),
(1970, 402, 2, 5, 1, 3),
(1971, 1473, 2, 5, 1, 1),
(1972, 1474, 2, 5, 1, 1),
(1973, 1475, 2, 5, 1, 2),
(1974, 310, 2, 5, 1, 2),
(1975, 1476, 2, 5, 1, 2),
(1976, 464, 2, 5, 1, 3),
(1977, 146, 2, 5, 1, 1),
(1978, 1477, 2, 5, 1, 1),
(1979, 1352, 2, 5, 1, 1),
(1980, 1478, 2, 5, 1, 3),
(1981, 188, 2, 5, 1, 2),
(1982, 1479, 2, 5, 1, 2),
(1983, 612, 2, 5, 1, 3),
(1984, 411, 2, 5, 1, 1),
(1985, 1336, 2, 5, 1, 3),
(1986, 783, 2, 5, 1, 3),
(1987, 395, 2, 5, 1, 2),
(1988, 1208, 2, 5, 1, 1),
(1989, 1480, 2, 5, 1, 3),
(1990, 1481, 2, 5, 1, 2),
(1991, 1052, 2, 5, 1, 2),
(1992, 19, 2, 5, 1, 3),
(1993, 1482, 2, 5, 1, 1),
(1994, 115, 2, 5, 1, 3),
(1995, 1483, 2, 5, 1, 1),
(1996, 1484, 2, 5, 1, 1),
(1997, 1485, 2, 5, 1, 1),
(1998, 1486, 2, 5, 1, 3),
(1999, 1487, 2, 5, 1, 2),
(2000, 1334, 2, 5, 1, 2),
(2001, 31, 2, 5, 1, 0),
(2002, 1488, 2, 5, 1, 1),
(2003, 1489, 2, 5, 1, 1),
(2004, 1490, 2, 5, 1, 1),
(2005, 520, 2, 5, 1, 3),
(2006, 1491, 2, 5, 1, 2),
(2007, 1492, 2, 5, 1, 1),
(2008, 482, 2, 5, 1, 1),
(2009, 1056, 2, 5, 1, 3),
(2010, 707, 2, 5, 1, 2),
(2011, 1493, 2, 5, 1, 3),
(2012, 1494, 2, 5, 1, 0),
(2013, 1495, 2, 5, 1, 1),
(2014, 1496, 2, 5, 1, 3),
(2015, 1497, 2, 5, 1, 1),
(2016, 1498, 2, 5, 1, 2),
(2017, 1499, 2, 5, 1, 2),
(2018, 64, 2, 5, 1, 3),
(2019, 1500, 2, 5, 1, 1),
(2020, 1201, 2, 5, 1, 2),
(2021, 1501, 2, 5, 1, 3),
(2022, 220, 2, 5, 1, 0),
(2023, 32, 2, 5, 1, 1),
(2024, 652, 2, 5, 1, 3),
(2025, 1502, 2, 5, 1, 2),
(2026, 1503, 2, 5, 1, 3),
(2027, 1504, 2, 5, 1, 3),
(2028, 1505, 2, 5, 1, 1),
(2029, 1506, 2, 5, 1, 1),
(2030, 1507, 2, 5, 1, 1),
(2031, 1508, 2, 5, 1, 3),
(2032, 1509, 2, 5, 1, 3),
(2033, 1510, 2, 5, 1, 3),
(2034, 1511, 2, 5, 1, 2),
(2035, 1512, 2, 5, 1, 2),
(2036, 1513, 2, 5, 1, 1),
(2037, 1514, 2, 5, 1, 1),
(2038, 1515, 2, 5, 1, 3),
(2039, 1516, 2, 5, 1, 1),
(2040, 352, 2, 5, 1, 1),
(2041, 1517, 2, 5, 1, 1),
(2042, 1518, 2, 5, 1, 2),
(2043, 1519, 2, 5, 1, 3),
(2044, 1520, 2, 5, 1, 2),
(2045, 1521, 2, 5, 1, 3),
(2046, 534, 2, 5, 1, 1),
(2047, 1522, 2, 5, 1, 3),
(2048, 1345, 2, 5, 1, 2),
(2049, 1523, 2, 5, 1, 1),
(2050, 1524, 2, 5, 1, 2),
(2051, 613, 2, 5, 1, 3),
(2052, 198, 2, 5, 1, 3),
(2053, 323, 2, 5, 1, 2),
(2054, 250, 2, 5, 1, 2),
(2055, 1525, 2, 5, 1, 1),
(2056, 1526, 2, 5, 1, 1),
(2057, 389, 2, 5, 1, 1),
(2058, 1527, 2, 5, 1, 2),
(2059, 1528, 2, 5, 1, 1),
(2060, 1529, 2, 5, 1, 2),
(2061, 666, 2, 5, 1, 3),
(2062, 1530, 2, 5, 1, 3),
(2063, 1531, 2, 5, 1, 2),
(2064, 1532, 2, 5, 1, 2),
(2065, 1533, 2, 5, 1, 1),
(2066, 1534, 2, 5, 1, 3),
(2067, 1535, 2, 5, 1, 3),
(2068, 1348, 2, 5, 1, 2),
(2069, 1536, 2, 5, 1, 1),
(2070, 1537, 2, 5, 1, 1),
(2071, 1285, 2, 5, 1, 3),
(2072, 1538, 2, 5, 1, 3),
(2073, 638, 2, 5, 1, 3),
(2074, 197, 2, 5, 1, 1),
(2075, 1539, 2, 5, 1, 1),
(2076, 1540, 2, 5, 1, 1),
(2077, 1541, 2, 5, 1, 1),
(2078, 1542, 2, 5, 1, 3),
(2079, 3, 2, 6, 110, 0),
(2080, 45, 2, 6, 83, 2),
(2081, 1543, 2, 6, 40, 3),
(2082, 12, 2, 6, 34, 1),
(2083, 5, 2, 6, 31, 0),
(2084, 1, 2, 6, 30, 0),
(2085, 7, 2, 6, 30, 0),
(2086, 9, 2, 6, 30, 2),
(2087, 35, 2, 6, 25, 1),
(2088, 2, 2, 6, 24, 0),
(2089, 566, 2, 6, 22, 2),
(2090, 25, 2, 6, 21, 0),
(2091, 1544, 2, 6, 20, 3),
(2092, 17, 2, 6, 18, 1),
(2093, 76, 2, 6, 18, 1),
(2094, 37, 2, 6, 17, 3),
(2095, 36, 2, 6, 17, 1),
(2096, 1545, 2, 6, 17, 3),
(2097, 592, 2, 6, 16, 3),
(2098, 79, 2, 6, 16, 0),
(2099, 1546, 2, 6, 15, 3),
(2100, 464, 2, 6, 15, 3),
(2101, 664, 2, 6, 15, 3),
(2102, 1547, 2, 6, 13, 3),
(2103, 105, 2, 6, 13, 3),
(2104, 612, 2, 6, 13, 3),
(2105, 1548, 2, 6, 13, 3),
(2106, 119, 2, 6, 13, 1),
(2107, 30, 2, 6, 13, 2),
(2108, 55, 2, 6, 12, 1),
(2109, 61, 2, 6, 12, 1),
(2110, 28, 2, 6, 12, 0),
(2111, 16, 2, 6, 12, 0),
(2112, 266, 2, 6, 12, 0),
(2113, 378, 2, 6, 12, 0),
(2114, 1549, 2, 6, 12, 3),
(2115, 1550, 2, 6, 11, 3),
(2116, 202, 2, 6, 11, 0),
(2117, 331, 2, 6, 11, 2),
(2118, 44, 2, 6, 11, 3),
(2119, 1551, 2, 6, 11, 2),
(2120, 23, 2, 6, 10, 2),
(2121, 74, 2, 6, 10, 0),
(2122, 72, 2, 6, 10, 0),
(2123, 1552, 2, 6, 10, 3),
(2124, 116, 2, 6, 9, 3),
(2125, 146, 2, 6, 9, 1),
(2126, 215, 2, 6, 9, 0),
(2127, 1553, 2, 6, 9, 1),
(2128, 14, 2, 6, 9, 2),
(2129, 117, 2, 6, 9, 1),
(2130, 6, 2, 6, 9, 0),
(2131, 1314, 2, 6, 9, 3),
(2132, 56, 2, 6, 8, 1),
(2133, 1554, 2, 6, 8, 3),
(2134, 1555, 2, 6, 8, 3),
(2135, 1556, 2, 6, 8, 3),
(2136, 77, 2, 6, 8, 1),
(2137, 364, 2, 6, 8, 3),
(2138, 193, 2, 6, 8, 1),
(2139, 184, 2, 6, 8, 1),
(2140, 1557, 2, 6, 8, 1),
(2141, 106, 2, 6, 8, 3),
(2142, 789, 2, 6, 7, 3),
(2143, 1303, 2, 6, 7, 1),
(2144, 1558, 2, 6, 7, 2),
(2145, 1559, 2, 6, 7, 1),
(2146, 1560, 2, 6, 7, 3),
(2147, 21, 2, 6, 7, 0),
(2148, 684, 2, 6, 7, 2),
(2149, 1056, 2, 6, 7, 3),
(2150, 1561, 2, 6, 7, 3),
(2151, 1562, 2, 6, 7, 1),
(2152, 1563, 2, 6, 6, 3),
(2153, 1289, 2, 6, 6, 3),
(2154, 1451, 2, 6, 6, 3),
(2155, 1564, 2, 6, 6, 0),
(2156, 1402, 2, 6, 6, 1),
(2157, 24, 2, 6, 6, 2),
(2158, 1565, 2, 6, 6, 3),
(2159, 1534, 2, 6, 6, 3),
(2160, 883, 2, 6, 6, 1),
(2161, 1566, 2, 6, 6, 1),
(2162, 493, 2, 6, 6, 3),
(2163, 65, 2, 6, 6, 0),
(2164, 15, 2, 6, 6, 0),
(2165, 34, 2, 6, 6, 0),
(2166, 1567, 2, 6, 6, 3),
(2167, 101, 2, 6, 6, 2),
(2168, 181, 2, 6, 6, 3),
(2169, 1337, 2, 6, 6, 3),
(2170, 563, 2, 6, 5, 1),
(2171, 1568, 2, 6, 5, 3),
(2172, 888, 2, 6, 5, 3),
(2173, 88, 2, 6, 5, 1),
(2174, 1569, 2, 6, 5, 0),
(2175, 1570, 2, 6, 5, 1),
(2176, 1357, 2, 6, 5, 2),
(2177, 1571, 2, 6, 5, 3),
(2178, 1478, 2, 6, 5, 3),
(2179, 882, 2, 6, 5, 0),
(2180, 1572, 2, 6, 5, 2),
(2181, 22, 2, 6, 5, 0),
(2182, 1573, 2, 6, 5, 2),
(2183, 282, 2, 6, 5, 3),
(2184, 40, 2, 6, 5, 3),
(2185, 390, 2, 6, 5, 0),
(2186, 152, 2, 6, 5, 3),
(2187, 608, 2, 6, 5, 1),
(2188, 1574, 2, 6, 5, 3),
(2189, 1575, 2, 6, 5, 1),
(2190, 1382, 2, 6, 5, 1),
(2191, 801, 2, 6, 5, 3),
(2192, 1576, 2, 6, 5, 3),
(2193, 41, 2, 6, 5, 0),
(2194, 1577, 2, 6, 5, 3),
(2195, 1578, 2, 6, 5, 2),
(2196, 1579, 2, 6, 5, 2),
(2197, 1580, 2, 6, 4, 2),
(2198, 99, 2, 6, 4, 2),
(2199, 1581, 2, 6, 4, 3),
(2200, 1582, 2, 6, 4, 1),
(2201, 1583, 2, 6, 4, 1),
(2202, 1584, 2, 6, 4, 1),
(2203, 1038, 2, 6, 4, 2);
INSERT INTO `indices` (`id`, `word_id`, `table_id`, `table_index`, `rating_reps`, `weight`) VALUES
(2204, 844, 2, 6, 4, 0),
(2205, 1585, 2, 6, 4, 2),
(2206, 1362, 2, 6, 4, 2),
(2207, 201, 2, 6, 4, 2),
(2208, 1586, 2, 6, 4, 3),
(2209, 1587, 2, 6, 4, 3),
(2210, 944, 2, 6, 4, 1),
(2211, 487, 2, 6, 4, 0),
(2212, 1370, 2, 6, 4, 2),
(2213, 1588, 2, 6, 4, 3),
(2214, 1010, 2, 6, 4, 2),
(2215, 544, 2, 6, 4, 1),
(2216, 1589, 2, 6, 4, 3),
(2217, 1590, 2, 6, 4, 1),
(2218, 1591, 2, 6, 4, 3),
(2219, 688, 2, 6, 4, 3),
(2220, 817, 2, 6, 4, 2),
(2221, 1592, 2, 6, 4, 2),
(2222, 90, 2, 6, 4, 1),
(2223, 1593, 2, 6, 4, 3),
(2224, 1594, 2, 6, 4, 2),
(2225, 1595, 2, 6, 4, 3),
(2226, 132, 2, 6, 4, 1),
(2227, 1097, 2, 6, 4, 0),
(2228, 1596, 2, 6, 4, 1),
(2229, 38, 2, 6, 4, 3),
(2230, 1597, 2, 6, 4, 2),
(2231, 1598, 2, 6, 4, 3),
(2232, 783, 2, 6, 4, 3),
(2233, 1599, 2, 6, 3, 2),
(2234, 1600, 2, 6, 3, 1),
(2235, 197, 2, 6, 3, 1),
(2236, 1601, 2, 6, 3, 3),
(2237, 1602, 2, 6, 3, 1),
(2238, 416, 2, 6, 3, 3),
(2239, 70, 2, 6, 3, 1),
(2240, 453, 2, 6, 3, 2),
(2241, 174, 2, 6, 3, 1),
(2242, 610, 2, 6, 3, 1),
(2243, 1603, 2, 6, 3, 1),
(2244, 1604, 2, 6, 3, 2),
(2245, 396, 2, 6, 3, 1),
(2246, 389, 2, 6, 3, 1),
(2247, 327, 2, 6, 3, 1),
(2248, 1506, 2, 6, 3, 1),
(2249, 749, 2, 6, 3, 2),
(2250, 1605, 2, 6, 3, 3),
(2251, 1606, 2, 6, 3, 3),
(2252, 1324, 2, 6, 3, 3),
(2253, 1607, 2, 6, 3, 1),
(2254, 996, 2, 6, 3, 1),
(2255, 1608, 2, 6, 3, 1),
(2256, 172, 2, 6, 3, 1),
(2257, 936, 2, 6, 3, 1),
(2258, 1435, 2, 6, 3, 2),
(2259, 1217, 2, 6, 3, 3),
(2260, 1609, 2, 6, 3, 2),
(2261, 31, 2, 6, 3, 0),
(2262, 1610, 2, 6, 3, 2),
(2263, 1611, 2, 6, 3, 3),
(2264, 1612, 2, 6, 3, 1),
(2265, 1613, 2, 6, 3, 1),
(2266, 20, 2, 6, 3, 0),
(2267, 1614, 2, 6, 3, 2),
(2268, 1615, 2, 6, 3, 2),
(2269, 1616, 2, 6, 3, 1),
(2270, 115, 2, 6, 3, 3),
(2271, 1617, 2, 6, 3, 2),
(2272, 175, 2, 6, 3, 2),
(2273, 1618, 2, 6, 3, 3),
(2274, 1619, 2, 6, 3, 3),
(2275, 154, 2, 6, 3, 0),
(2276, 1620, 2, 6, 3, 3),
(2277, 1621, 2, 6, 3, 2),
(2278, 1622, 2, 6, 3, 2),
(2279, 1623, 2, 6, 3, 3),
(2280, 788, 2, 6, 3, 1),
(2281, 401, 2, 6, 3, 1),
(2282, 1463, 2, 6, 3, 3),
(2283, 1338, 2, 6, 3, 3),
(2284, 404, 2, 6, 3, 1),
(2285, 1624, 2, 6, 3, 1),
(2286, 622, 2, 6, 3, 1),
(2287, 1269, 2, 6, 3, 3),
(2288, 225, 2, 6, 3, 1),
(2289, 1625, 2, 6, 3, 1),
(2290, 196, 2, 6, 3, 2),
(2291, 278, 2, 6, 3, 1),
(2292, 1626, 2, 6, 3, 2),
(2293, 1627, 2, 6, 3, 1),
(2294, 1348, 2, 6, 3, 2),
(2295, 1628, 2, 6, 3, 1),
(2296, 818, 2, 6, 3, 3),
(2297, 1629, 2, 6, 2, 3),
(2298, 190, 2, 6, 2, 1),
(2299, 613, 2, 6, 2, 3),
(2300, 1630, 2, 6, 2, 3),
(2301, 1538, 2, 6, 2, 3),
(2302, 1494, 2, 6, 2, 0),
(2303, 1222, 2, 6, 2, 3),
(2304, 1241, 2, 6, 2, 3),
(2305, 1334, 2, 6, 2, 2),
(2306, 1631, 2, 6, 2, 1),
(2307, 1632, 2, 6, 2, 1),
(2308, 887, 2, 6, 2, 1),
(2309, 1633, 2, 6, 2, 1),
(2310, 1634, 2, 6, 2, 3),
(2311, 1635, 2, 6, 2, 1),
(2312, 677, 2, 6, 2, 0),
(2313, 1636, 2, 6, 2, 1),
(2314, 1637, 2, 6, 2, 2),
(2315, 528, 2, 6, 2, 1),
(2316, 1638, 2, 6, 2, 1),
(2317, 1639, 2, 6, 2, 2),
(2318, 816, 2, 6, 2, 3),
(2319, 1208, 2, 6, 2, 1),
(2320, 1640, 2, 6, 2, 1),
(2321, 1641, 2, 6, 2, 3),
(2322, 1642, 2, 6, 2, 1),
(2323, 400, 2, 6, 2, 3),
(2324, 1643, 2, 6, 2, 3),
(2325, 82, 2, 6, 2, 2),
(2326, 1644, 2, 6, 2, 3),
(2327, 365, 2, 6, 2, 3),
(2328, 144, 2, 6, 2, 1),
(2329, 1645, 2, 6, 2, 3),
(2330, 1400, 2, 6, 2, 2),
(2331, 1646, 2, 6, 2, 1),
(2332, 1647, 2, 6, 2, 1),
(2333, 1648, 2, 6, 2, 1),
(2334, 1649, 2, 6, 2, 1),
(2335, 103, 2, 6, 2, 3),
(2336, 1650, 2, 6, 2, 3),
(2337, 1527, 2, 6, 2, 2),
(2338, 153, 2, 6, 2, 1),
(2339, 310, 2, 6, 2, 2),
(2340, 51, 2, 6, 2, 3),
(2341, 1220, 2, 6, 2, 1),
(2342, 1651, 2, 6, 2, 2),
(2343, 1278, 2, 6, 2, 3),
(2344, 780, 2, 6, 2, 1),
(2345, 1652, 2, 6, 2, 1),
(2346, 1653, 2, 6, 2, 1),
(2347, 1654, 2, 6, 2, 3),
(2348, 63, 2, 6, 2, 1),
(2349, 632, 2, 6, 2, 1),
(2350, 782, 2, 6, 2, 2),
(2351, 18, 2, 6, 2, 1),
(2352, 180, 2, 6, 2, 2),
(2353, 352, 2, 6, 2, 1),
(2354, 1655, 2, 6, 2, 3),
(2355, 1656, 2, 6, 2, 3),
(2356, 1329, 2, 6, 2, 3),
(2357, 1657, 2, 6, 2, 1),
(2358, 773, 2, 6, 2, 1),
(2359, 1658, 2, 6, 2, 3),
(2360, 607, 2, 6, 2, 2),
(2361, 1659, 2, 6, 2, 2),
(2362, 1660, 2, 6, 2, 3),
(2363, 1661, 2, 6, 2, 2),
(2364, 1662, 2, 6, 2, 3),
(2365, 1663, 2, 6, 2, 1),
(2366, 490, 2, 6, 2, 2),
(2367, 1664, 2, 6, 2, 3),
(2368, 534, 2, 6, 2, 1),
(2369, 1665, 2, 6, 2, 2),
(2370, 704, 2, 6, 2, 2),
(2371, 1666, 2, 6, 2, 3),
(2372, 676, 2, 6, 2, 3),
(2373, 1667, 2, 6, 2, 2),
(2374, 1668, 2, 6, 2, 2),
(2375, 1669, 2, 6, 2, 1),
(2376, 1670, 2, 6, 2, 2),
(2377, 1112, 2, 6, 2, 1),
(2378, 1671, 2, 6, 2, 3),
(2379, 1672, 2, 6, 2, 3),
(2380, 1673, 2, 6, 2, 3),
(2381, 573, 2, 6, 2, 1),
(2382, 32, 2, 6, 2, 1),
(2383, 1674, 2, 6, 2, 3),
(2384, 1675, 2, 6, 2, 3),
(2385, 1676, 2, 6, 2, 1),
(2386, 1677, 2, 6, 2, 3),
(2387, 244, 2, 6, 2, 3),
(2388, 1678, 2, 6, 2, 1),
(2389, 1679, 2, 6, 2, 3),
(2390, 1346, 2, 6, 2, 2),
(2391, 1680, 2, 6, 2, 3),
(2392, 1681, 2, 6, 2, 3),
(2393, 1682, 2, 6, 2, 1),
(2394, 1683, 2, 6, 2, 2),
(2395, 700, 2, 6, 2, 3),
(2396, 1684, 2, 6, 2, 3),
(2397, 192, 2, 6, 2, 3),
(2398, 1685, 2, 6, 2, 2),
(2399, 1686, 2, 6, 2, 0),
(2400, 1687, 2, 6, 2, 3),
(2401, 1688, 2, 6, 2, 3),
(2402, 642, 2, 6, 2, 2),
(2403, 1689, 2, 6, 2, 1),
(2404, 754, 2, 6, 2, 3),
(2405, 1690, 2, 6, 2, 3),
(2406, 1691, 2, 6, 2, 3),
(2407, 1692, 2, 6, 2, 2),
(2408, 423, 2, 6, 2, 3),
(2409, 1693, 2, 6, 2, 0),
(2410, 1694, 2, 6, 2, 3),
(2411, 1695, 2, 6, 2, 3),
(2412, 1696, 2, 6, 2, 3),
(2413, 1002, 2, 6, 2, 1),
(2414, 1347, 2, 6, 2, 0),
(2415, 1697, 2, 6, 2, 2),
(2416, 465, 2, 6, 2, 3),
(2417, 1396, 2, 6, 2, 3),
(2418, 1698, 2, 6, 2, 3),
(2419, 1699, 2, 6, 2, 2),
(2420, 1017, 2, 6, 2, 3),
(2421, 1700, 2, 6, 2, 2),
(2422, 1701, 2, 6, 2, 3),
(2423, 575, 2, 6, 2, 3),
(2424, 450, 2, 6, 2, 1),
(2425, 1214, 2, 6, 2, 3),
(2426, 1702, 2, 6, 2, 3),
(2427, 1703, 2, 6, 2, 2),
(2428, 1704, 2, 6, 2, 3),
(2429, 1705, 2, 6, 2, 1),
(2430, 1706, 2, 6, 2, 3),
(2431, 1707, 2, 6, 2, 1),
(2432, 1708, 2, 6, 2, 3),
(2433, 1709, 2, 6, 2, 1),
(2434, 357, 2, 6, 2, 1),
(2435, 1710, 2, 6, 2, 2),
(2436, 1711, 2, 6, 2, 1),
(2437, 1712, 2, 6, 2, 2),
(2438, 86, 2, 6, 2, 3),
(2439, 1713, 2, 6, 2, 2),
(2440, 1339, 2, 6, 2, 1),
(2441, 1714, 2, 6, 2, 1),
(2442, 1715, 2, 6, 2, 2),
(2443, 1716, 2, 6, 2, 3),
(2444, 1717, 2, 6, 2, 2),
(2445, 1718, 2, 6, 2, 3),
(2446, 1719, 2, 6, 1, 2),
(2447, 1720, 2, 6, 1, 1),
(2448, 1721, 2, 6, 1, 2),
(2449, 1722, 2, 6, 1, 2),
(2450, 1031, 2, 6, 1, 3),
(2451, 1723, 2, 6, 1, 1),
(2452, 207, 2, 6, 1, 3),
(2453, 1724, 2, 6, 1, 1),
(2454, 1725, 2, 6, 1, 3),
(2455, 1726, 2, 6, 1, 2),
(2456, 1727, 2, 6, 1, 3),
(2457, 1728, 2, 6, 1, 3),
(2458, 1729, 2, 6, 1, 1),
(2459, 1730, 2, 6, 1, 2),
(2460, 1731, 2, 6, 1, 1),
(2461, 1199, 2, 6, 1, 3),
(2462, 1732, 2, 6, 1, 2),
(2463, 1733, 2, 6, 1, 2),
(2464, 1734, 2, 6, 1, 0),
(2465, 1735, 2, 6, 1, 3),
(2466, 1736, 2, 6, 1, 3),
(2467, 1737, 2, 6, 1, 2),
(2468, 1738, 2, 6, 1, 3),
(2469, 1739, 2, 6, 1, 1),
(2470, 1740, 2, 6, 1, 3),
(2471, 550, 2, 6, 1, 3),
(2472, 481, 2, 6, 1, 1),
(2473, 1186, 2, 6, 1, 1),
(2474, 1741, 2, 6, 1, 2),
(2475, 1742, 2, 6, 1, 1),
(2476, 419, 2, 6, 1, 2),
(2477, 1743, 2, 6, 1, 2),
(2478, 1744, 2, 6, 1, 3),
(2479, 1745, 2, 6, 1, 1),
(2480, 1746, 2, 6, 1, 3),
(2481, 1747, 2, 6, 1, 3),
(2482, 1748, 2, 6, 1, 1),
(2483, 1749, 2, 6, 1, 1),
(2484, 1750, 2, 6, 1, 1),
(2485, 1537, 2, 6, 1, 1),
(2486, 1751, 2, 6, 1, 3),
(2487, 46, 2, 6, 1, 1),
(2488, 1058, 2, 6, 1, 3),
(2489, 514, 2, 6, 1, 2),
(2490, 1752, 2, 6, 1, 1),
(2491, 1753, 2, 6, 1, 2),
(2492, 1754, 2, 6, 1, 1),
(2493, 1755, 2, 6, 1, 1),
(2494, 1368, 2, 6, 1, 2),
(2495, 1756, 2, 6, 1, 2),
(2496, 1757, 2, 6, 1, 3),
(2497, 1758, 2, 6, 1, 3),
(2498, 1759, 2, 6, 1, 2),
(2499, 1760, 2, 6, 1, 1),
(2500, 1761, 2, 6, 1, 1),
(2501, 1762, 2, 6, 1, 3),
(2502, 1763, 2, 6, 1, 3),
(2503, 1764, 2, 6, 1, 3),
(2504, 1765, 2, 6, 1, 1),
(2505, 1766, 2, 6, 1, 2),
(2506, 685, 2, 6, 1, 1),
(2507, 318, 2, 6, 1, 2),
(2508, 1767, 2, 6, 1, 3),
(2509, 1524, 2, 6, 1, 2),
(2510, 1768, 2, 6, 1, 1),
(2511, 1262, 2, 6, 1, 1),
(2512, 1769, 2, 6, 1, 1),
(2513, 1770, 2, 6, 1, 3),
(2514, 1096, 2, 6, 1, 3),
(2515, 1771, 2, 6, 1, 3),
(2516, 1772, 2, 6, 1, 2),
(2517, 1773, 2, 6, 1, 3),
(2518, 1774, 2, 6, 1, 1),
(2519, 1775, 2, 6, 1, 1),
(2520, 593, 2, 6, 1, 3),
(2521, 1776, 2, 6, 1, 1),
(2522, 1777, 2, 6, 1, 1),
(2523, 1778, 2, 6, 1, 1),
(2524, 1779, 2, 6, 1, 3),
(2525, 1780, 2, 6, 1, 1),
(2526, 1781, 2, 6, 1, 0),
(2527, 1782, 2, 6, 1, 2),
(2528, 1783, 2, 6, 1, 2),
(2529, 1784, 2, 6, 1, 3),
(2530, 124, 2, 6, 1, 2),
(2531, 325, 2, 6, 1, 3),
(2532, 1785, 2, 6, 1, 2),
(2533, 1786, 2, 6, 1, 2),
(2534, 1787, 2, 6, 1, 2),
(2535, 1788, 2, 6, 1, 2),
(2536, 1789, 2, 6, 1, 2),
(2537, 1790, 2, 6, 1, 2),
(2538, 1791, 2, 6, 1, 1),
(2539, 1792, 2, 6, 1, 1),
(2540, 1793, 2, 6, 1, 1),
(2541, 1251, 2, 6, 1, 3),
(2542, 1794, 2, 6, 1, 2),
(2543, 1795, 2, 6, 1, 1),
(2544, 1796, 2, 6, 1, 3),
(2545, 1797, 2, 6, 1, 3),
(2546, 1411, 2, 6, 1, 1),
(2547, 1798, 2, 6, 1, 3),
(2548, 1799, 2, 6, 1, 1),
(2549, 1800, 2, 6, 1, 2),
(2550, 666, 2, 6, 1, 3),
(2551, 1801, 2, 6, 1, 3),
(2552, 1802, 2, 6, 1, 3),
(2553, 1803, 2, 6, 1, 2),
(2554, 1804, 2, 6, 1, 1),
(2555, 1805, 2, 6, 1, 1),
(2556, 1806, 2, 6, 1, 2),
(2557, 519, 2, 6, 1, 0),
(2558, 1807, 2, 6, 1, 1),
(2559, 1808, 2, 6, 1, 2),
(2560, 1294, 2, 6, 1, 1),
(2561, 1809, 2, 6, 1, 1),
(2562, 529, 2, 6, 1, 3),
(2563, 1810, 2, 6, 1, 2),
(2564, 1811, 2, 6, 1, 2),
(2565, 1509, 2, 6, 1, 3),
(2566, 1812, 2, 6, 1, 1),
(2567, 590, 2, 6, 1, 1),
(2568, 1813, 2, 6, 1, 1),
(2569, 1814, 2, 6, 1, 2),
(2570, 1815, 2, 6, 1, 2),
(2571, 1816, 2, 6, 1, 2),
(2572, 1817, 2, 6, 1, 1),
(2573, 1818, 2, 6, 1, 3),
(2574, 1819, 2, 6, 1, 2),
(2575, 1820, 2, 6, 1, 3),
(2576, 1821, 2, 6, 1, 3),
(2577, 1822, 2, 6, 1, 2),
(2578, 1823, 2, 6, 1, 2),
(2579, 1824, 2, 6, 1, 1),
(2580, 1825, 2, 6, 1, 3),
(2581, 1826, 2, 6, 1, 1),
(2582, 1827, 2, 6, 1, 2),
(2583, 1828, 2, 6, 1, 3),
(2584, 118, 2, 6, 1, 3),
(2585, 1829, 2, 6, 1, 1),
(2586, 1830, 2, 6, 1, 3),
(2587, 1831, 2, 6, 1, 3),
(2588, 1832, 2, 6, 1, 3),
(2589, 1833, 2, 6, 1, 2),
(2590, 1834, 2, 6, 1, 2),
(2591, 693, 2, 6, 1, 3),
(2592, 1835, 2, 6, 1, 1),
(2593, 1330, 2, 6, 1, 2),
(2594, 1836, 2, 6, 1, 3),
(2595, 1837, 2, 6, 1, 2),
(2596, 1838, 2, 6, 1, 1),
(2597, 1037, 2, 6, 1, 2),
(2598, 647, 2, 6, 1, 3),
(2599, 1839, 2, 6, 1, 1),
(2600, 1840, 2, 6, 1, 3),
(2601, 1841, 2, 6, 1, 3),
(2602, 1842, 2, 6, 1, 2),
(2603, 4, 2, 6, 1, 0),
(2604, 420, 2, 6, 1, 1),
(2605, 1843, 2, 6, 1, 3),
(2606, 1844, 2, 6, 1, 1),
(2607, 679, 2, 6, 1, 2),
(2608, 594, 2, 6, 1, 3),
(2609, 1845, 2, 6, 1, 3),
(2610, 1846, 2, 6, 1, 1),
(2611, 766, 2, 6, 1, 2),
(2612, 1847, 2, 6, 1, 1),
(2613, 829, 2, 6, 1, 2),
(2614, 1848, 2, 6, 1, 1),
(2615, 1849, 2, 6, 1, 3),
(2616, 1850, 2, 6, 1, 1),
(2617, 54, 2, 6, 1, 3),
(2618, 234, 2, 6, 1, 3),
(2619, 1851, 2, 6, 1, 1),
(2620, 1852, 2, 6, 1, 3),
(2621, 1470, 2, 6, 1, 3),
(2622, 1853, 2, 6, 1, 1),
(2623, 1854, 2, 6, 1, 3),
(2624, 1855, 2, 6, 1, 3),
(2625, 29, 2, 6, 1, 2),
(2626, 1856, 2, 6, 1, 2),
(2627, 1298, 2, 6, 1, 3),
(2628, 1190, 2, 6, 1, 2),
(2629, 1857, 2, 6, 1, 2),
(2630, 1858, 2, 6, 1, 1),
(2631, 1859, 2, 6, 1, 2),
(2632, 1426, 2, 6, 1, 3),
(2633, 1860, 2, 6, 1, 2),
(2634, 62, 2, 6, 1, 1),
(2635, 1861, 2, 6, 1, 1),
(2636, 1862, 2, 6, 1, 3),
(2637, 134, 2, 6, 1, 1),
(2638, 675, 2, 6, 1, 2),
(2639, 1863, 2, 6, 1, 1),
(2640, 1864, 2, 6, 1, 3),
(2641, 1865, 2, 6, 1, 1),
(2642, 1866, 2, 6, 1, 0),
(2643, 1867, 2, 6, 1, 3),
(2644, 872, 2, 6, 1, 2),
(2645, 1868, 2, 6, 1, 3),
(2646, 92, 2, 6, 1, 3),
(2647, 1869, 2, 6, 1, 1),
(2648, 1870, 2, 6, 1, 2),
(2649, 1871, 2, 6, 1, 1),
(2650, 1872, 2, 6, 1, 2),
(2651, 1873, 2, 6, 1, 1),
(2652, 1874, 2, 6, 1, 3),
(2653, 1875, 2, 6, 1, 2),
(2654, 1876, 2, 6, 1, 1),
(2655, 1877, 2, 6, 1, 3),
(2656, 1878, 2, 6, 1, 1),
(2657, 1488, 2, 6, 1, 1),
(2658, 1879, 2, 6, 1, 3),
(2659, 1880, 2, 6, 1, 1),
(2660, 1881, 2, 6, 1, 2),
(2661, 902, 2, 6, 1, 3),
(2662, 1882, 2, 6, 1, 2),
(2663, 1883, 2, 6, 1, 2),
(2664, 1884, 2, 6, 1, 3),
(2665, 1885, 2, 6, 1, 3),
(2666, 451, 2, 6, 1, 3),
(2667, 1886, 2, 6, 1, 1),
(2668, 95, 2, 6, 1, 3),
(2669, 1887, 2, 6, 1, 3),
(2670, 1888, 2, 6, 1, 1),
(2671, 1889, 2, 6, 1, 1),
(2672, 1890, 2, 6, 1, 3),
(2673, 920, 2, 6, 1, 3),
(2674, 139, 2, 6, 1, 3),
(2675, 1891, 2, 6, 1, 1),
(2676, 1892, 2, 6, 1, 3),
(2677, 1416, 2, 6, 1, 3),
(2678, 471, 2, 6, 1, 1),
(2679, 1893, 2, 6, 1, 2),
(2680, 1894, 2, 6, 1, 3),
(2681, 1895, 2, 6, 1, 3),
(2682, 1331, 2, 6, 1, 2),
(2683, 1896, 2, 6, 1, 2),
(2684, 1897, 2, 6, 1, 3),
(2685, 1898, 2, 6, 1, 2),
(2686, 1899, 2, 6, 1, 2),
(2687, 1900, 2, 6, 1, 3),
(2688, 1901, 2, 6, 1, 2),
(2689, 1902, 2, 6, 1, 1),
(2690, 1903, 2, 6, 1, 1),
(2691, 520, 2, 6, 1, 3),
(2692, 1511, 2, 6, 1, 2),
(2693, 1904, 2, 6, 1, 3),
(2694, 707, 2, 6, 1, 2),
(2695, 1905, 2, 6, 1, 1),
(2696, 1906, 2, 6, 1, 1),
(2697, 1907, 2, 6, 1, 2),
(2698, 303, 2, 6, 1, 3),
(2699, 1908, 2, 6, 1, 3),
(2700, 1909, 2, 6, 1, 2),
(2701, 1910, 2, 6, 1, 1),
(2702, 1911, 2, 6, 1, 3),
(2703, 1912, 2, 6, 1, 2),
(2704, 530, 2, 6, 1, 0),
(2705, 1913, 2, 6, 1, 1),
(2706, 1914, 2, 6, 1, 3),
(2707, 1915, 2, 6, 1, 1),
(2708, 1916, 2, 6, 1, 1),
(2709, 742, 2, 6, 1, 3),
(2710, 1917, 2, 6, 1, 2),
(2711, 71, 2, 6, 1, 0),
(2712, 1918, 2, 6, 1, 2),
(2713, 1919, 2, 6, 1, 3),
(2714, 1920, 2, 6, 1, 1),
(2715, 1921, 2, 6, 1, 1),
(2716, 1922, 2, 6, 1, 1),
(2717, 1923, 2, 6, 1, 1),
(2718, 1924, 2, 6, 1, 2),
(2719, 49, 2, 6, 1, 1),
(2720, 690, 2, 6, 1, 1),
(2721, 1925, 2, 6, 1, 3),
(2722, 1926, 2, 6, 1, 1),
(2723, 218, 2, 6, 1, 3),
(2724, 1927, 2, 6, 1, 3),
(2725, 1928, 2, 6, 1, 3),
(2726, 1929, 2, 6, 1, 3),
(2727, 1930, 2, 6, 1, 3),
(2728, 1931, 2, 6, 1, 2),
(2729, 1932, 2, 6, 1, 1),
(2730, 1933, 2, 6, 1, 1),
(2731, 1934, 2, 6, 1, 2),
(2732, 1935, 2, 6, 1, 3),
(2733, 1936, 2, 6, 1, 1),
(2734, 1937, 2, 6, 1, 1),
(2735, 1938, 2, 6, 1, 3),
(2736, 1939, 2, 6, 1, 1),
(2737, 1940, 2, 6, 1, 3),
(2738, 1941, 2, 6, 1, 3),
(2739, 1942, 2, 6, 1, 2),
(2740, 1943, 2, 6, 1, 2),
(2741, 729, 2, 6, 1, 1),
(2742, 1944, 2, 6, 1, 2),
(2743, 1945, 2, 6, 1, 3),
(2744, 1946, 2, 6, 1, 1),
(2745, 1947, 2, 6, 1, 2),
(2746, 1948, 2, 6, 1, 3),
(2747, 1949, 2, 6, 1, 2),
(2748, 360, 2, 6, 1, 3),
(2749, 1950, 2, 6, 1, 3),
(2750, 1103, 2, 6, 1, 3),
(2751, 1951, 2, 6, 1, 1),
(2752, 372, 2, 6, 1, 2),
(2753, 1952, 2, 6, 1, 2),
(2754, 1953, 2, 6, 1, 3),
(2755, 1954, 2, 6, 1, 3),
(2756, 1955, 2, 6, 1, 3),
(2757, 1956, 2, 6, 1, 3),
(2758, 1957, 2, 6, 1, 3),
(2759, 1958, 2, 6, 1, 1),
(2760, 1242, 2, 6, 1, 1),
(2761, 1959, 2, 6, 1, 2),
(2762, 1960, 2, 6, 1, 1),
(2763, 395, 2, 6, 1, 2),
(2764, 1961, 2, 6, 1, 2),
(2765, 1962, 2, 6, 1, 1),
(2766, 1963, 2, 6, 1, 2),
(2767, 1964, 2, 6, 1, 2),
(2768, 1965, 2, 6, 1, 2),
(2769, 1966, 2, 6, 1, 1),
(2770, 329, 2, 6, 1, 0),
(2771, 1419, 2, 6, 1, 0),
(2772, 397, 2, 6, 1, 2),
(2773, 1967, 2, 6, 1, 3),
(2774, 1968, 2, 6, 1, 1),
(2775, 759, 2, 6, 1, 2),
(2776, 1969, 2, 6, 1, 3),
(2777, 1970, 2, 6, 1, 1),
(2778, 412, 2, 6, 1, 3),
(2779, 692, 2, 6, 1, 0),
(2780, 1438, 2, 6, 1, 1),
(2781, 1971, 2, 6, 1, 3),
(2782, 1972, 2, 6, 1, 3),
(2783, 1973, 2, 6, 1, 3),
(2784, 1974, 2, 6, 1, 1),
(2785, 328, 2, 6, 1, 2),
(2786, 653, 2, 6, 1, 2),
(2787, 1975, 2, 6, 1, 1),
(2788, 1976, 2, 6, 1, 3),
(2789, 1977, 2, 6, 1, 2),
(2790, 1978, 2, 6, 1, 1),
(2791, 1979, 2, 6, 1, 2),
(2792, 1980, 2, 6, 1, 1),
(2793, 1981, 2, 6, 1, 3),
(2794, 1982, 2, 6, 1, 1),
(2795, 1218, 2, 6, 1, 1),
(2796, 1983, 2, 6, 1, 3),
(2797, 1984, 2, 6, 1, 2),
(2798, 1985, 2, 6, 1, 3),
(2799, 1986, 2, 6, 1, 2),
(2800, 1987, 2, 6, 1, 2),
(2801, 1523, 2, 6, 1, 1),
(2802, 1988, 2, 6, 1, 2),
(2803, 1989, 2, 6, 1, 1),
(2804, 1990, 2, 6, 1, 3),
(2805, 1991, 2, 6, 1, 1),
(2806, 482, 2, 6, 1, 1),
(2807, 1992, 2, 6, 1, 3),
(2808, 1993, 2, 6, 1, 3),
(2809, 1238, 2, 6, 1, 2),
(2810, 489, 2, 6, 1, 2),
(2811, 486, 2, 6, 1, 1),
(2812, 1994, 2, 6, 1, 1),
(2813, 1995, 2, 6, 1, 1),
(2814, 1996, 2, 6, 1, 2),
(2815, 1997, 2, 6, 1, 1),
(2816, 1998, 2, 6, 1, 1),
(2817, 1999, 2, 6, 1, 3),
(2818, 2000, 2, 6, 1, 3),
(2819, 2001, 2, 6, 1, 3),
(2820, 2002, 2, 6, 1, 1),
(2821, 2003, 2, 6, 1, 1),
(2822, 2004, 2, 6, 1, 1),
(2823, 2005, 2, 6, 1, 3),
(2824, 47, 2, 6, 1, 3),
(2825, 2006, 2, 6, 1, 1),
(2826, 458, 2, 6, 1, 2),
(2827, 2007, 2, 6, 1, 1),
(2828, 884, 2, 6, 1, 3),
(2829, 2008, 2, 6, 1, 3),
(2830, 2009, 2, 6, 1, 2),
(2831, 2010, 2, 6, 1, 2),
(2832, 2011, 2, 6, 1, 1),
(2833, 2012, 2, 6, 1, 3),
(2834, 2013, 2, 6, 1, 1),
(2835, 2014, 2, 6, 1, 1),
(2836, 2015, 2, 6, 1, 1),
(2837, 2016, 2, 6, 1, 2),
(2838, 223, 2, 6, 1, 3),
(2839, 59, 2, 6, 1, 3),
(2840, 2017, 2, 6, 1, 3),
(2841, 2018, 2, 6, 1, 2),
(2842, 2019, 2, 6, 1, 1),
(2843, 2020, 2, 6, 1, 2),
(2844, 2021, 2, 6, 1, 3),
(2845, 518, 2, 6, 1, 3),
(2846, 2022, 2, 6, 1, 1),
(2847, 2023, 2, 6, 1, 3),
(2848, 233, 2, 6, 1, 1),
(2849, 485, 2, 6, 1, 2),
(2850, 2024, 2, 6, 1, 3),
(2851, 2025, 2, 6, 1, 2),
(2852, 2026, 2, 6, 1, 3),
(2853, 2027, 2, 6, 1, 1),
(2854, 2028, 2, 6, 1, 1),
(2855, 2029, 2, 6, 1, 3),
(2856, 2030, 2, 6, 1, 3),
(2857, 2031, 2, 6, 1, 1),
(2858, 2032, 2, 6, 1, 2),
(2859, 2033, 2, 6, 1, 1),
(2860, 2034, 2, 6, 1, 1),
(2861, 2035, 2, 6, 1, 2),
(2862, 2036, 2, 6, 1, 1),
(2863, 2037, 2, 6, 1, 3),
(2864, 2038, 2, 6, 1, 1),
(2865, 2039, 2, 6, 1, 1),
(2866, 2040, 2, 6, 1, 1),
(2867, 2041, 2, 6, 1, 1),
(2868, 2042, 2, 6, 1, 1),
(2869, 2043, 2, 6, 1, 2),
(2870, 2044, 2, 6, 1, 1),
(2871, 2045, 2, 6, 1, 3),
(2872, 2046, 2, 6, 1, 3),
(2873, 2047, 2, 6, 1, 3),
(2874, 2048, 2, 6, 1, 1),
(2875, 977, 2, 6, 1, 1),
(2876, 2049, 2, 6, 1, 0),
(2877, 2050, 2, 6, 1, 1),
(2878, 727, 2, 6, 1, 3),
(2879, 2051, 2, 6, 1, 1),
(2880, 2052, 2, 6, 1, 2),
(2881, 1306, 2, 6, 1, 1),
(2882, 2053, 2, 6, 1, 3),
(2883, 2054, 2, 6, 1, 3),
(2884, 2055, 2, 6, 1, 1),
(2885, 2056, 2, 6, 1, 3),
(2886, 2057, 2, 6, 1, 1),
(2887, 2058, 2, 6, 1, 3),
(2888, 2059, 2, 6, 1, 1),
(2889, 2060, 2, 6, 1, 1),
(2890, 2061, 2, 6, 1, 2),
(2891, 1001, 2, 6, 1, 1),
(2892, 2062, 2, 6, 1, 3),
(2893, 1268, 2, 6, 1, 3),
(2894, 1469, 2, 6, 1, 3),
(2895, 2063, 2, 6, 1, 1),
(2896, 2064, 2, 6, 1, 1),
(2897, 2065, 2, 6, 1, 1),
(2898, 2066, 2, 6, 1, 3),
(2899, 2067, 2, 6, 1, 1),
(2900, 2068, 2, 6, 1, 1),
(2901, 2069, 2, 6, 1, 3),
(2902, 694, 2, 6, 1, 1),
(2903, 2070, 2, 6, 1, 1),
(2904, 2071, 2, 6, 1, 2),
(2905, 2072, 2, 6, 1, 1),
(2906, 2073, 2, 6, 1, 2),
(2907, 2074, 2, 6, 1, 2),
(2908, 1454, 2, 6, 1, 1),
(2909, 2075, 2, 6, 1, 1),
(2910, 2076, 2, 6, 1, 1),
(2911, 1219, 2, 6, 1, 2),
(2912, 2077, 2, 6, 1, 1),
(2913, 247, 2, 6, 1, 2),
(2914, 2078, 2, 6, 1, 2),
(2915, 2079, 2, 6, 1, 3),
(2916, 2080, 2, 6, 1, 2),
(2917, 2081, 2, 6, 1, 1),
(2918, 2082, 2, 6, 1, 2),
(2919, 2083, 2, 6, 1, 1),
(2920, 2084, 2, 6, 1, 3),
(2921, 2085, 2, 6, 1, 2),
(2922, 2086, 2, 6, 1, 3),
(2923, 78, 2, 6, 1, 1),
(2924, 459, 2, 6, 1, 2),
(2925, 2087, 2, 6, 1, 3),
(2926, 2088, 2, 6, 1, 2),
(2927, 2089, 2, 6, 1, 3),
(2928, 2090, 2, 6, 1, 3),
(2929, 1395, 2, 6, 1, 1),
(2930, 230, 2, 6, 1, 2),
(2931, 2091, 2, 6, 1, 2),
(2932, 1415, 2, 6, 1, 1),
(2933, 2092, 2, 6, 1, 2),
(2934, 2093, 2, 6, 1, 1),
(2935, 804, 2, 6, 1, 3),
(2936, 2094, 2, 6, 1, 2),
(2937, 2095, 2, 6, 1, 1),
(2938, 2096, 2, 6, 1, 2),
(2939, 2097, 2, 6, 1, 1),
(2940, 2098, 2, 6, 1, 3),
(2941, 2099, 2, 6, 1, 2),
(2942, 2100, 2, 6, 1, 1),
(2943, 604, 2, 6, 1, 2),
(2944, 2101, 2, 6, 1, 3),
(2945, 2102, 2, 6, 1, 3),
(2946, 2103, 2, 6, 1, 1),
(2947, 2104, 2, 6, 1, 1),
(2948, 2105, 2, 6, 1, 3),
(2949, 2106, 2, 6, 1, 2),
(2950, 2107, 2, 6, 1, 2),
(2951, 2108, 2, 6, 1, 1),
(2952, 2109, 2, 6, 1, 2),
(2953, 706, 2, 6, 1, 2),
(2954, 2110, 2, 6, 1, 0),
(2955, 2111, 2, 6, 1, 1),
(2956, 2112, 2, 6, 1, 1),
(2957, 1417, 2, 6, 1, 1),
(2958, 509, 2, 6, 1, 2),
(2959, 39, 2, 6, 1, 3),
(2960, 2113, 2, 6, 1, 2),
(2961, 2114, 2, 6, 1, 0),
(2962, 2115, 2, 6, 1, 1),
(2963, 2116, 2, 6, 1, 3),
(2964, 2117, 2, 6, 1, 1),
(2965, 1496, 2, 6, 1, 3),
(2966, 2118, 2, 6, 1, 1),
(2967, 2119, 2, 6, 1, 1),
(2968, 2120, 2, 6, 1, 2),
(2969, 2121, 2, 6, 1, 2),
(2970, 2122, 2, 6, 1, 2),
(2971, 2123, 2, 6, 1, 3),
(2972, 2124, 2, 6, 1, 2),
(2973, 2125, 2, 6, 1, 1),
(2974, 2126, 2, 6, 1, 1),
(2975, 2127, 2, 6, 1, 1),
(2976, 2128, 2, 6, 1, 1),
(2977, 398, 2, 6, 1, 2),
(2978, 33, 2, 6, 1, 3),
(2979, 2129, 2, 6, 1, 1),
(2980, 2130, 2, 6, 1, 3),
(2981, 2131, 2, 6, 1, 1),
(2982, 2132, 2, 6, 1, 1),
(2983, 2133, 2, 6, 1, 1),
(2984, 198, 2, 6, 1, 3),
(2985, 365, 2, 7, 26, 3),
(2986, 1, 2, 7, 21, 0),
(2987, 465, 2, 7, 20, 3),
(2988, 3, 2, 7, 19, 0),
(2989, 2, 2, 7, 15, 0),
(2990, 6, 2, 7, 14, 0),
(2991, 79, 2, 7, 14, 0),
(2992, 2134, 2, 7, 13, 2),
(2993, 27, 2, 7, 12, 1),
(2994, 5, 2, 7, 11, 0),
(2995, 76, 2, 7, 11, 1),
(2996, 7, 2, 7, 9, 0),
(2997, 35, 2, 7, 9, 1),
(2998, 502, 2, 7, 9, 1),
(2999, 14, 2, 7, 8, 2),
(3000, 425, 2, 7, 8, 3),
(3001, 1796, 2, 7, 8, 3),
(3002, 198, 2, 7, 8, 3),
(3003, 12, 2, 7, 8, 1),
(3004, 67, 2, 7, 7, 3),
(3005, 214, 2, 7, 7, 3),
(3006, 201, 2, 7, 6, 2),
(3007, 1027, 2, 7, 6, 3),
(3008, 345, 2, 7, 6, 3),
(3009, 1300, 2, 7, 6, 1),
(3010, 30, 2, 7, 5, 2),
(3011, 117, 2, 7, 5, 1),
(3012, 2135, 2, 7, 5, 3),
(3013, 2136, 2, 7, 5, 3),
(3014, 21, 2, 7, 5, 0),
(3015, 17, 2, 7, 5, 1),
(3016, 1718, 2, 7, 5, 3),
(3017, 144, 2, 7, 5, 1),
(3018, 2137, 2, 7, 4, 1),
(3019, 2138, 2, 7, 4, 1),
(3020, 2139, 2, 7, 4, 2),
(3021, 105, 2, 7, 4, 3),
(3022, 2140, 2, 7, 4, 1),
(3023, 2141, 2, 7, 4, 1),
(3024, 2142, 2, 7, 4, 1),
(3025, 44, 2, 7, 4, 3),
(3026, 1742, 2, 7, 4, 1),
(3027, 2143, 2, 7, 4, 3),
(3028, 2144, 2, 7, 4, 1),
(3029, 36, 2, 7, 4, 1),
(3030, 2145, 2, 7, 4, 1),
(3031, 118, 2, 7, 4, 3),
(3032, 61, 2, 7, 3, 1),
(3033, 1605, 2, 7, 3, 3),
(3034, 23, 2, 7, 3, 2),
(3035, 765, 2, 7, 3, 3),
(3036, 749, 2, 7, 3, 2),
(3037, 39, 2, 7, 3, 3),
(3038, 103, 2, 7, 3, 3),
(3039, 1218, 2, 7, 3, 1),
(3040, 2021, 2, 7, 3, 3),
(3041, 1786, 2, 7, 3, 2),
(3042, 2146, 2, 7, 3, 3),
(3043, 1507, 2, 7, 3, 1),
(3044, 55, 2, 7, 3, 1),
(3045, 180, 2, 7, 3, 2),
(3046, 31, 2, 7, 3, 0),
(3047, 174, 2, 7, 3, 1),
(3048, 106, 2, 7, 3, 3),
(3049, 37, 2, 7, 3, 3),
(3050, 1278, 2, 7, 3, 3),
(3051, 2147, 2, 7, 3, 1),
(3052, 34, 2, 7, 3, 0),
(3053, 2148, 2, 7, 3, 1),
(3054, 119, 2, 7, 3, 1),
(3055, 77, 2, 7, 3, 1),
(3056, 1017, 2, 7, 3, 3),
(3057, 2068, 2, 7, 3, 1),
(3058, 9, 2, 7, 3, 2),
(3059, 450, 2, 7, 3, 1),
(3060, 29, 2, 7, 3, 2),
(3061, 892, 2, 7, 3, 1),
(3062, 25, 2, 7, 3, 0),
(3063, 2149, 2, 7, 3, 1),
(3064, 92, 2, 7, 3, 3),
(3065, 945, 2, 7, 3, 1),
(3066, 8, 2, 7, 3, 3),
(3067, 65, 2, 7, 3, 0),
(3068, 33, 2, 7, 3, 3),
(3069, 28, 2, 7, 3, 0),
(3070, 789, 2, 7, 3, 3),
(3071, 944, 2, 7, 3, 1),
(3072, 15, 2, 7, 3, 0),
(3073, 1007, 2, 7, 2, 3),
(3074, 2150, 2, 7, 2, 1),
(3075, 195, 2, 7, 2, 0),
(3076, 389, 2, 7, 2, 1),
(3077, 1688, 2, 7, 2, 3),
(3078, 563, 2, 7, 2, 1),
(3079, 1339, 2, 7, 2, 1),
(3080, 1717, 2, 7, 2, 2),
(3081, 1837, 2, 7, 2, 2),
(3082, 2151, 2, 7, 2, 1),
(3083, 608, 2, 7, 2, 1),
(3084, 2152, 2, 7, 2, 2),
(3085, 1653, 2, 7, 2, 1),
(3086, 1634, 2, 7, 2, 3),
(3087, 2153, 2, 7, 2, 1),
(3088, 98, 2, 7, 2, 1),
(3089, 179, 2, 7, 2, 2),
(3090, 873, 2, 7, 2, 3),
(3091, 2154, 2, 7, 2, 3),
(3092, 2155, 2, 7, 2, 1),
(3093, 2156, 2, 7, 2, 1),
(3094, 2157, 2, 7, 2, 1),
(3095, 2158, 2, 7, 2, 1),
(3096, 2159, 2, 7, 2, 1),
(3097, 2160, 2, 7, 2, 1),
(3098, 348, 2, 7, 2, 2),
(3099, 1449, 2, 7, 2, 1),
(3100, 2161, 2, 7, 2, 1),
(3101, 2162, 2, 7, 2, 1),
(3102, 1238, 2, 7, 2, 2),
(3103, 1122, 2, 7, 2, 3),
(3104, 327, 2, 7, 2, 1),
(3105, 282, 2, 7, 2, 3),
(3106, 2163, 2, 7, 2, 1),
(3107, 692, 2, 7, 2, 0),
(3108, 1570, 2, 7, 2, 1),
(3109, 882, 2, 7, 2, 0),
(3110, 2164, 2, 7, 2, 3),
(3111, 401, 2, 7, 2, 1),
(3112, 684, 2, 7, 2, 2),
(3113, 1264, 2, 7, 2, 3),
(3114, 2165, 2, 7, 2, 1),
(3115, 706, 2, 7, 2, 2),
(3116, 2166, 2, 7, 2, 1),
(3117, 91, 2, 7, 2, 1),
(3118, 271, 2, 7, 2, 1),
(3119, 2167, 2, 7, 2, 1),
(3120, 192, 2, 7, 2, 3),
(3121, 2168, 2, 7, 2, 1),
(3122, 153, 2, 7, 2, 1),
(3123, 391, 2, 7, 2, 1),
(3124, 2169, 2, 7, 2, 1),
(3125, 1545, 2, 7, 2, 3),
(3126, 202, 2, 7, 2, 0),
(3127, 2170, 2, 7, 2, 1),
(3128, 2171, 2, 7, 2, 1),
(3129, 1564, 2, 7, 2, 0),
(3130, 592, 2, 7, 2, 3),
(3131, 38, 2, 7, 2, 3),
(3132, 2172, 2, 7, 2, 2),
(3133, 266, 2, 7, 2, 0),
(3134, 1285, 2, 7, 2, 3),
(3135, 143, 2, 7, 2, 1),
(3136, 1694, 2, 7, 2, 3),
(3137, 45, 2, 7, 2, 2),
(3138, 2173, 2, 7, 2, 1),
(3139, 1793, 2, 7, 2, 1),
(3140, 569, 2, 7, 2, 2),
(3141, 2088, 2, 7, 2, 2),
(3142, 2174, 2, 7, 2, 3),
(3143, 2175, 2, 7, 2, 1),
(3144, 2176, 2, 7, 2, 3),
(3145, 1081, 2, 7, 2, 1),
(3146, 1382, 2, 7, 2, 1),
(3147, 70, 2, 7, 2, 1),
(3148, 2177, 2, 7, 2, 3),
(3149, 2178, 2, 7, 2, 1),
(3150, 2179, 2, 7, 2, 1),
(3151, 47, 2, 7, 2, 3),
(3152, 225, 2, 7, 2, 1),
(3153, 41, 2, 7, 2, 0),
(3154, 2180, 2, 7, 2, 1),
(3155, 154, 2, 7, 2, 0),
(3156, 2181, 2, 7, 1, 3),
(3157, 2182, 2, 7, 1, 3),
(3158, 2183, 2, 7, 1, 1),
(3159, 2184, 2, 7, 1, 1),
(3160, 2185, 2, 7, 1, 1),
(3161, 2186, 2, 7, 1, 2),
(3162, 2187, 2, 7, 1, 1),
(3163, 2188, 2, 7, 1, 1),
(3164, 708, 2, 7, 1, 1),
(3165, 808, 2, 7, 1, 1),
(3166, 1258, 2, 7, 1, 1),
(3167, 796, 2, 7, 1, 3),
(3168, 1536, 2, 7, 1, 1),
(3169, 189, 2, 7, 1, 0),
(3170, 1506, 2, 7, 1, 1),
(3171, 2189, 2, 7, 1, 1),
(3172, 2190, 2, 7, 1, 1),
(3173, 2191, 2, 7, 1, 3),
(3174, 912, 2, 7, 1, 0),
(3175, 428, 2, 7, 1, 1),
(3176, 2192, 2, 7, 1, 3),
(3177, 2193, 2, 7, 1, 1),
(3178, 2194, 2, 7, 1, 1),
(3179, 2009, 2, 7, 1, 2),
(3180, 883, 2, 7, 1, 1),
(3181, 2195, 2, 7, 1, 1),
(3182, 207, 2, 7, 1, 3),
(3183, 2196, 2, 7, 1, 1),
(3184, 2197, 2, 7, 1, 1),
(3185, 1357, 2, 7, 1, 2),
(3186, 114, 2, 7, 1, 2),
(3187, 2198, 2, 7, 1, 1),
(3188, 2199, 2, 7, 1, 0),
(3189, 2200, 2, 7, 1, 1),
(3190, 2201, 2, 7, 1, 3),
(3191, 2202, 2, 7, 1, 1),
(3192, 2203, 2, 7, 1, 1),
(3193, 2204, 2, 7, 1, 1),
(3194, 2205, 2, 7, 1, 1),
(3195, 2206, 2, 7, 1, 1),
(3196, 686, 2, 7, 1, 2),
(3197, 2207, 2, 7, 1, 1),
(3198, 460, 2, 7, 1, 2),
(3199, 622, 2, 7, 1, 1),
(3200, 2208, 2, 7, 1, 1),
(3201, 2209, 2, 7, 1, 1),
(3202, 761, 2, 7, 1, 3),
(3203, 2210, 2, 7, 1, 1),
(3204, 2211, 2, 7, 1, 1),
(3205, 2212, 2, 7, 1, 1),
(3206, 203, 2, 7, 1, 1),
(3207, 2213, 2, 7, 1, 1),
(3208, 2214, 2, 7, 1, 1),
(3209, 2215, 2, 7, 1, 1),
(3210, 2216, 2, 7, 1, 1),
(3211, 2217, 2, 7, 1, 1),
(3212, 2218, 2, 7, 1, 1),
(3213, 2219, 2, 7, 1, 1),
(3214, 1337, 2, 7, 1, 3),
(3215, 2220, 2, 7, 1, 1),
(3216, 2221, 2, 7, 1, 1),
(3217, 2222, 2, 7, 1, 1),
(3218, 2223, 2, 7, 1, 1),
(3219, 2224, 2, 7, 1, 1),
(3220, 410, 2, 7, 1, 3),
(3221, 2225, 2, 7, 1, 1),
(3222, 696, 2, 7, 1, 2),
(3223, 400, 2, 7, 1, 3),
(3224, 2226, 2, 7, 1, 1),
(3225, 2227, 2, 7, 1, 1),
(3226, 2228, 2, 7, 1, 3),
(3227, 2229, 2, 7, 1, 1),
(3228, 1640, 2, 7, 1, 1),
(3229, 11, 2, 7, 1, 1),
(3230, 2230, 2, 7, 1, 1),
(3231, 416, 2, 7, 1, 3),
(3232, 2231, 2, 7, 1, 1),
(3233, 2232, 2, 7, 1, 3),
(3234, 2233, 2, 7, 1, 1),
(3235, 2234, 2, 7, 1, 1),
(3236, 2235, 2, 7, 1, 1),
(3237, 2236, 2, 7, 1, 2),
(3238, 1603, 2, 7, 1, 1),
(3239, 2237, 2, 7, 1, 1),
(3240, 2238, 2, 7, 1, 3),
(3241, 2239, 2, 7, 1, 1),
(3242, 2240, 2, 7, 1, 3),
(3243, 2241, 2, 7, 1, 1),
(3244, 2242, 2, 7, 1, 1),
(3245, 2243, 2, 7, 1, 1),
(3246, 2244, 2, 7, 1, 1),
(3247, 2245, 2, 7, 1, 3),
(3248, 2246, 2, 7, 1, 1),
(3249, 242, 2, 7, 1, 3),
(3250, 2247, 2, 7, 1, 1),
(3251, 2248, 2, 7, 1, 1),
(3252, 2249, 2, 7, 1, 2),
(3253, 2250, 2, 7, 1, 1),
(3254, 2251, 2, 7, 1, 1),
(3255, 2252, 2, 7, 1, 3),
(3256, 2253, 2, 7, 1, 2),
(3257, 18, 2, 7, 1, 1),
(3258, 2254, 2, 7, 1, 1),
(3259, 1782, 2, 7, 1, 2),
(3260, 2255, 2, 7, 1, 3),
(3261, 274, 2, 7, 1, 1),
(3262, 2256, 2, 7, 1, 1),
(3263, 2257, 2, 7, 1, 2),
(3264, 62, 2, 7, 1, 1),
(3265, 2258, 2, 7, 1, 1),
(3266, 68, 2, 7, 1, 3),
(3267, 2259, 2, 7, 1, 2),
(3268, 331, 2, 7, 1, 2),
(3269, 2260, 2, 7, 1, 3),
(3270, 64, 2, 7, 1, 3),
(3271, 1411, 2, 7, 1, 1),
(3272, 1303, 2, 7, 1, 1),
(3273, 2261, 2, 7, 1, 1),
(3274, 2262, 2, 7, 1, 1),
(3275, 966, 2, 7, 1, 1),
(3276, 2263, 2, 7, 1, 1),
(3277, 2264, 2, 7, 1, 1),
(3278, 2265, 2, 7, 1, 3),
(3279, 2266, 2, 7, 1, 1),
(3280, 2267, 2, 7, 1, 3),
(3281, 302, 2, 7, 1, 2),
(3282, 2268, 2, 7, 1, 3),
(3283, 2269, 2, 7, 1, 1),
(3284, 2270, 2, 7, 1, 3),
(3285, 221, 2, 7, 1, 2),
(3286, 2271, 2, 7, 1, 1),
(3287, 2272, 2, 7, 1, 1),
(3288, 2273, 2, 7, 1, 1),
(3289, 2274, 2, 7, 1, 1),
(3290, 2275, 2, 7, 1, 1),
(3291, 2276, 2, 7, 1, 1),
(3292, 2277, 2, 7, 1, 1),
(3293, 657, 2, 7, 1, 1),
(3294, 1190, 2, 7, 1, 2),
(3295, 2278, 2, 7, 1, 1),
(3296, 2279, 2, 7, 1, 1),
(3297, 2280, 2, 7, 1, 1),
(3298, 2083, 2, 7, 1, 1),
(3299, 2281, 2, 7, 1, 1),
(3300, 2282, 2, 7, 1, 1),
(3301, 1601, 2, 7, 1, 3),
(3302, 1649, 2, 7, 1, 1),
(3303, 2283, 2, 7, 1, 1),
(3304, 1168, 2, 7, 1, 3),
(3305, 2284, 2, 7, 1, 2),
(3306, 1205, 2, 7, 1, 1),
(3307, 2285, 2, 7, 1, 1),
(3308, 1034, 2, 7, 1, 2),
(3309, 2286, 2, 7, 1, 3),
(3310, 2287, 2, 7, 1, 1),
(3311, 395, 2, 7, 1, 2),
(3312, 2288, 2, 7, 1, 1),
(3313, 2289, 2, 7, 1, 2),
(3314, 2290, 2, 7, 1, 1),
(3315, 2291, 2, 7, 1, 1),
(3316, 2292, 2, 7, 1, 1),
(3317, 2293, 2, 7, 1, 1),
(3318, 16, 2, 7, 1, 0),
(3319, 2294, 2, 7, 1, 3),
(3320, 2295, 2, 7, 1, 3),
(3321, 63, 2, 7, 1, 1),
(3322, 220, 2, 7, 1, 0),
(3323, 2296, 2, 7, 1, 1),
(3324, 2297, 2, 7, 1, 3),
(3325, 1370, 2, 7, 1, 2),
(3326, 1863, 2, 7, 1, 1),
(3327, 2298, 2, 7, 1, 3),
(3328, 46, 2, 7, 1, 1),
(3329, 1464, 2, 7, 1, 3),
(3330, 152, 2, 7, 1, 3),
(3331, 1188, 2, 7, 1, 3),
(3332, 367, 2, 7, 1, 1),
(3333, 2299, 2, 7, 1, 2),
(3334, 2300, 2, 7, 1, 3),
(3335, 78, 2, 7, 1, 1),
(3336, 2301, 2, 7, 1, 1),
(3337, 500, 2, 7, 1, 3),
(3338, 20, 2, 7, 1, 0),
(3339, 124, 2, 7, 1, 2),
(3340, 2302, 2, 7, 1, 1),
(3341, 2303, 2, 7, 1, 1),
(3342, 396, 2, 7, 1, 1),
(3343, 2304, 2, 7, 1, 3),
(3344, 477, 2, 7, 1, 3),
(3345, 2305, 2, 7, 1, 1),
(3346, 1509, 2, 7, 1, 3),
(3347, 2306, 2, 7, 1, 1),
(3348, 2307, 2, 7, 1, 1),
(3349, 1103, 2, 7, 1, 3),
(3350, 1334, 2, 7, 1, 2),
(3351, 2308, 2, 7, 1, 1),
(3352, 2309, 2, 7, 1, 2),
(3353, 52, 2, 7, 1, 1),
(3354, 1425, 2, 7, 1, 1),
(3355, 2310, 2, 7, 1, 1),
(3356, 698, 2, 7, 1, 1),
(3357, 1951, 2, 7, 1, 1),
(3358, 2311, 2, 7, 1, 1),
(3359, 435, 2, 7, 1, 2),
(3360, 2312, 2, 7, 1, 1),
(3361, 2313, 2, 7, 1, 1),
(3362, 565, 2, 7, 1, 1),
(3363, 181, 2, 7, 1, 3),
(3364, 2314, 2, 7, 1, 3),
(3365, 2315, 2, 7, 1, 3),
(3366, 184, 2, 7, 1, 1),
(3367, 2316, 2, 7, 1, 1),
(3368, 307, 2, 7, 1, 1),
(3369, 1101, 2, 7, 1, 2),
(3370, 54, 2, 7, 1, 3),
(3371, 2317, 2, 7, 1, 1),
(3372, 190, 2, 7, 1, 1),
(3373, 2318, 2, 7, 1, 3),
(3374, 2319, 2, 7, 1, 1),
(3375, 2095, 2, 7, 1, 1),
(3376, 2320, 2, 7, 1, 1),
(3377, 2321, 2, 7, 1, 1),
(3378, 2322, 2, 7, 1, 3),
(3379, 1932, 2, 7, 1, 1),
(3380, 2323, 2, 7, 1, 1),
(3381, 2324, 2, 7, 1, 1),
(3382, 624, 2, 7, 1, 2),
(3383, 2325, 2, 7, 1, 3),
(3384, 1587, 2, 7, 1, 3),
(3385, 2326, 2, 7, 1, 2),
(3386, 2327, 2, 7, 1, 3),
(3387, 513, 2, 7, 1, 3),
(3388, 2328, 2, 7, 1, 3),
(3389, 2329, 2, 7, 1, 3),
(3390, 2330, 2, 7, 1, 3),
(3391, 2331, 2, 7, 1, 1),
(3392, 22, 2, 7, 1, 0),
(3393, 439, 2, 7, 1, 3),
(3394, 2332, 2, 7, 1, 1),
(3395, 2333, 2, 7, 1, 1),
(3396, 2334, 2, 7, 1, 1),
(3397, 1810, 2, 7, 1, 2),
(3398, 196, 2, 7, 1, 2),
(3399, 2335, 2, 7, 1, 1),
(3400, 2336, 2, 7, 1, 1),
(3401, 2337, 2, 7, 1, 1),
(3402, 2338, 2, 7, 1, 1),
(3403, 884, 2, 7, 1, 3),
(3404, 805, 2, 7, 1, 1),
(3405, 2339, 2, 7, 1, 3),
(3406, 2340, 2, 7, 1, 1),
(3407, 292, 2, 7, 1, 1),
(3408, 2341, 2, 7, 1, 1),
(3409, 2342, 2, 7, 1, 1),
(3410, 2343, 2, 7, 1, 1),
(3411, 2344, 2, 7, 1, 3),
(3412, 2345, 2, 7, 1, 1),
(3413, 2346, 2, 7, 1, 1),
(3414, 115, 2, 7, 1, 3),
(3415, 2347, 2, 7, 1, 1),
(3416, 1468, 2, 7, 1, 1),
(3417, 2348, 2, 7, 1, 2),
(3418, 985, 2, 7, 1, 2),
(3419, 2349, 2, 7, 1, 1),
(3420, 2350, 2, 7, 1, 1),
(3421, 2351, 2, 7, 1, 1),
(3422, 2352, 2, 7, 1, 1),
(3423, 2353, 2, 7, 1, 1),
(3424, 2354, 2, 7, 1, 1),
(3425, 2355, 2, 7, 1, 1),
(3426, 2356, 2, 7, 1, 1),
(3427, 2357, 2, 7, 1, 2),
(3428, 3, 2, 8, 39, 0),
(3429, 1, 2, 8, 31, 0),
(3430, 7, 2, 8, 29, 0),
(3431, 2358, 2, 8, 28, 1),
(3432, 2359, 2, 8, 28, 1),
(3433, 17, 2, 8, 26, 1),
(3434, 37, 2, 8, 22, 3),
(3435, 1771, 2, 8, 21, 3),
(3436, 76, 2, 8, 19, 1),
(3437, 884, 2, 8, 19, 3),
(3438, 12, 2, 8, 18, 1),
(3439, 5, 2, 8, 16, 0),
(3440, 1027, 2, 8, 16, 3),
(3441, 2360, 2, 8, 15, 3),
(3442, 2, 2, 8, 15, 0),
(3443, 41, 2, 8, 14, 0),
(3444, 9, 2, 8, 14, 2),
(3445, 6, 2, 8, 13, 0),
(3446, 45, 2, 8, 11, 2),
(3447, 552, 2, 8, 11, 3),
(3448, 182, 2, 8, 10, 2),
(3449, 25, 2, 8, 10, 0),
(3450, 2328, 2, 8, 10, 3),
(3451, 2361, 2, 8, 10, 3),
(3452, 1221, 2, 8, 9, 3),
(3453, 23, 2, 8, 9, 2),
(3454, 192, 2, 8, 8, 3),
(3455, 1017, 2, 8, 8, 3),
(3456, 36, 2, 8, 8, 1),
(3457, 1560, 2, 8, 8, 3),
(3458, 51, 2, 8, 8, 3),
(3459, 14, 2, 8, 8, 2),
(3460, 61, 2, 8, 8, 1),
(3461, 592, 2, 8, 8, 3),
(3462, 2362, 2, 8, 8, 1),
(3463, 65, 2, 8, 8, 0),
(3464, 105, 2, 8, 8, 3),
(3465, 181, 2, 8, 7, 3),
(3466, 2363, 2, 8, 7, 3),
(3467, 2364, 2, 8, 7, 3),
(3468, 1113, 2, 8, 7, 3),
(3469, 28, 2, 8, 7, 0),
(3470, 15, 2, 8, 7, 0),
(3471, 101, 2, 8, 7, 2),
(3472, 688, 2, 8, 7, 3),
(3473, 2365, 2, 8, 6, 1),
(3474, 401, 2, 8, 6, 1),
(3475, 2366, 2, 8, 6, 3),
(3476, 2367, 2, 8, 6, 1),
(3477, 2368, 2, 8, 6, 1),
(3478, 2369, 2, 8, 6, 2),
(3479, 144, 2, 8, 6, 1),
(3480, 30, 2, 8, 6, 2),
(3481, 1350, 2, 8, 6, 3),
(3482, 944, 2, 8, 6, 1),
(3483, 72, 2, 8, 5, 0),
(3484, 722, 2, 8, 5, 3),
(3485, 74, 2, 8, 5, 0),
(3486, 883, 2, 8, 5, 1),
(3487, 1630, 2, 8, 5, 3),
(3488, 52, 2, 8, 5, 1),
(3489, 590, 2, 8, 5, 1),
(3490, 55, 2, 8, 5, 1),
(3491, 249, 2, 8, 5, 1),
(3492, 79, 2, 8, 5, 0),
(3493, 565, 2, 8, 5, 1),
(3494, 49, 2, 8, 5, 1),
(3495, 664, 2, 8, 5, 3),
(3496, 34, 2, 8, 5, 0),
(3497, 2370, 2, 8, 5, 3),
(3498, 141, 2, 8, 5, 3),
(3499, 202, 2, 8, 5, 0),
(3500, 2371, 2, 8, 5, 3),
(3501, 1738, 2, 8, 4, 3),
(3502, 266, 2, 8, 4, 0),
(3503, 2021, 2, 8, 4, 3),
(3504, 520, 2, 8, 4, 3),
(3505, 692, 2, 8, 4, 0),
(3506, 154, 2, 8, 4, 0),
(3507, 789, 2, 8, 4, 3),
(3508, 2372, 2, 8, 4, 3),
(3509, 1189, 2, 8, 4, 3),
(3510, 117, 2, 8, 4, 1),
(3511, 2373, 2, 8, 4, 1),
(3512, 223, 2, 8, 4, 3),
(3513, 20, 2, 8, 4, 0),
(3514, 365, 2, 8, 4, 3),
(3515, 2374, 2, 8, 4, 3),
(3516, 86, 2, 8, 4, 3),
(3517, 2171, 2, 8, 4, 1),
(3518, 2375, 2, 8, 4, 1),
(3519, 768, 2, 8, 4, 1),
(3520, 844, 2, 8, 4, 0),
(3521, 195, 2, 8, 4, 0),
(3522, 1737, 2, 8, 4, 2),
(3523, 92, 2, 8, 4, 3),
(3524, 882, 2, 8, 4, 0),
(3525, 2376, 2, 8, 4, 1),
(3526, 21, 2, 8, 4, 0),
(3527, 115, 2, 8, 4, 3),
(3528, 753, 2, 8, 4, 1),
(3529, 2377, 2, 8, 4, 2),
(3530, 152, 2, 8, 4, 3),
(3531, 2378, 2, 8, 3, 3),
(3532, 1779, 2, 8, 3, 3),
(3533, 39, 2, 8, 3, 3),
(3534, 1301, 2, 8, 3, 1),
(3535, 29, 2, 8, 3, 2),
(3536, 2379, 2, 8, 3, 1),
(3537, 2380, 2, 8, 3, 1),
(3538, 1056, 2, 8, 3, 3),
(3539, 1278, 2, 8, 3, 3),
(3540, 2381, 2, 8, 3, 3),
(3541, 2382, 2, 8, 3, 1),
(3542, 2383, 2, 8, 3, 3),
(3543, 578, 2, 8, 3, 1),
(3544, 2107, 2, 8, 3, 2),
(3545, 487, 2, 8, 3, 0),
(3546, 2384, 2, 8, 3, 3),
(3547, 2385, 2, 8, 3, 1),
(3548, 1527, 2, 8, 3, 2),
(3549, 2386, 2, 8, 3, 1),
(3550, 2387, 2, 8, 3, 3),
(3551, 624, 2, 8, 3, 2),
(3552, 2388, 2, 8, 3, 2),
(3553, 485, 2, 8, 3, 2),
(3554, 2389, 2, 8, 3, 1),
(3555, 2390, 2, 8, 3, 1),
(3556, 2391, 2, 8, 3, 3),
(3557, 464, 2, 8, 3, 3),
(3558, 2392, 2, 8, 3, 1),
(3559, 56, 2, 8, 3, 1),
(3560, 1405, 2, 8, 3, 3),
(3561, 278, 2, 8, 3, 1),
(3562, 2393, 2, 8, 3, 3),
(3563, 1034, 2, 8, 3, 2),
(3564, 2394, 2, 8, 3, 2),
(3565, 1348, 2, 8, 3, 2),
(3566, 119, 2, 8, 3, 1),
(3567, 573, 2, 8, 3, 1),
(3568, 1931, 2, 8, 3, 2),
(3569, 22, 2, 8, 3, 0),
(3570, 2395, 2, 8, 3, 1),
(3571, 2396, 2, 8, 3, 1),
(3572, 35, 2, 8, 3, 1),
(3573, 2397, 2, 8, 3, 1),
(3574, 2294, 2, 8, 3, 3),
(3575, 330, 2, 8, 3, 2),
(3576, 1188, 2, 8, 3, 3),
(3577, 2398, 2, 8, 3, 3),
(3578, 684, 2, 8, 3, 2),
(3579, 46, 2, 8, 3, 1),
(3580, 1705, 2, 8, 3, 1),
(3581, 2399, 2, 8, 2, 3),
(3582, 77, 2, 8, 2, 1),
(3583, 727, 2, 8, 2, 3),
(3584, 1694, 2, 8, 2, 3),
(3585, 2400, 2, 8, 2, 3),
(3586, 2401, 2, 8, 2, 2),
(3587, 2402, 2, 8, 2, 1),
(3588, 2403, 2, 8, 2, 1),
(3589, 2172, 2, 8, 2, 2),
(3590, 2404, 2, 8, 2, 3),
(3591, 1615, 2, 8, 2, 2),
(3592, 1781, 2, 8, 2, 0),
(3593, 2405, 2, 8, 2, 3),
(3594, 47, 2, 8, 2, 3),
(3595, 16, 2, 8, 2, 0),
(3596, 1611, 2, 8, 2, 3),
(3597, 2406, 2, 8, 2, 1),
(3598, 1576, 2, 8, 2, 3),
(3599, 1450, 2, 8, 2, 1),
(3600, 920, 2, 8, 2, 3),
(3601, 2407, 2, 8, 2, 1),
(3602, 307, 2, 8, 2, 1),
(3603, 2408, 2, 8, 2, 1),
(3604, 1324, 2, 8, 2, 3),
(3605, 63, 2, 8, 2, 1),
(3606, 977, 2, 8, 2, 1),
(3607, 2152, 2, 8, 2, 2),
(3608, 91, 2, 8, 2, 1),
(3609, 842, 2, 8, 2, 2),
(3610, 2409, 2, 8, 2, 1),
(3611, 2410, 2, 8, 2, 1),
(3612, 24, 2, 8, 2, 2),
(3613, 2411, 2, 8, 2, 1),
(3614, 2412, 2, 8, 2, 3),
(3615, 2413, 2, 8, 2, 3),
(3616, 2414, 2, 8, 2, 3),
(3617, 2415, 2, 8, 2, 1),
(3618, 1617, 2, 8, 2, 2),
(3619, 2416, 2, 8, 2, 1),
(3620, 2417, 2, 8, 2, 1),
(3621, 2418, 2, 8, 2, 1),
(3622, 2419, 2, 8, 2, 1),
(3623, 2420, 2, 8, 2, 1),
(3624, 2421, 2, 8, 2, 1),
(3625, 2124, 2, 8, 2, 2),
(3626, 2422, 2, 8, 2, 3),
(3627, 2423, 2, 8, 2, 1),
(3628, 2424, 2, 8, 2, 1),
(3629, 2425, 2, 8, 2, 1),
(3630, 2426, 2, 8, 2, 1),
(3631, 2427, 2, 8, 2, 1),
(3632, 1555, 2, 8, 2, 3),
(3633, 62, 2, 8, 2, 1),
(3634, 310, 2, 8, 2, 2),
(3635, 2428, 2, 8, 2, 2),
(3636, 31, 2, 8, 2, 0),
(3637, 2429, 2, 8, 2, 1),
(3638, 98, 2, 8, 2, 1),
(3639, 2430, 2, 8, 2, 1),
(3640, 308, 2, 8, 2, 3),
(3641, 2431, 2, 8, 2, 1),
(3642, 2432, 2, 8, 2, 3),
(3643, 244, 2, 8, 2, 3),
(3644, 486, 2, 8, 2, 1),
(3645, 1334, 2, 8, 2, 2),
(3646, 250, 2, 8, 2, 2),
(3647, 2433, 2, 8, 2, 3),
(3648, 2434, 2, 8, 2, 2),
(3649, 1357, 2, 8, 2, 2),
(3650, 2435, 2, 8, 2, 3),
(3651, 2436, 2, 8, 2, 3),
(3652, 153, 2, 8, 2, 1),
(3653, 2437, 2, 8, 2, 1),
(3654, 773, 2, 8, 2, 1),
(3655, 2438, 2, 8, 2, 1),
(3656, 168, 2, 8, 2, 0),
(3657, 729, 2, 8, 2, 1),
(3658, 2439, 2, 8, 2, 3),
(3659, 1796, 2, 8, 2, 3),
(3660, 1331, 2, 8, 2, 2),
(3661, 2440, 2, 8, 2, 2),
(3662, 2441, 2, 8, 2, 1),
(3663, 2442, 2, 8, 2, 3),
(3664, 1498, 2, 8, 2, 2),
(3665, 146, 2, 8, 2, 1),
(3666, 2443, 2, 8, 2, 3),
(3667, 2444, 2, 8, 2, 2),
(3668, 1683, 2, 8, 2, 2),
(3669, 1837, 2, 8, 2, 2),
(3670, 44, 2, 8, 2, 3),
(3671, 1601, 2, 8, 2, 3),
(3672, 33, 2, 8, 2, 3),
(3673, 132, 2, 8, 2, 1),
(3674, 2445, 2, 8, 2, 2),
(3675, 2446, 2, 8, 2, 1),
(3676, 2447, 2, 8, 2, 1),
(3677, 524, 2, 8, 2, 1),
(3678, 311, 2, 8, 2, 3),
(3679, 2448, 2, 8, 2, 3),
(3680, 87, 2, 8, 2, 3),
(3681, 912, 2, 8, 2, 0),
(3682, 2449, 2, 8, 2, 3),
(3683, 554, 2, 8, 2, 3),
(3684, 1570, 2, 8, 2, 1),
(3685, 1548, 2, 8, 2, 3),
(3686, 567, 2, 8, 2, 3),
(3687, 2450, 2, 8, 2, 3),
(3688, 1637, 2, 8, 2, 2),
(3689, 566, 2, 8, 2, 2),
(3690, 563, 2, 8, 2, 1),
(3691, 670, 2, 8, 2, 1),
(3692, 2451, 2, 8, 2, 1),
(3693, 2452, 2, 8, 2, 1),
(3694, 2453, 2, 8, 2, 1),
(3695, 534, 2, 8, 2, 1),
(3696, 2454, 2, 8, 1, 1),
(3697, 2130, 2, 8, 1, 3),
(3698, 2455, 2, 8, 1, 3),
(3699, 2456, 2, 8, 1, 3),
(3700, 2457, 2, 8, 1, 3),
(3701, 2458, 2, 8, 1, 3),
(3702, 2459, 2, 8, 1, 3),
(3703, 2460, 2, 8, 1, 3),
(3704, 2461, 2, 8, 1, 1),
(3705, 1238, 2, 8, 1, 2),
(3706, 352, 2, 8, 1, 1),
(3707, 207, 2, 8, 1, 3),
(3708, 201, 2, 8, 1, 2),
(3709, 2462, 2, 8, 1, 1),
(3710, 95, 2, 8, 1, 3),
(3711, 2463, 2, 8, 1, 1),
(3712, 1782, 2, 8, 1, 2),
(3713, 832, 2, 8, 1, 3),
(3714, 923, 2, 8, 1, 3),
(3715, 2464, 2, 8, 1, 1),
(3716, 2312, 2, 8, 1, 1),
(3717, 2465, 2, 8, 1, 1),
(3718, 2466, 2, 8, 1, 2),
(3719, 1426, 2, 8, 1, 3),
(3720, 871, 2, 8, 1, 1),
(3721, 2467, 2, 8, 1, 1),
(3722, 1920, 2, 8, 1, 1),
(3723, 477, 2, 8, 1, 3),
(3724, 1339, 2, 8, 1, 1),
(3725, 742, 2, 8, 1, 3),
(3726, 197, 2, 8, 1, 1),
(3727, 1181, 2, 8, 1, 2),
(3728, 2305, 2, 8, 1, 1),
(3729, 2468, 2, 8, 1, 1),
(3730, 2469, 2, 8, 1, 3),
(3731, 2470, 2, 8, 1, 2),
(3732, 1392, 2, 8, 1, 1),
(3733, 2471, 2, 8, 1, 3),
(3734, 2472, 2, 8, 1, 3),
(3735, 2473, 2, 8, 1, 3),
(3736, 2474, 2, 8, 1, 1),
(3737, 2475, 2, 8, 1, 3),
(3738, 2476, 2, 8, 1, 1),
(3739, 2477, 2, 8, 1, 3),
(3740, 2478, 2, 8, 1, 1),
(3741, 2479, 2, 8, 1, 1),
(3742, 2480, 2, 8, 1, 1),
(3743, 2481, 2, 8, 1, 1),
(3744, 120, 2, 8, 1, 1),
(3745, 2482, 2, 8, 1, 3),
(3746, 2483, 2, 8, 1, 3),
(3747, 2484, 2, 8, 1, 1),
(3748, 2485, 2, 8, 1, 3),
(3749, 2486, 2, 8, 1, 1),
(3750, 2487, 2, 8, 1, 1),
(3751, 2488, 2, 8, 1, 1),
(3752, 2489, 2, 8, 1, 1),
(3753, 2490, 2, 8, 1, 1),
(3754, 2491, 2, 8, 1, 1),
(3755, 2492, 2, 8, 1, 1),
(3756, 509, 2, 8, 1, 2),
(3757, 2493, 2, 8, 1, 1),
(3758, 2494, 2, 8, 1, 3),
(3759, 2495, 2, 8, 1, 1),
(3760, 2496, 2, 8, 1, 3),
(3761, 2497, 2, 8, 1, 3),
(3762, 451, 2, 8, 1, 3),
(3763, 907, 2, 8, 1, 2),
(3764, 2498, 2, 8, 1, 3),
(3765, 2499, 2, 8, 1, 2),
(3766, 2500, 2, 8, 1, 2),
(3767, 1876, 2, 8, 1, 1),
(3768, 1020, 2, 8, 1, 3),
(3769, 2501, 2, 8, 1, 1),
(3770, 2502, 2, 8, 1, 1),
(3771, 2503, 2, 8, 1, 1),
(3772, 2504, 2, 8, 1, 1),
(3773, 2505, 2, 8, 1, 1),
(3774, 2506, 2, 8, 1, 1),
(3775, 2507, 2, 8, 1, 1),
(3776, 2508, 2, 8, 1, 3),
(3777, 2509, 2, 8, 1, 3),
(3778, 2510, 2, 8, 1, 3),
(3779, 2511, 2, 8, 1, 1),
(3780, 2512, 2, 8, 1, 1),
(3781, 2513, 2, 8, 1, 3),
(3782, 2514, 2, 8, 1, 1),
(3783, 2515, 2, 8, 1, 1),
(3784, 2516, 2, 8, 1, 1),
(3785, 2517, 2, 8, 1, 1),
(3786, 2518, 2, 8, 1, 3),
(3787, 2519, 2, 8, 1, 3),
(3788, 2520, 2, 8, 1, 1),
(3789, 2521, 2, 8, 1, 1),
(3790, 735, 2, 8, 1, 1),
(3791, 2522, 2, 8, 1, 3),
(3792, 1989, 2, 8, 1, 1),
(3793, 1001, 2, 8, 1, 1),
(3794, 1222, 2, 8, 1, 3),
(3795, 1842, 2, 8, 1, 2),
(3796, 2523, 2, 8, 1, 1),
(3797, 282, 2, 8, 1, 3),
(3798, 2524, 2, 8, 1, 1),
(3799, 2525, 2, 8, 1, 1),
(3800, 2526, 2, 8, 1, 1),
(3801, 2527, 2, 8, 1, 2),
(3802, 1019, 2, 8, 1, 2),
(3803, 2528, 2, 8, 1, 2),
(3804, 2529, 2, 8, 1, 3),
(3805, 2530, 2, 8, 1, 2),
(3806, 527, 2, 8, 1, 1),
(3807, 2531, 2, 8, 1, 2),
(3808, 2532, 2, 8, 1, 2),
(3809, 759, 2, 8, 1, 2),
(3810, 1869, 2, 8, 1, 1),
(3811, 2533, 2, 8, 1, 1),
(3812, 1106, 2, 8, 1, 1),
(3813, 222, 2, 8, 1, 1),
(3814, 2534, 2, 8, 1, 2),
(3815, 593, 2, 8, 1, 3),
(3816, 2535, 2, 8, 1, 1),
(3817, 2536, 2, 8, 1, 3),
(3818, 2537, 2, 8, 1, 3),
(3819, 2538, 2, 8, 1, 3),
(3820, 2539, 2, 8, 1, 2),
(3821, 2540, 2, 8, 1, 2),
(3822, 2541, 2, 8, 1, 2),
(3823, 2542, 2, 8, 1, 2),
(3824, 2057, 2, 8, 1, 1),
(3825, 1720, 2, 8, 1, 1),
(3826, 2543, 2, 8, 1, 3),
(3827, 1023, 2, 8, 1, 1),
(3828, 1784, 2, 8, 1, 3),
(3829, 903, 2, 8, 1, 3),
(3830, 550, 2, 8, 1, 3),
(3831, 2544, 2, 8, 1, 3),
(3832, 2010, 2, 8, 1, 2),
(3833, 2268, 2, 8, 1, 3),
(3834, 2545, 2, 8, 1, 1),
(3835, 528, 2, 8, 1, 1),
(3836, 2546, 2, 8, 1, 3),
(3837, 1890, 2, 8, 1, 3),
(3838, 2547, 2, 8, 1, 2),
(3839, 1887, 2, 8, 1, 3),
(3840, 54, 2, 8, 1, 3),
(3841, 2548, 2, 8, 1, 1),
(3842, 2549, 2, 8, 1, 3),
(3843, 2550, 2, 8, 1, 1),
(3844, 2096, 2, 8, 1, 2),
(3845, 1434, 2, 8, 1, 1),
(3846, 1885, 2, 8, 1, 3),
(3847, 2551, 2, 8, 1, 3),
(3848, 2552, 2, 8, 1, 3),
(3849, 2553, 2, 8, 1, 3),
(3850, 2554, 2, 8, 1, 3),
(3851, 2555, 2, 8, 1, 3),
(3852, 184, 2, 8, 1, 1),
(3853, 765, 2, 8, 1, 3),
(3854, 2556, 2, 8, 1, 3),
(3855, 2557, 2, 8, 1, 2),
(3856, 604, 2, 8, 1, 2),
(3857, 2558, 2, 8, 1, 2),
(3858, 345, 2, 8, 1, 3),
(3859, 2559, 2, 8, 1, 3),
(3860, 2560, 2, 8, 1, 1),
(3861, 2561, 2, 8, 1, 1),
(3862, 788, 2, 8, 1, 1),
(3863, 2562, 2, 8, 1, 1),
(3864, 2563, 2, 8, 1, 1),
(3865, 2564, 2, 8, 1, 1),
(3866, 2565, 2, 8, 1, 1),
(3867, 2566, 2, 8, 1, 1),
(3868, 2567, 2, 8, 1, 1),
(3869, 1595, 2, 8, 1, 3),
(3870, 1382, 2, 8, 1, 1),
(3871, 2058, 2, 8, 1, 3),
(3872, 2568, 2, 8, 1, 1),
(3873, 2569, 2, 8, 1, 1),
(3874, 1608, 2, 8, 1, 1),
(3875, 2570, 2, 8, 1, 2),
(3876, 932, 2, 8, 1, 3),
(3877, 2571, 2, 8, 1, 1),
(3878, 396, 2, 8, 1, 1),
(3879, 2572, 2, 8, 1, 1),
(3880, 2573, 2, 8, 1, 3),
(3881, 2574, 2, 8, 1, 3),
(3882, 2575, 2, 8, 1, 1),
(3883, 2576, 2, 8, 1, 1),
(3884, 2577, 2, 8, 1, 3),
(3885, 2578, 2, 8, 1, 1),
(3886, 2579, 2, 8, 1, 3),
(3887, 2580, 2, 8, 1, 1),
(3888, 2581, 2, 8, 1, 3),
(3889, 2582, 2, 8, 1, 1),
(3890, 2583, 2, 8, 1, 3),
(3891, 2584, 2, 8, 1, 1),
(3892, 2585, 2, 8, 1, 1),
(3893, 502, 2, 8, 1, 1),
(3894, 2586, 2, 8, 1, 1),
(3895, 616, 2, 8, 1, 3),
(3896, 106, 2, 8, 1, 3),
(3897, 1054, 2, 8, 1, 1),
(3898, 435, 2, 8, 1, 2),
(3899, 2068, 2, 8, 1, 1),
(3900, 2587, 2, 8, 1, 3),
(3901, 1563, 2, 8, 1, 3),
(3902, 2588, 2, 8, 1, 2),
(3903, 1897, 2, 8, 1, 3),
(3904, 605, 2, 8, 1, 3),
(3905, 2589, 2, 8, 1, 3),
(3906, 2590, 2, 8, 1, 3),
(3907, 1469, 2, 8, 1, 3),
(3908, 2591, 2, 8, 1, 1),
(3909, 2592, 2, 8, 1, 2),
(3910, 1534, 2, 8, 1, 3),
(3911, 2593, 2, 8, 1, 1),
(3912, 2594, 2, 8, 1, 2),
(3913, 1946, 2, 8, 1, 1),
(3914, 2595, 2, 8, 1, 3),
(3915, 2596, 2, 8, 1, 2),
(3916, 2597, 2, 8, 1, 1),
(3917, 2598, 2, 8, 1, 3),
(3918, 2599, 2, 8, 1, 2),
(3919, 694, 2, 8, 1, 1),
(3920, 655, 2, 8, 1, 3),
(3921, 2600, 2, 8, 1, 1),
(3922, 2601, 2, 8, 1, 1),
(3923, 2602, 2, 8, 1, 3),
(3924, 32, 2, 8, 1, 1),
(3925, 2603, 2, 8, 1, 1),
(3926, 2604, 2, 8, 1, 1),
(3927, 2605, 2, 8, 1, 1),
(3928, 2606, 2, 8, 1, 1),
(3929, 675, 2, 8, 1, 2),
(3930, 2607, 2, 8, 1, 2),
(3931, 2608, 2, 8, 1, 1),
(3932, 1316, 2, 8, 1, 1),
(3933, 2609, 2, 8, 1, 1),
(3934, 1052, 2, 8, 1, 2),
(3935, 2610, 2, 8, 1, 1),
(3936, 2611, 2, 8, 1, 1),
(3937, 2612, 2, 8, 1, 1),
(3938, 766, 2, 8, 1, 2),
(3939, 669, 2, 8, 1, 3),
(3940, 2613, 2, 8, 1, 1),
(3941, 721, 2, 8, 1, 3),
(3942, 2614, 2, 8, 1, 3),
(3943, 2615, 2, 8, 1, 1),
(3944, 2616, 2, 8, 1, 1),
(3945, 2617, 2, 8, 1, 1),
(3946, 2618, 2, 8, 1, 1),
(3947, 2619, 2, 8, 1, 1),
(3948, 2620, 2, 8, 1, 1),
(3949, 2621, 2, 8, 1, 1),
(3950, 575, 2, 8, 1, 3),
(3951, 1010, 2, 8, 1, 2),
(3952, 2622, 2, 8, 1, 2),
(3953, 1991, 2, 8, 1, 1),
(3954, 2623, 2, 8, 1, 3),
(3955, 2624, 2, 8, 1, 1),
(3956, 2625, 2, 8, 1, 1),
(3957, 2626, 2, 8, 1, 1),
(3958, 2627, 2, 8, 1, 1),
(3959, 2628, 2, 8, 1, 1),
(3960, 2629, 2, 8, 1, 1),
(3961, 2630, 2, 8, 1, 1),
(3962, 378, 2, 8, 1, 0),
(3963, 471, 2, 8, 1, 1),
(3964, 2631, 2, 8, 1, 1),
(3965, 454, 2, 8, 1, 2),
(3966, 2632, 2, 8, 1, 1),
(3967, 143, 2, 8, 1, 1),
(3968, 2633, 2, 8, 1, 1),
(3969, 2634, 2, 8, 1, 3),
(3970, 2635, 2, 8, 1, 1),
(3971, 1417, 2, 8, 1, 1),
(3972, 1818, 2, 8, 1, 3),
(3973, 2636, 2, 8, 1, 3),
(3974, 2637, 2, 8, 1, 3),
(3975, 802, 2, 8, 1, 2),
(3976, 2638, 2, 8, 1, 1),
(3977, 2639, 2, 8, 1, 2),
(3978, 2640, 2, 8, 1, 1),
(3979, 829, 2, 8, 1, 2),
(3980, 2199, 2, 8, 1, 0),
(3981, 2641, 2, 8, 1, 3),
(3982, 2642, 2, 8, 1, 2),
(3983, 2643, 2, 8, 1, 1),
(3984, 2644, 2, 8, 1, 1),
(3985, 2645, 2, 8, 1, 1),
(3986, 1492, 2, 8, 1, 1),
(3987, 2646, 2, 8, 1, 1),
(3988, 2114, 2, 8, 1, 0),
(3989, 966, 2, 8, 1, 1),
(3990, 1337, 2, 8, 1, 3),
(3991, 2647, 2, 8, 1, 2),
(3992, 2106, 2, 8, 1, 2),
(3993, 888, 2, 8, 1, 3),
(3994, 2648, 2, 8, 1, 3),
(3995, 2649, 2, 8, 1, 1),
(3996, 2650, 2, 8, 1, 3),
(3997, 2651, 2, 8, 1, 1),
(3998, 1889, 2, 8, 1, 1),
(3999, 2652, 2, 8, 1, 3),
(4000, 667, 2, 8, 1, 1),
(4001, 165, 2, 8, 1, 0),
(4002, 1196, 2, 8, 1, 1),
(4003, 1661, 2, 8, 1, 2),
(4004, 2653, 2, 8, 1, 3),
(4005, 1082, 2, 8, 1, 1),
(4006, 2097, 2, 8, 1, 1),
(4007, 817, 2, 8, 1, 2),
(4008, 2654, 2, 8, 1, 3),
(4009, 2655, 2, 8, 1, 3),
(4010, 2074, 2, 8, 1, 2),
(4011, 2656, 2, 8, 1, 1),
(4012, 2657, 2, 8, 1, 1),
(4013, 2658, 2, 8, 1, 1),
(4014, 1438, 2, 8, 1, 1),
(4015, 617, 2, 8, 1, 1),
(4016, 389, 2, 8, 1, 1),
(4017, 2659, 2, 8, 1, 3),
(4018, 1639, 2, 8, 1, 2),
(4019, 1718, 2, 8, 1, 3),
(4020, 2329, 2, 8, 1, 3),
(4021, 398, 2, 8, 1, 2),
(4022, 2660, 2, 8, 1, 3),
(4023, 1696, 2, 8, 1, 3),
(4024, 2661, 2, 8, 1, 1),
(4025, 677, 2, 8, 1, 0),
(4026, 397, 2, 8, 1, 2),
(4027, 531, 2, 8, 1, 2),
(4028, 2662, 2, 8, 1, 3),
(4029, 2663, 2, 8, 1, 1),
(4030, 18, 2, 8, 1, 1),
(4031, 2664, 2, 8, 1, 1),
(4032, 2665, 2, 8, 1, 3),
(4033, 2666, 2, 8, 1, 3),
(4034, 2667, 2, 8, 1, 1),
(4035, 2668, 2, 8, 1, 3),
(4036, 2669, 2, 8, 1, 2),
(4037, 2670, 2, 8, 1, 1),
(4038, 2671, 2, 8, 1, 3),
(4039, 2672, 2, 8, 1, 2),
(4040, 2673, 2, 8, 1, 1),
(4041, 2674, 2, 8, 1, 1),
(4042, 2675, 2, 8, 1, 3),
(4043, 2676, 2, 8, 1, 3),
(4044, 2677, 2, 8, 1, 1),
(4045, 2678, 2, 8, 1, 1),
(4046, 1894, 2, 8, 1, 3),
(4047, 1293, 2, 8, 1, 1),
(4048, 2679, 2, 8, 1, 2),
(4049, 2680, 2, 8, 1, 2),
(4050, 1654, 2, 8, 1, 3),
(4051, 2681, 2, 8, 1, 3),
(4052, 2682, 2, 8, 1, 1),
(4053, 388, 2, 8, 1, 3),
(4054, 2683, 2, 8, 1, 2),
(4055, 2684, 2, 8, 1, 1),
(4056, 1640, 2, 8, 1, 1),
(4057, 40, 2, 8, 1, 3),
(4058, 2685, 2, 8, 1, 2),
(4059, 996, 2, 8, 1, 1),
(4060, 180, 2, 8, 1, 2),
(4061, 1395, 2, 8, 1, 1),
(4062, 2686, 2, 8, 1, 3),
(4063, 1039, 2, 8, 1, 2),
(4064, 2687, 2, 8, 1, 1),
(4065, 2688, 2, 8, 1, 1),
(4066, 517, 2, 8, 1, 1),
(4067, 2689, 2, 8, 1, 3),
(4068, 2690, 2, 8, 1, 3),
(4069, 38, 2, 8, 1, 3),
(4070, 1037, 2, 8, 1, 2),
(4071, 2691, 2, 8, 1, 2),
(4072, 2692, 2, 8, 1, 1),
(4073, 2693, 2, 8, 1, 1),
(4074, 2694, 2, 8, 1, 3),
(4075, 196, 2, 8, 1, 2),
(4076, 2695, 2, 8, 1, 2),
(4077, 2696, 2, 8, 1, 1),
(4078, 1628, 2, 8, 1, 1),
(4079, 2697, 2, 8, 1, 3),
(4080, 2698, 2, 8, 1, 3),
(4081, 2699, 2, 8, 1, 3),
(4082, 2700, 2, 8, 1, 3),
(4083, 2701, 2, 8, 1, 3),
(4084, 2702, 2, 8, 1, 3),
(4085, 2703, 2, 8, 1, 3),
(4086, 925, 2, 8, 1, 1),
(4087, 2704, 2, 8, 1, 3),
(4088, 2705, 2, 8, 1, 1),
(4089, 1909, 2, 8, 1, 2),
(4090, 1110, 2, 8, 1, 0),
(4091, 2706, 2, 8, 1, 3),
(4092, 2296, 2, 8, 1, 1),
(4093, 2707, 2, 8, 1, 1),
(4094, 897, 2, 8, 1, 2),
(4095, 395, 2, 8, 1, 2),
(4096, 179, 2, 8, 1, 2),
(4097, 1973, 2, 8, 1, 3),
(4098, 2708, 2, 8, 1, 1),
(4099, 2709, 2, 8, 1, 1),
(4100, 2710, 2, 8, 1, 1),
(4101, 2711, 2, 8, 1, 1),
(4102, 2712, 2, 8, 1, 1),
(4103, 2713, 2, 8, 1, 1),
(4104, 2229, 2, 8, 1, 1),
(4105, 2714, 2, 8, 1, 1),
(4106, 2715, 2, 8, 1, 1),
(4107, 364, 2, 8, 1, 3),
(4108, 2716, 2, 8, 1, 1),
(4109, 2717, 2, 8, 1, 1),
(4110, 2718, 2, 8, 1, 1),
(4111, 2719, 2, 8, 1, 1),
(4112, 2720, 2, 8, 1, 1),
(4113, 2721, 2, 8, 1, 1),
(4114, 2722, 2, 8, 1, 1),
(4115, 608, 2, 8, 1, 1),
(4116, 2723, 2, 8, 1, 3),
(4117, 2724, 2, 8, 1, 1),
(4118, 2073, 2, 8, 1, 2),
(4119, 2725, 2, 8, 1, 1),
(4120, 2726, 2, 8, 1, 1),
(4121, 2727, 2, 8, 1, 1),
(4122, 2728, 2, 8, 1, 1),
(4123, 895, 2, 8, 1, 2),
(4124, 2729, 2, 8, 1, 1),
(4125, 2730, 2, 8, 1, 1),
(4126, 2731, 2, 8, 1, 3),
(4127, 2732, 2, 8, 1, 3),
(4128, 853, 2, 8, 1, 3),
(4129, 1268, 2, 8, 1, 3),
(4130, 99, 2, 8, 1, 2),
(4131, 1232, 2, 8, 1, 1),
(4132, 2105, 2, 8, 1, 3),
(4133, 2733, 2, 8, 1, 3),
(4134, 2734, 2, 8, 1, 3),
(4135, 2735, 2, 8, 1, 1),
(4136, 1330, 2, 8, 1, 2),
(4137, 2736, 2, 8, 1, 1),
(4138, 453, 2, 8, 1, 2),
(4139, 1545, 2, 8, 1, 3),
(4140, 2737, 2, 8, 1, 1),
(4141, 1686, 2, 8, 1, 0),
(4142, 193, 2, 8, 1, 1),
(4143, 2738, 2, 8, 1, 3),
(4144, 2739, 2, 8, 1, 1),
(4145, 2740, 2, 8, 1, 3),
(4146, 2741, 2, 8, 1, 1),
(4147, 686, 2, 8, 1, 2),
(4148, 2742, 2, 8, 1, 1),
(4149, 2743, 2, 8, 1, 2),
(4150, 2744, 2, 8, 1, 2),
(4151, 2745, 2, 8, 1, 1),
(4152, 2746, 2, 8, 1, 1),
(4153, 2747, 2, 8, 1, 3),
(4154, 2748, 2, 8, 1, 1),
(4155, 2749, 2, 8, 1, 3),
(4156, 2750, 2, 8, 1, 1),
(4157, 2751, 2, 8, 1, 2),
(4158, 544, 2, 8, 1, 1),
(4159, 723, 2, 8, 1, 3),
(4160, 1112, 2, 8, 1, 1),
(4161, 116, 2, 8, 1, 3),
(4162, 1593, 2, 8, 1, 3),
(4163, 2752, 2, 8, 1, 3),
(4164, 2753, 2, 8, 1, 3),
(4165, 274, 2, 8, 1, 1),
(4166, 1711, 2, 8, 1, 1),
(4167, 1416, 2, 8, 1, 3),
(4168, 2754, 2, 8, 1, 3),
(4169, 2755, 2, 8, 1, 2),
(4170, 2756, 2, 8, 1, 3),
(4171, 2757, 2, 8, 1, 3),
(4172, 2758, 2, 8, 1, 3),
(4173, 2759, 2, 8, 1, 1),
(4174, 2760, 2, 8, 1, 1),
(4175, 2761, 2, 8, 1, 1),
(4176, 2762, 2, 8, 1, 1),
(4177, 231, 2, 8, 1, 3),
(4178, 2763, 2, 8, 1, 1),
(4179, 172, 2, 8, 1, 1),
(4180, 2764, 2, 8, 1, 2),
(4181, 416, 2, 8, 1, 3),
(4182, 647, 2, 8, 1, 3),
(4183, 1788, 2, 8, 1, 2),
(4184, 2765, 2, 8, 1, 1),
(4185, 2766, 2, 8, 1, 3),
(4186, 613, 2, 8, 1, 3),
(4187, 2767, 2, 8, 1, 1),
(4188, 2768, 2, 8, 1, 1),
(4189, 2769, 2, 8, 1, 1),
(4190, 2770, 2, 8, 1, 1),
(4191, 2771, 2, 8, 1, 1),
(4192, 450, 2, 8, 1, 1),
(4193, 2772, 2, 8, 1, 3),
(4194, 3, 2, 9, 41, 0),
(4195, 7, 2, 9, 16, 0),
(4196, 2773, 2, 9, 14, 3),
(4197, 2774, 2, 9, 12, 3),
(4198, 5, 2, 9, 12, 0),
(4199, 15, 2, 9, 12, 0),
(4200, 2, 2, 9, 11, 0),
(4201, 1901, 2, 9, 11, 2),
(4202, 1, 2, 9, 10, 0),
(4203, 2775, 2, 9, 9, 1),
(4204, 1471, 2, 9, 9, 3),
(4205, 28, 2, 9, 7, 0),
(4206, 2776, 2, 9, 7, 1),
(4207, 2777, 2, 9, 7, 1),
(4208, 2778, 2, 9, 7, 3),
(4209, 2779, 2, 9, 6, 1),
(4210, 271, 2, 9, 6, 1),
(4211, 152, 2, 9, 6, 3),
(4212, 17, 2, 9, 6, 1),
(4213, 2780, 2, 9, 6, 3),
(4214, 2781, 2, 9, 5, 3),
(4215, 1104, 2, 9, 5, 2),
(4216, 364, 2, 9, 5, 3),
(4217, 1221, 2, 9, 5, 3),
(4218, 2782, 2, 9, 5, 3),
(4219, 215, 2, 9, 4, 0),
(4220, 310, 2, 9, 4, 2),
(4221, 25, 2, 9, 4, 0),
(4222, 34, 2, 9, 4, 0),
(4223, 2327, 2, 9, 4, 3),
(4224, 2783, 2, 9, 4, 3),
(4225, 2784, 2, 9, 4, 1),
(4226, 331, 2, 9, 3, 2),
(4227, 1876, 2, 9, 3, 1),
(4228, 2785, 2, 9, 3, 2),
(4229, 2786, 2, 9, 3, 1),
(4230, 4, 2, 9, 3, 0),
(4231, 2787, 2, 9, 3, 3),
(4232, 106, 2, 9, 3, 3),
(4233, 47, 2, 9, 3, 3),
(4234, 9, 2, 9, 3, 2),
(4235, 883, 2, 9, 3, 1),
(4236, 189, 2, 9, 3, 0),
(4237, 2788, 2, 9, 3, 1),
(4238, 2789, 2, 9, 3, 3),
(4239, 616, 2, 9, 3, 3),
(4240, 71, 2, 9, 3, 0),
(4241, 12, 2, 9, 3, 1),
(4242, 14, 2, 9, 3, 2),
(4243, 88, 2, 9, 3, 1),
(4244, 2790, 2, 9, 3, 1),
(4245, 2791, 2, 9, 3, 3),
(4246, 1303, 2, 9, 3, 1),
(4247, 22, 2, 9, 3, 0),
(4248, 2792, 2, 9, 3, 1),
(4249, 2139, 2, 9, 3, 2),
(4250, 61, 2, 9, 3, 1),
(4251, 72, 2, 9, 3, 0),
(4252, 2793, 2, 9, 3, 2),
(4253, 333, 2, 9, 3, 0),
(4254, 1592, 2, 9, 3, 2),
(4255, 327, 2, 9, 3, 1),
(4256, 2794, 2, 9, 3, 3),
(4257, 179, 2, 9, 3, 2),
(4258, 2795, 2, 9, 2, 1),
(4259, 2796, 2, 9, 2, 3),
(4260, 1034, 2, 9, 2, 2),
(4261, 195, 2, 9, 2, 0),
(4262, 2797, 2, 9, 2, 3),
(4263, 765, 2, 9, 2, 3),
(4264, 1939, 2, 9, 2, 1),
(4265, 30, 2, 9, 2, 2),
(4266, 2798, 2, 9, 2, 1),
(4267, 1244, 2, 9, 2, 1),
(4268, 2799, 2, 9, 2, 1),
(4269, 1523, 2, 9, 2, 1),
(4270, 425, 2, 9, 2, 3),
(4271, 79, 2, 9, 2, 0),
(4272, 2800, 2, 9, 2, 1),
(4273, 180, 2, 9, 2, 2),
(4274, 2801, 2, 9, 2, 1),
(4275, 48, 2, 9, 2, 1),
(4276, 27, 2, 9, 2, 1),
(4277, 1103, 2, 9, 2, 3),
(4278, 464, 2, 9, 2, 3),
(4279, 218, 2, 9, 2, 3),
(4280, 52, 2, 9, 2, 1),
(4281, 193, 2, 9, 2, 1),
(4282, 2802, 2, 9, 2, 3),
(4283, 2803, 2, 9, 2, 3),
(4284, 36, 2, 9, 2, 1),
(4285, 2804, 2, 9, 2, 1),
(4286, 1650, 2, 9, 2, 3),
(4287, 1737, 2, 9, 2, 2),
(4288, 2805, 2, 9, 2, 2),
(4289, 2806, 2, 9, 2, 1),
(4290, 16, 2, 9, 2, 0),
(4291, 1897, 2, 9, 2, 3),
(4292, 201, 2, 9, 2, 2),
(4293, 2807, 2, 9, 2, 1),
(4294, 367, 2, 9, 2, 1),
(4295, 105, 2, 9, 2, 3),
(4296, 1869, 2, 9, 2, 1),
(4297, 1010, 2, 9, 2, 2),
(4298, 2278, 2, 9, 2, 1),
(4299, 718, 2, 9, 2, 1),
(4300, 153, 2, 9, 2, 1),
(4301, 2808, 2, 9, 2, 3),
(4302, 282, 2, 9, 2, 3),
(4303, 1020, 2, 9, 2, 3),
(4304, 481, 2, 9, 2, 1),
(4305, 2809, 2, 9, 2, 1),
(4306, 2810, 2, 9, 2, 3),
(4307, 2811, 2, 9, 2, 1),
(4308, 101, 2, 9, 2, 2),
(4309, 2812, 2, 9, 2, 3),
(4310, 493, 2, 9, 2, 3),
(4311, 1705, 2, 9, 2, 1),
(4312, 2813, 2, 9, 2, 1);
INSERT INTO `indices` (`id`, `word_id`, `table_id`, `table_index`, `rating_reps`, `weight`) VALUES
(4313, 2814, 2, 9, 2, 1),
(4314, 55, 2, 9, 2, 1),
(4315, 2815, 2, 9, 2, 1),
(4316, 2816, 2, 9, 2, 3),
(4317, 592, 2, 9, 2, 3),
(4318, 2817, 2, 9, 2, 3),
(4319, 675, 2, 9, 2, 2),
(4320, 766, 2, 9, 2, 2),
(4321, 202, 2, 9, 2, 0),
(4322, 2818, 2, 9, 2, 1),
(4323, 2107, 2, 9, 2, 2),
(4324, 274, 2, 9, 2, 1),
(4325, 68, 2, 9, 2, 3),
(4326, 1056, 2, 9, 2, 3),
(4327, 1357, 2, 9, 1, 2),
(4328, 146, 2, 9, 1, 1),
(4329, 624, 2, 9, 1, 2),
(4330, 2819, 2, 9, 1, 1),
(4331, 2820, 2, 9, 1, 1),
(4332, 2821, 2, 9, 1, 1),
(4333, 2822, 2, 9, 1, 1),
(4334, 2823, 2, 9, 1, 1),
(4335, 2824, 2, 9, 1, 1),
(4336, 2825, 2, 9, 1, 1),
(4337, 2826, 2, 9, 1, 1),
(4338, 2827, 2, 9, 1, 1),
(4339, 2828, 2, 9, 1, 1),
(4340, 41, 2, 9, 1, 0),
(4341, 1411, 2, 9, 1, 1),
(4342, 1584, 2, 9, 1, 1),
(4343, 2829, 2, 9, 1, 1),
(4344, 2830, 2, 9, 1, 1),
(4345, 2831, 2, 9, 1, 1),
(4346, 1371, 2, 9, 1, 1),
(4347, 1339, 2, 9, 1, 1),
(4348, 416, 2, 9, 1, 3),
(4349, 2832, 2, 9, 1, 1),
(4350, 20, 2, 9, 1, 0),
(4351, 205, 2, 9, 1, 3),
(4352, 31, 2, 9, 1, 0),
(4353, 116, 2, 9, 1, 3),
(4354, 2833, 2, 9, 1, 1),
(4355, 1569, 2, 9, 1, 0),
(4356, 925, 2, 9, 1, 1),
(4357, 2834, 2, 9, 1, 3),
(4358, 2134, 2, 9, 1, 2),
(4359, 796, 2, 9, 1, 3),
(4360, 2835, 2, 9, 1, 3),
(4361, 534, 2, 9, 1, 1),
(4362, 1218, 2, 9, 1, 1),
(4363, 76, 2, 9, 1, 1),
(4364, 2836, 2, 9, 1, 1),
(4365, 2837, 2, 9, 1, 1),
(4366, 91, 2, 9, 1, 1),
(4367, 2838, 2, 9, 1, 3),
(4368, 2839, 2, 9, 1, 3),
(4369, 741, 2, 9, 1, 3),
(4370, 2840, 2, 9, 1, 1),
(4371, 1966, 2, 9, 1, 1),
(4372, 1786, 2, 9, 1, 2),
(4373, 2841, 2, 9, 1, 3),
(4374, 345, 2, 9, 1, 3),
(4375, 614, 2, 9, 1, 1),
(4376, 354, 2, 9, 1, 0),
(4377, 2842, 2, 9, 1, 3),
(4378, 1181, 2, 9, 1, 2),
(4379, 2843, 2, 9, 1, 1),
(4380, 2844, 2, 9, 1, 1),
(4381, 1240, 2, 9, 1, 3),
(4382, 307, 2, 9, 1, 1),
(4383, 565, 2, 9, 1, 1),
(4384, 2845, 2, 9, 1, 1),
(4385, 90, 2, 9, 1, 1),
(4386, 50, 2, 9, 1, 3),
(4387, 2846, 2, 9, 1, 1),
(4388, 2847, 2, 9, 1, 3),
(4389, 2848, 2, 9, 1, 3),
(4390, 2849, 2, 9, 1, 1),
(4391, 2850, 2, 9, 1, 1),
(4392, 192, 2, 9, 1, 3),
(4393, 1887, 2, 9, 1, 3),
(4394, 2851, 2, 9, 1, 2),
(4395, 2319, 2, 9, 1, 1),
(4396, 2325, 2, 9, 1, 3),
(4397, 1278, 2, 9, 1, 3),
(4398, 2852, 2, 9, 1, 1),
(4399, 789, 2, 9, 1, 3),
(4400, 2328, 2, 9, 1, 3),
(4401, 2853, 2, 9, 1, 1),
(4402, 2854, 2, 9, 1, 1),
(4403, 2855, 2, 9, 1, 3),
(4404, 1258, 2, 9, 1, 1),
(4405, 74, 2, 9, 1, 0),
(4406, 2856, 2, 9, 1, 3),
(4407, 2857, 2, 9, 1, 1),
(4408, 2858, 2, 9, 1, 1),
(4409, 2859, 2, 9, 1, 1),
(4410, 2860, 2, 9, 1, 1),
(4411, 35, 2, 9, 1, 1),
(4412, 2861, 2, 9, 1, 3),
(4413, 450, 2, 9, 1, 1),
(4414, 2862, 2, 9, 1, 3),
(4415, 1476, 2, 9, 1, 2),
(4416, 2863, 2, 9, 1, 2),
(4417, 2864, 2, 9, 1, 1),
(4418, 2865, 2, 9, 1, 1),
(4419, 2866, 2, 9, 1, 1),
(4420, 2867, 2, 9, 1, 1),
(4421, 2868, 2, 9, 1, 1),
(4422, 119, 2, 9, 1, 1),
(4423, 2869, 2, 9, 1, 1),
(4424, 2870, 2, 9, 1, 1),
(4425, 1338, 2, 9, 1, 3),
(4426, 184, 2, 9, 1, 1),
(4427, 2871, 2, 9, 1, 2),
(4428, 2872, 2, 9, 1, 1),
(4429, 1907, 2, 9, 1, 2),
(4430, 486, 2, 9, 1, 1),
(4431, 690, 2, 9, 1, 1),
(4432, 615, 2, 9, 1, 3),
(4433, 2873, 2, 9, 1, 2),
(4434, 590, 2, 9, 1, 1),
(4435, 2874, 2, 9, 1, 1),
(4436, 2875, 2, 9, 1, 1),
(4437, 1574, 2, 9, 1, 3),
(4438, 2876, 2, 9, 1, 2),
(4439, 1346, 2, 9, 1, 2),
(4440, 144, 2, 9, 1, 1),
(4441, 38, 2, 9, 1, 3),
(4442, 2877, 2, 9, 1, 1),
(4443, 2878, 2, 9, 1, 1),
(4444, 56, 2, 9, 1, 1),
(4445, 23, 2, 9, 1, 2),
(4446, 1877, 2, 9, 1, 3),
(4447, 2879, 2, 9, 1, 2),
(4448, 32, 2, 9, 1, 1),
(4449, 323, 2, 9, 1, 2),
(4450, 2880, 2, 9, 1, 3),
(4451, 1733, 2, 9, 1, 2),
(4452, 1331, 2, 9, 1, 2),
(4453, 2881, 2, 9, 1, 1),
(4454, 2882, 2, 9, 1, 1),
(4455, 1233, 2, 9, 1, 3),
(4456, 2883, 2, 9, 1, 2),
(4457, 2884, 2, 9, 1, 2),
(4458, 544, 2, 9, 1, 1),
(4459, 2885, 2, 9, 1, 3),
(4460, 2886, 2, 9, 1, 3),
(4461, 873, 2, 9, 1, 3),
(4462, 266, 2, 9, 1, 0),
(4463, 2887, 2, 9, 1, 1),
(4464, 2888, 2, 9, 1, 1),
(4465, 2889, 2, 9, 1, 2),
(4466, 578, 2, 9, 1, 1),
(4467, 1488, 2, 9, 1, 1),
(4468, 2890, 2, 9, 1, 3),
(4469, 409, 2, 9, 1, 1),
(4470, 114, 2, 9, 1, 2),
(4471, 2891, 2, 9, 1, 1),
(4472, 2892, 2, 9, 1, 3),
(4473, 2893, 2, 9, 1, 1),
(4474, 2894, 2, 9, 1, 1),
(4475, 132, 2, 9, 1, 1),
(4476, 473, 2, 9, 1, 1),
(4477, 2638, 2, 9, 1, 1),
(4478, 140, 2, 9, 1, 2),
(4479, 1190, 2, 9, 1, 2),
(4480, 399, 2, 9, 1, 1),
(4481, 2895, 2, 9, 1, 3),
(4482, 1111, 2, 9, 1, 1),
(4483, 62, 2, 9, 1, 1),
(4484, 2896, 2, 9, 1, 1),
(4485, 2897, 2, 9, 1, 2),
(4486, 2898, 2, 9, 1, 3),
(4487, 1949, 2, 9, 1, 2),
(4488, 817, 2, 9, 1, 2),
(4489, 44, 2, 9, 1, 3),
(4490, 2899, 2, 9, 1, 2),
(4491, 1017, 2, 9, 1, 3),
(4492, 1576, 2, 9, 1, 3),
(4493, 2900, 2, 9, 1, 2),
(4494, 2901, 2, 9, 1, 3),
(4495, 2902, 2, 9, 1, 1),
(4496, 196, 2, 9, 1, 2),
(4497, 2903, 2, 9, 1, 3),
(4498, 2904, 2, 9, 1, 1),
(4499, 24, 2, 9, 1, 2),
(4500, 1927, 2, 9, 1, 3),
(4501, 2905, 2, 9, 1, 1),
(4502, 1222, 2, 9, 1, 3),
(4503, 1402, 2, 9, 1, 1),
(4504, 2906, 2, 9, 1, 1),
(4505, 1545, 2, 9, 1, 3),
(4506, 2907, 2, 9, 1, 1),
(4507, 2908, 2, 9, 1, 1),
(4508, 2909, 2, 9, 1, 1),
(4509, 2769, 2, 9, 1, 1),
(4510, 2910, 2, 9, 1, 1),
(4511, 423, 2, 9, 1, 3),
(4512, 1416, 2, 9, 1, 3),
(4513, 2911, 2, 9, 1, 2),
(4514, 134, 2, 9, 1, 1),
(4515, 1382, 2, 9, 1, 1),
(4516, 1122, 2, 9, 1, 3),
(4517, 2912, 2, 9, 1, 1),
(4518, 1849, 2, 9, 1, 3),
(4519, 2913, 2, 9, 1, 3),
(4520, 2914, 2, 9, 1, 1),
(4521, 2320, 2, 9, 1, 1),
(4522, 2915, 2, 9, 1, 0),
(4523, 2916, 2, 9, 1, 3),
(4524, 2917, 2, 9, 1, 3),
(4525, 197, 2, 9, 1, 1),
(4526, 1315, 2, 9, 1, 2),
(4527, 2588, 2, 9, 1, 2),
(4528, 2918, 2, 9, 1, 1),
(4529, 2919, 2, 9, 1, 3),
(4530, 2920, 2, 9, 1, 3),
(4531, 2921, 2, 9, 1, 1),
(4532, 1464, 2, 9, 1, 3),
(4533, 389, 2, 9, 1, 1),
(4534, 2922, 2, 9, 1, 2),
(4535, 2923, 2, 9, 1, 3),
(4536, 360, 2, 9, 1, 3),
(4537, 2924, 2, 9, 1, 3),
(4538, 2925, 2, 9, 1, 3),
(4539, 2216, 2, 9, 1, 1),
(4540, 2926, 2, 9, 1, 3),
(4541, 2209, 2, 9, 1, 1),
(4542, 1400, 2, 9, 1, 2),
(4543, 188, 2, 9, 1, 2),
(4544, 1023, 2, 9, 1, 1),
(4545, 378, 2, 9, 1, 0),
(4546, 1605, 2, 9, 1, 3),
(4547, 589, 2, 9, 1, 1),
(4548, 63, 2, 9, 1, 1),
(4549, 2927, 2, 9, 1, 3),
(4550, 2484, 2, 9, 1, 1),
(4551, 2928, 2, 9, 1, 1),
(4552, 2929, 2, 9, 1, 2),
(4553, 2930, 2, 9, 1, 1),
(4554, 2931, 2, 9, 1, 1),
(4555, 2932, 2, 9, 1, 3),
(4556, 2933, 2, 9, 1, 3),
(4557, 2522, 2, 9, 1, 3),
(4558, 2934, 2, 9, 1, 3),
(4559, 2935, 2, 9, 1, 2),
(4560, 2936, 2, 9, 1, 3),
(4561, 2937, 2, 9, 1, 1),
(4562, 2938, 2, 9, 1, 1),
(4563, 659, 2, 9, 1, 3),
(4564, 2939, 2, 9, 1, 2),
(4565, 2940, 2, 9, 1, 3),
(4566, 46, 2, 9, 1, 1),
(4567, 2941, 2, 9, 1, 2),
(4568, 1232, 2, 9, 1, 1),
(4569, 1896, 2, 9, 1, 2),
(4570, 45, 2, 9, 1, 2),
(4571, 2009, 2, 9, 1, 2),
(4572, 525, 2, 9, 1, 2),
(4573, 400, 2, 9, 1, 3),
(4574, 2942, 2, 9, 1, 1),
(4575, 2943, 2, 9, 1, 1),
(4576, 2944, 2, 9, 1, 1),
(4577, 2945, 2, 9, 1, 3),
(4578, 11, 2, 10, 21, 1),
(4579, 2946, 2, 10, 20, 1),
(4580, 2173, 2, 10, 18, 1),
(4581, 1, 2, 10, 15, 0),
(4582, 2947, 2, 10, 11, 1),
(4583, 17, 2, 10, 9, 1),
(4584, 9, 2, 10, 9, 2),
(4585, 966, 2, 10, 9, 1),
(4586, 12, 2, 10, 9, 1),
(4587, 7, 2, 10, 9, 0),
(4588, 3, 2, 10, 9, 0),
(4589, 2948, 2, 10, 8, 3),
(4590, 2949, 2, 10, 7, 1),
(4591, 2, 2, 10, 7, 0),
(4592, 2950, 2, 10, 7, 1),
(4593, 2951, 2, 10, 7, 3),
(4594, 2952, 2, 10, 6, 1),
(4595, 1365, 2, 10, 6, 1),
(4596, 1760, 2, 10, 6, 1),
(4597, 2953, 2, 10, 6, 1),
(4598, 35, 2, 10, 6, 1),
(4599, 396, 2, 10, 5, 1),
(4600, 28, 2, 10, 5, 0),
(4601, 5, 2, 10, 5, 0),
(4602, 892, 2, 10, 5, 1),
(4603, 2954, 2, 10, 5, 1),
(4604, 25, 2, 10, 5, 0),
(4605, 72, 2, 10, 5, 0),
(4606, 1718, 2, 10, 5, 3),
(4607, 2955, 2, 10, 5, 3),
(4608, 2956, 2, 10, 4, 1),
(4609, 47, 2, 10, 4, 3),
(4610, 2957, 2, 10, 4, 1),
(4611, 2958, 2, 10, 4, 1),
(4612, 27, 2, 10, 4, 1),
(4613, 884, 2, 10, 4, 3),
(4614, 2959, 2, 10, 4, 1),
(4615, 2960, 2, 10, 4, 3),
(4616, 15, 2, 10, 3, 0),
(4617, 1846, 2, 10, 3, 1),
(4618, 2961, 2, 10, 3, 1),
(4619, 134, 2, 10, 3, 1),
(4620, 2962, 2, 10, 3, 1),
(4621, 192, 2, 10, 3, 3),
(4622, 2963, 2, 10, 3, 3),
(4623, 195, 2, 10, 3, 0),
(4624, 2964, 2, 10, 3, 1),
(4625, 2965, 2, 10, 3, 3),
(4626, 101, 2, 10, 3, 2),
(4627, 16, 2, 10, 3, 0),
(4628, 2966, 2, 10, 3, 3),
(4629, 2967, 2, 10, 3, 2),
(4630, 308, 2, 10, 3, 3),
(4631, 30, 2, 10, 3, 2),
(4632, 37, 2, 10, 2, 3),
(4633, 2968, 2, 10, 2, 1),
(4634, 282, 2, 10, 2, 3),
(4635, 2969, 2, 10, 2, 2),
(4636, 2970, 2, 10, 2, 1),
(4637, 215, 2, 10, 2, 0),
(4638, 61, 2, 10, 2, 1),
(4639, 2971, 2, 10, 2, 3),
(4640, 2972, 2, 10, 2, 1),
(4641, 153, 2, 10, 2, 1),
(4642, 2973, 2, 10, 2, 1),
(4643, 882, 2, 10, 2, 0),
(4644, 2974, 2, 10, 2, 1),
(4645, 2975, 2, 10, 2, 1),
(4646, 76, 2, 10, 2, 1),
(4647, 162, 2, 10, 2, 1),
(4648, 77, 2, 10, 2, 1),
(4649, 21, 2, 10, 2, 0),
(4650, 1300, 2, 10, 2, 1),
(4651, 74, 2, 10, 2, 0),
(4652, 2976, 2, 10, 2, 1),
(4653, 179, 2, 10, 2, 2),
(4654, 166, 2, 10, 2, 2),
(4655, 912, 2, 10, 2, 0),
(4656, 1220, 2, 10, 2, 1),
(4657, 36, 2, 10, 2, 1),
(4658, 2977, 2, 10, 2, 3),
(4659, 592, 2, 10, 2, 3),
(4660, 266, 2, 10, 2, 0),
(4661, 2470, 2, 10, 2, 2),
(4662, 2978, 2, 10, 2, 1),
(4663, 63, 2, 10, 2, 1),
(4664, 2631, 2, 10, 2, 1),
(4665, 2979, 2, 10, 2, 1),
(4666, 55, 2, 10, 2, 1),
(4667, 1266, 2, 10, 1, 2),
(4668, 2980, 2, 10, 1, 3),
(4669, 2211, 2, 10, 1, 1),
(4670, 722, 2, 10, 1, 3),
(4671, 105, 2, 10, 1, 3),
(4672, 1104, 2, 10, 1, 2),
(4673, 2981, 2, 10, 1, 2),
(4674, 2982, 2, 10, 1, 3),
(4675, 2983, 2, 10, 1, 1),
(4676, 563, 2, 10, 1, 1),
(4677, 2984, 2, 10, 1, 1),
(4678, 2985, 2, 10, 1, 1),
(4679, 2986, 2, 10, 1, 1),
(4680, 2987, 2, 10, 1, 1),
(4681, 2988, 2, 10, 1, 1),
(4682, 2989, 2, 10, 1, 1),
(4683, 2990, 2, 10, 1, 1),
(4684, 206, 2, 10, 1, 3),
(4685, 468, 2, 10, 1, 3),
(4686, 467, 2, 10, 1, 3),
(4687, 1119, 2, 10, 1, 1),
(4688, 2991, 2, 10, 1, 1),
(4689, 2373, 2, 10, 1, 1),
(4690, 182, 2, 10, 1, 2),
(4691, 2560, 2, 10, 1, 1),
(4692, 2992, 2, 10, 1, 1),
(4693, 20, 2, 10, 1, 0),
(4694, 2993, 2, 10, 1, 1),
(4695, 2994, 2, 10, 1, 3),
(4696, 638, 2, 10, 1, 3),
(4697, 1355, 2, 10, 1, 2),
(4698, 231, 2, 10, 1, 3),
(4699, 2995, 2, 10, 1, 1),
(4700, 2996, 2, 10, 1, 2),
(4701, 2997, 2, 10, 1, 1),
(4702, 271, 2, 10, 1, 1),
(4703, 2998, 2, 10, 1, 1),
(4704, 2999, 2, 10, 1, 1),
(4705, 3000, 2, 10, 1, 1),
(4706, 3001, 2, 10, 1, 1),
(4707, 3002, 2, 10, 1, 1),
(4708, 3003, 2, 10, 1, 1),
(4709, 114, 2, 10, 1, 2),
(4710, 3004, 2, 10, 1, 1),
(4711, 1402, 2, 10, 1, 1),
(4712, 189, 2, 10, 1, 0),
(4713, 1642, 2, 10, 1, 1),
(4714, 327, 2, 10, 1, 1),
(4715, 56, 2, 10, 1, 1),
(4716, 4, 2, 10, 1, 0),
(4717, 158, 2, 10, 1, 1),
(4718, 3005, 2, 10, 1, 1),
(4719, 3006, 2, 10, 1, 0),
(4720, 2136, 2, 10, 1, 3),
(4721, 3007, 2, 10, 1, 1),
(4722, 3008, 2, 10, 1, 1),
(4723, 34, 2, 10, 1, 0),
(4724, 24, 2, 10, 1, 2),
(4725, 22, 2, 10, 1, 0),
(4726, 1503, 2, 10, 1, 3),
(4727, 3009, 2, 10, 1, 1),
(4728, 3010, 2, 10, 1, 2),
(4729, 3011, 2, 10, 1, 3),
(4730, 1782, 2, 10, 1, 2),
(4731, 1238, 2, 10, 1, 2),
(4732, 2864, 2, 10, 1, 1),
(4733, 657, 2, 10, 1, 1),
(4734, 1334, 2, 10, 1, 2),
(4735, 274, 2, 10, 1, 1),
(4736, 214, 2, 10, 1, 3),
(4737, 608, 2, 10, 1, 1),
(4738, 41, 2, 10, 1, 0),
(4739, 311, 2, 10, 1, 3),
(4740, 31, 2, 10, 1, 0),
(4741, 1222, 2, 10, 1, 3),
(4742, 3012, 2, 10, 1, 3),
(4743, 3013, 2, 10, 1, 3),
(4744, 62, 2, 10, 1, 1),
(4745, 3014, 2, 10, 1, 1),
(4746, 3015, 2, 10, 1, 1),
(4747, 6, 2, 10, 1, 0),
(4748, 3016, 2, 10, 1, 2),
(4749, 3017, 2, 10, 1, 0),
(4750, 862, 2, 10, 1, 1),
(4751, 65, 2, 10, 1, 0),
(4752, 888, 2, 10, 1, 3),
(4753, 91, 2, 10, 1, 1),
(4754, 1504, 2, 10, 1, 3),
(4755, 519, 2, 10, 1, 0),
(4756, 79, 2, 10, 1, 0),
(4757, 29, 2, 10, 1, 2),
(4758, 3018, 2, 10, 1, 3),
(4759, 3019, 2, 10, 1, 1),
(4760, 3020, 2, 10, 1, 1),
(4761, 613, 2, 10, 1, 3),
(4762, 1410, 2, 10, 1, 1),
(4763, 3021, 2, 10, 1, 1),
(4764, 184, 2, 10, 1, 1),
(4765, 3022, 2, 10, 1, 1),
(4766, 3023, 2, 10, 1, 3),
(4767, 205, 2, 10, 1, 3),
(4768, 3024, 2, 10, 1, 1),
(4769, 2441, 2, 10, 1, 1),
(4770, 3025, 2, 10, 1, 3),
(4771, 766, 2, 10, 1, 2),
(4772, 188, 2, 10, 1, 2),
(4773, 310, 2, 10, 1, 2),
(4774, 3026, 2, 10, 1, 1),
(4775, 398, 2, 10, 1, 2),
(4776, 2021, 2, 10, 1, 3),
(4777, 3027, 2, 10, 1, 1),
(4778, 345, 2, 10, 1, 3),
(4779, 364, 2, 10, 1, 3),
(4780, 3028, 2, 10, 1, 1),
(4781, 1097, 2, 10, 1, 0),
(4782, 3029, 2, 10, 1, 3),
(4783, 2660, 2, 10, 1, 3),
(4784, 3030, 2, 10, 1, 1),
(4785, 18, 2, 10, 1, 1),
(4786, 3031, 2, 10, 1, 1),
(4787, 3032, 2, 10, 1, 3),
(4788, 330, 2, 10, 1, 2),
(4789, 1348, 2, 10, 1, 2),
(4790, 486, 2, 10, 1, 1),
(4791, 183, 2, 10, 1, 1),
(4792, 302, 2, 10, 1, 2),
(4793, 45, 2, 10, 1, 2),
(4794, 2006, 2, 10, 1, 1),
(4795, 590, 2, 10, 1, 1),
(4796, 332, 2, 10, 1, 3),
(4797, 670, 2, 10, 1, 1),
(4798, 99, 2, 10, 1, 2),
(4799, 3033, 2, 10, 1, 3),
(4800, 1618, 2, 10, 1, 3),
(4801, 2256, 2, 10, 1, 1),
(4802, 412, 2, 10, 1, 3),
(4803, 154, 2, 10, 1, 0),
(4804, 201, 2, 10, 1, 2),
(4805, 40, 2, 10, 1, 3),
(4806, 448, 2, 10, 1, 1),
(4807, 3034, 2, 10, 1, 2),
(4808, 435, 2, 10, 1, 2),
(4809, 1788, 2, 10, 1, 2),
(4810, 52, 2, 10, 1, 1),
(4811, 2328, 2, 10, 1, 3),
(4812, 38, 2, 10, 1, 3),
(4813, 702, 2, 10, 1, 2),
(4814, 3035, 2, 10, 1, 1),
(4815, 199, 2, 10, 1, 1),
(4816, 3036, 2, 10, 1, 1),
(4817, 3037, 2, 10, 1, 2),
(4818, 8, 2, 10, 1, 3),
(4819, 3038, 2, 10, 1, 3),
(4820, 3039, 2, 10, 1, 2),
(4821, 249, 2, 10, 1, 1),
(4822, 1771, 2, 10, 1, 3),
(4823, 390, 2, 10, 1, 0),
(4824, 1818, 2, 10, 1, 3),
(4825, 3040, 2, 10, 1, 1),
(4826, 3041, 2, 10, 1, 1),
(4827, 624, 2, 10, 1, 2),
(4828, 1357, 2, 10, 1, 2),
(4829, 3042, 2, 10, 1, 1),
(4830, 3043, 2, 10, 1, 1),
(4831, 3044, 2, 10, 1, 1),
(4832, 3045, 2, 10, 1, 1),
(4833, 493, 2, 10, 1, 3),
(4834, 3046, 2, 10, 1, 3),
(4835, 3047, 2, 10, 1, 1),
(4836, 1576, 2, 10, 1, 3),
(4837, 1303, 2, 10, 1, 1),
(4838, 3048, 2, 10, 1, 3),
(4839, 3049, 2, 10, 1, 1),
(4840, 2364, 2, 10, 1, 3),
(4841, 3050, 2, 10, 1, 1),
(4842, 3051, 2, 10, 1, 1),
(4843, 3052, 2, 10, 1, 1),
(4844, 3053, 2, 10, 1, 1),
(4845, 3054, 2, 10, 1, 1),
(4846, 1061, 2, 10, 1, 1),
(4847, 98, 2, 10, 1, 1),
(4848, 3055, 2, 10, 1, 1),
(4849, 3056, 2, 10, 1, 1),
(4850, 3057, 2, 10, 1, 1),
(4851, 193, 2, 10, 1, 1),
(4852, 3058, 2, 10, 1, 1),
(4853, 3059, 2, 10, 1, 1),
(4854, 3060, 2, 10, 1, 1),
(4855, 3061, 2, 10, 1, 1),
(4856, 450, 2, 10, 1, 1),
(4857, 3062, 2, 10, 1, 2),
(4858, 1506, 2, 10, 1, 1),
(4859, 1415, 2, 10, 1, 1),
(4860, 3063, 2, 10, 1, 3),
(4861, 1284, 2, 10, 1, 1),
(4862, 245, 2, 10, 1, 2),
(4863, 3064, 2, 10, 1, 1),
(4864, 679, 2, 10, 1, 2),
(4865, 961, 2, 10, 1, 1),
(4866, 3065, 2, 10, 1, 1),
(4867, 3066, 2, 10, 1, 1),
(4868, 3067, 2, 10, 1, 1),
(4869, 3068, 2, 10, 1, 1),
(4870, 3069, 2, 10, 1, 1),
(4871, 49, 2, 10, 1, 1),
(4872, 1922, 2, 10, 1, 1),
(4873, 3070, 2, 10, 1, 1),
(4874, 3071, 2, 10, 1, 1),
(4875, 907, 2, 10, 1, 2),
(4876, 773, 2, 10, 1, 1),
(4877, 789, 2, 10, 1, 3),
(4878, 3072, 2, 10, 1, 3),
(4879, 3073, 2, 10, 1, 3),
(4880, 1464, 2, 10, 1, 3),
(4881, 1896, 2, 10, 1, 2),
(4882, 378, 2, 10, 1, 0),
(4883, 578, 2, 10, 1, 1),
(4884, 3074, 2, 10, 1, 3),
(4885, 354, 2, 10, 1, 0),
(4886, 945, 2, 10, 1, 1),
(4887, 3075, 2, 10, 1, 1),
(4888, 2813, 2, 10, 1, 1),
(4889, 14, 2, 10, 1, 2),
(4890, 3, 2, 11, 21, 0),
(4891, 1, 2, 11, 19, 0),
(4892, 7, 2, 11, 14, 0),
(4893, 3076, 2, 11, 12, 1),
(4894, 5, 2, 11, 10, 0),
(4895, 3077, 2, 11, 6, 1),
(4896, 3078, 2, 11, 6, 1),
(4897, 9, 2, 11, 6, 2),
(4898, 3079, 2, 11, 6, 1),
(4899, 2, 2, 11, 6, 0),
(4900, 2641, 2, 11, 5, 3),
(4901, 3080, 2, 11, 5, 1),
(4902, 3081, 2, 11, 5, 1),
(4903, 65, 2, 11, 5, 0),
(4904, 3082, 2, 11, 5, 3),
(4905, 266, 2, 11, 5, 0),
(4906, 17, 2, 11, 5, 1),
(4907, 3038, 2, 11, 4, 3),
(4908, 72, 2, 11, 4, 0),
(4909, 21, 2, 11, 4, 0),
(4910, 3083, 2, 11, 4, 3),
(4911, 18, 2, 11, 4, 1),
(4912, 28, 2, 11, 4, 0),
(4913, 12, 2, 11, 3, 1),
(4914, 3084, 2, 11, 3, 1),
(4915, 76, 2, 11, 3, 1),
(4916, 6, 2, 11, 3, 0),
(4917, 1010, 2, 11, 3, 2),
(4918, 679, 2, 11, 3, 2),
(4919, 30, 2, 11, 3, 2),
(4920, 3085, 2, 11, 3, 2),
(4921, 1388, 2, 11, 3, 3),
(4922, 3086, 2, 11, 3, 3),
(4923, 844, 2, 11, 3, 0),
(4924, 749, 2, 11, 3, 2),
(4925, 31, 2, 11, 3, 0),
(4926, 581, 2, 11, 3, 3),
(4927, 3087, 2, 11, 3, 3),
(4928, 25, 2, 11, 3, 0),
(4929, 783, 2, 11, 3, 3),
(4930, 23, 2, 11, 3, 2),
(4931, 1208, 2, 11, 3, 1),
(4932, 3088, 2, 11, 3, 3),
(4933, 20, 2, 11, 2, 0),
(4934, 882, 2, 11, 2, 0),
(4935, 1103, 2, 11, 2, 3),
(4936, 525, 2, 11, 2, 2),
(4937, 450, 2, 11, 2, 1),
(4938, 590, 2, 11, 2, 1),
(4939, 3089, 2, 11, 2, 1),
(4940, 562, 2, 11, 2, 3),
(4941, 99, 2, 11, 2, 2),
(4942, 3090, 2, 11, 2, 3),
(4943, 1056, 2, 11, 2, 3),
(4944, 153, 2, 11, 2, 1),
(4945, 3091, 2, 11, 2, 3),
(4946, 2260, 2, 11, 2, 3),
(4947, 608, 2, 11, 2, 1),
(4948, 3092, 2, 11, 2, 3),
(4949, 79, 2, 11, 2, 0),
(4950, 3093, 2, 11, 2, 3),
(4951, 188, 2, 11, 2, 2),
(4952, 3094, 2, 11, 2, 3),
(4953, 3095, 2, 11, 2, 3),
(4954, 3096, 2, 11, 2, 1),
(4955, 202, 2, 11, 2, 0),
(4956, 912, 2, 11, 2, 0),
(4957, 16, 2, 11, 2, 0),
(4958, 3097, 2, 11, 2, 1),
(4959, 3098, 2, 11, 2, 3),
(4960, 3099, 2, 11, 2, 1),
(4961, 389, 2, 11, 2, 1),
(4962, 1324, 2, 11, 2, 3),
(4963, 1419, 2, 11, 2, 0),
(4964, 638, 2, 11, 2, 3),
(4965, 3100, 2, 11, 2, 3),
(4966, 557, 2, 11, 2, 3),
(4967, 3101, 2, 11, 2, 1),
(4968, 14, 2, 11, 2, 2),
(4969, 3102, 2, 11, 2, 2),
(4970, 51, 2, 11, 2, 3),
(4971, 35, 2, 11, 2, 1),
(4972, 324, 2, 11, 2, 2),
(4973, 622, 2, 11, 2, 1),
(4974, 452, 2, 11, 2, 1),
(4975, 89, 2, 11, 2, 3),
(4976, 3103, 2, 11, 1, 1),
(4977, 3104, 2, 11, 1, 2),
(4978, 1863, 2, 11, 1, 1),
(4979, 505, 2, 11, 1, 1),
(4980, 3105, 2, 11, 1, 1),
(4981, 3106, 2, 11, 1, 1),
(4982, 3107, 2, 11, 1, 3),
(4983, 805, 2, 11, 1, 1),
(4984, 3064, 2, 11, 1, 1),
(4985, 1222, 2, 11, 1, 3),
(4986, 1418, 2, 11, 1, 2),
(4987, 3108, 2, 11, 1, 1),
(4988, 378, 2, 11, 1, 0),
(4989, 3109, 2, 11, 1, 1),
(4990, 3110, 2, 11, 1, 2),
(4991, 364, 2, 11, 1, 3),
(4992, 3111, 2, 11, 1, 2),
(4993, 659, 2, 11, 1, 3),
(4994, 3112, 2, 11, 1, 1),
(4995, 3113, 2, 11, 1, 2),
(4996, 3114, 2, 11, 1, 1),
(4997, 558, 2, 11, 1, 3),
(4998, 3115, 2, 11, 1, 3),
(4999, 3116, 2, 11, 1, 1),
(5000, 3117, 2, 11, 1, 1),
(5001, 3118, 2, 11, 1, 3),
(5002, 3119, 2, 11, 1, 1),
(5003, 3120, 2, 11, 1, 3),
(5004, 3121, 2, 11, 1, 3),
(5005, 3122, 2, 11, 1, 3),
(5006, 3123, 2, 11, 1, 1),
(5007, 3124, 2, 11, 1, 3),
(5008, 3125, 2, 11, 1, 1),
(5009, 3126, 2, 11, 1, 2),
(5010, 722, 2, 11, 1, 3),
(5011, 594, 2, 11, 1, 3),
(5012, 114, 2, 11, 1, 2),
(5013, 3127, 2, 11, 1, 1),
(5014, 3128, 2, 11, 1, 1),
(5015, 1435, 2, 11, 1, 2),
(5016, 3129, 2, 11, 1, 3),
(5017, 41, 2, 11, 1, 0),
(5018, 2105, 2, 11, 1, 3),
(5019, 464, 2, 11, 1, 3),
(5020, 2114, 2, 11, 1, 0),
(5021, 684, 2, 11, 1, 2),
(5022, 888, 2, 11, 1, 3),
(5023, 34, 2, 11, 1, 0),
(5024, 3130, 2, 11, 1, 1),
(5025, 3131, 2, 11, 1, 1),
(5026, 77, 2, 11, 1, 1),
(5027, 54, 2, 11, 1, 3),
(5028, 3132, 2, 11, 1, 2),
(5029, 718, 2, 11, 1, 1),
(5030, 3133, 2, 11, 1, 1),
(5031, 1106, 2, 11, 1, 1),
(5032, 3134, 2, 11, 1, 1),
(5033, 2401, 2, 11, 1, 2),
(5034, 3135, 2, 11, 1, 1),
(5035, 1098, 2, 11, 1, 1),
(5036, 3136, 2, 11, 1, 1),
(5037, 3137, 2, 11, 1, 3),
(5038, 3138, 2, 11, 1, 1),
(5039, 3139, 2, 11, 1, 1),
(5040, 3140, 2, 11, 1, 3),
(5041, 203, 2, 11, 1, 1),
(5042, 1839, 2, 11, 1, 1),
(5043, 3141, 2, 11, 1, 3),
(5044, 3142, 2, 11, 1, 1),
(5045, 1023, 2, 11, 1, 1),
(5046, 82, 2, 11, 1, 2),
(5047, 3143, 2, 11, 1, 3),
(5048, 3144, 2, 11, 1, 2),
(5049, 1249, 2, 11, 1, 3),
(5050, 1802, 2, 11, 1, 3),
(5051, 3145, 2, 11, 1, 3),
(5052, 3146, 2, 11, 1, 1),
(5053, 3147, 2, 11, 1, 1),
(5054, 3148, 2, 11, 1, 1),
(5055, 3149, 2, 11, 1, 1),
(5056, 2550, 2, 11, 1, 1),
(5057, 3150, 2, 11, 1, 3),
(5058, 74, 2, 11, 1, 0),
(5059, 3151, 2, 11, 1, 2),
(5060, 3152, 2, 11, 1, 1),
(5061, 71, 2, 11, 1, 0),
(5062, 1646, 2, 11, 1, 1),
(5063, 757, 2, 11, 1, 1),
(5064, 3153, 2, 11, 1, 1),
(5065, 331, 2, 11, 1, 2),
(5066, 3154, 2, 11, 1, 3),
(5067, 2257, 2, 11, 1, 2),
(5068, 465, 2, 11, 1, 3),
(5069, 3155, 2, 11, 1, 2),
(5070, 3156, 2, 11, 1, 1),
(5071, 39, 2, 11, 1, 3),
(5072, 837, 2, 11, 1, 3),
(5073, 3157, 2, 11, 1, 2),
(5074, 550, 2, 11, 1, 3),
(5075, 1258, 2, 11, 1, 1),
(5076, 416, 2, 11, 1, 3),
(5077, 3158, 2, 11, 1, 1),
(5078, 3159, 2, 11, 1, 1),
(5079, 3160, 2, 11, 1, 1),
(5080, 3161, 2, 11, 1, 3),
(5081, 3162, 2, 11, 1, 1),
(5082, 1928, 2, 11, 1, 3),
(5083, 112, 2, 11, 1, 3),
(5084, 3163, 2, 11, 1, 2),
(5085, 3164, 2, 11, 1, 1),
(5086, 3165, 2, 11, 1, 3),
(5087, 660, 2, 11, 1, 1),
(5088, 3166, 2, 11, 1, 2),
(5089, 192, 2, 11, 1, 3),
(5090, 250, 2, 11, 1, 2),
(5091, 2983, 2, 11, 1, 1),
(5092, 974, 2, 11, 1, 1),
(5093, 61, 2, 11, 1, 1),
(5094, 3167, 2, 11, 1, 2),
(5095, 541, 2, 11, 1, 3),
(5096, 3168, 2, 11, 1, 3),
(5097, 63, 2, 11, 1, 1),
(5098, 3169, 2, 11, 1, 3),
(5099, 593, 2, 11, 1, 3),
(5100, 1642, 2, 11, 1, 1),
(5101, 458, 2, 11, 1, 2),
(5102, 3170, 2, 11, 1, 1),
(5103, 311, 2, 11, 1, 3),
(5104, 115, 2, 11, 1, 3),
(5105, 3171, 2, 11, 1, 3),
(5106, 773, 2, 11, 1, 1),
(5107, 145, 2, 11, 1, 1),
(5108, 2659, 2, 11, 1, 3),
(5109, 3172, 2, 11, 1, 3),
(5110, 3173, 2, 11, 1, 1),
(5111, 90, 2, 11, 1, 1),
(5112, 175, 2, 11, 1, 2),
(5113, 1720, 2, 11, 1, 1),
(5114, 3174, 2, 11, 1, 1),
(5115, 3175, 2, 11, 1, 1),
(5116, 3176, 2, 11, 1, 3),
(5117, 2318, 2, 11, 1, 3),
(5118, 1097, 2, 11, 1, 0),
(5119, 999, 2, 11, 1, 3),
(5120, 3177, 2, 11, 1, 3),
(5121, 804, 2, 11, 1, 3),
(5122, 2873, 2, 11, 1, 2),
(5123, 1395, 2, 11, 1, 1),
(5124, 3178, 2, 11, 1, 1),
(5125, 1426, 2, 11, 1, 3),
(5126, 3179, 2, 11, 1, 1),
(5127, 3180, 2, 11, 1, 3),
(5128, 1232, 2, 11, 1, 1),
(5129, 3181, 2, 11, 1, 3),
(5130, 1800, 2, 11, 1, 2),
(5131, 3182, 2, 11, 1, 3),
(5132, 3183, 2, 11, 1, 1),
(5133, 988, 2, 11, 1, 3),
(5134, 3184, 2, 11, 1, 1),
(5135, 3185, 2, 11, 1, 1),
(5136, 610, 2, 11, 1, 1),
(5137, 3186, 2, 11, 1, 1),
(5138, 481, 2, 11, 1, 1),
(5139, 3187, 2, 11, 1, 1),
(5140, 406, 2, 11, 1, 1),
(5141, 471, 2, 11, 1, 1),
(5142, 3188, 2, 11, 1, 3),
(5143, 872, 2, 11, 1, 2),
(5144, 3189, 2, 11, 1, 2),
(5145, 576, 2, 11, 1, 2),
(5146, 3190, 2, 11, 1, 2),
(5147, 803, 2, 11, 1, 3),
(5148, 181, 2, 11, 1, 3),
(5149, 3191, 2, 11, 1, 2),
(5150, 847, 2, 11, 1, 3),
(5151, 1967, 2, 11, 1, 3),
(5152, 643, 2, 11, 1, 1),
(5153, 146, 2, 11, 1, 1),
(5154, 132, 2, 11, 1, 1),
(5155, 1011, 2, 11, 1, 1),
(5156, 3192, 2, 11, 1, 2),
(5157, 3193, 2, 11, 1, 2),
(5158, 116, 2, 11, 1, 3),
(5159, 3194, 2, 11, 1, 2),
(5160, 3195, 2, 11, 1, 1),
(5161, 3196, 2, 11, 1, 3),
(5162, 3197, 2, 11, 1, 1),
(5163, 3198, 2, 11, 1, 3),
(5164, 1509, 2, 11, 1, 3),
(5165, 3199, 2, 11, 1, 1),
(5166, 3200, 2, 11, 1, 1),
(5167, 3201, 2, 11, 1, 1),
(5168, 2930, 2, 11, 1, 1),
(5169, 3202, 2, 11, 1, 1),
(5170, 3203, 2, 11, 1, 1),
(5171, 3204, 2, 11, 1, 1),
(5172, 3205, 2, 11, 1, 1),
(5173, 634, 2, 11, 1, 3),
(5174, 3206, 2, 11, 1, 1),
(5175, 38, 2, 11, 1, 3),
(5176, 3207, 2, 11, 1, 3),
(5177, 3208, 2, 11, 1, 3),
(5178, 3209, 2, 11, 1, 3),
(5179, 1717, 2, 11, 1, 2),
(5180, 3210, 2, 11, 1, 1),
(5181, 3211, 2, 11, 1, 1),
(5182, 3212, 2, 11, 1, 1),
(5183, 2834, 2, 11, 1, 3),
(5184, 3213, 2, 11, 1, 1),
(5185, 68, 2, 11, 1, 3),
(5186, 3214, 2, 11, 1, 1),
(5187, 3215, 2, 11, 1, 1),
(5188, 3216, 2, 11, 1, 1),
(5189, 3217, 2, 11, 1, 1),
(5190, 3218, 2, 11, 1, 1),
(5191, 3219, 2, 11, 1, 3),
(5192, 1582, 2, 11, 1, 1),
(5193, 3220, 2, 11, 1, 1),
(5194, 2558, 2, 11, 1, 2),
(5195, 3221, 2, 11, 1, 3),
(5196, 3222, 2, 11, 1, 1),
(5197, 3223, 2, 11, 1, 1),
(5198, 1566, 2, 11, 1, 1),
(5199, 3224, 2, 11, 1, 1),
(5200, 189, 2, 11, 1, 0),
(5201, 70, 2, 11, 1, 1),
(5202, 3225, 2, 11, 1, 1),
(5203, 717, 2, 11, 1, 1),
(5204, 3226, 2, 11, 1, 1),
(5205, 1698, 2, 11, 1, 3),
(5206, 121, 2, 11, 1, 2),
(5207, 3227, 2, 11, 1, 1),
(5208, 3228, 2, 11, 1, 1),
(5209, 902, 2, 11, 1, 3),
(5210, 3229, 2, 11, 1, 3),
(5211, 3230, 2, 11, 1, 3),
(5212, 907, 2, 11, 1, 2),
(5213, 2406, 2, 11, 1, 1),
(5214, 706, 2, 11, 1, 2),
(5215, 3231, 2, 11, 1, 2),
(5216, 3232, 2, 11, 1, 3),
(5217, 3233, 2, 11, 1, 3),
(5218, 3234, 2, 11, 1, 3),
(5219, 3235, 2, 11, 1, 3),
(5220, 524, 2, 11, 1, 1),
(5221, 3236, 2, 11, 1, 3),
(5222, 3237, 2, 11, 1, 1),
(5223, 3238, 2, 11, 1, 3),
(5224, 827, 2, 11, 1, 3),
(5225, 1201, 2, 11, 1, 2),
(5226, 2001, 2, 11, 1, 3),
(5227, 1558, 2, 11, 1, 2),
(5228, 3239, 2, 11, 1, 1),
(5229, 3240, 2, 11, 1, 1),
(5230, 282, 2, 11, 1, 3),
(5231, 2292, 2, 11, 1, 1),
(5232, 3241, 2, 11, 1, 3),
(5233, 982, 2, 11, 2, 3),
(5234, 154, 2, 11, 1, 0),
(5235, 3242, 2, 11, 1, 2),
(5236, 3243, 2, 11, 1, 1),
(5237, 29, 2, 11, 1, 2),
(5238, 3, 2, 12, 10, 0),
(5239, 345, 2, 12, 8, 3),
(5240, 1, 2, 12, 7, 0),
(5241, 3244, 2, 12, 5, 1),
(5242, 7, 2, 12, 5, 0),
(5243, 2, 2, 12, 5, 0),
(5244, 3245, 2, 12, 4, 3),
(5245, 3246, 2, 12, 3, 1),
(5246, 76, 2, 12, 3, 1),
(5247, 3247, 2, 12, 3, 1),
(5248, 3248, 2, 12, 3, 1),
(5249, 35, 2, 12, 3, 1),
(5250, 105, 2, 12, 3, 3),
(5251, 106, 2, 12, 3, 3),
(5252, 3249, 2, 12, 3, 1),
(5253, 3250, 2, 12, 3, 1),
(5254, 28, 2, 12, 3, 0),
(5255, 1373, 2, 12, 2, 3),
(5256, 464, 2, 12, 2, 3),
(5257, 5, 2, 12, 2, 0),
(5258, 153, 2, 12, 2, 1),
(5259, 3251, 2, 12, 2, 1),
(5260, 3252, 2, 12, 2, 1),
(5261, 3253, 2, 12, 2, 1),
(5262, 1781, 2, 12, 2, 0),
(5263, 3254, 2, 12, 2, 1),
(5264, 327, 2, 12, 2, 1),
(5265, 3255, 2, 12, 2, 3),
(5266, 367, 2, 12, 2, 1),
(5267, 3256, 2, 12, 2, 1),
(5268, 3257, 2, 12, 2, 1),
(5269, 3258, 2, 12, 2, 1),
(5270, 3259, 2, 12, 2, 1),
(5271, 3260, 2, 12, 2, 1),
(5272, 3261, 2, 12, 2, 1),
(5273, 3262, 2, 12, 2, 1),
(5274, 20, 2, 12, 2, 0),
(5275, 684, 2, 12, 2, 2),
(5276, 528, 2, 12, 2, 1),
(5277, 34, 2, 12, 2, 0),
(5278, 6, 2, 12, 2, 0),
(5279, 3263, 2, 12, 2, 1),
(5280, 90, 2, 12, 2, 1),
(5281, 2265, 2, 12, 2, 3),
(5282, 3264, 2, 12, 2, 1),
(5283, 3265, 2, 12, 2, 1),
(5284, 401, 2, 12, 2, 1),
(5285, 550, 2, 12, 2, 3),
(5286, 3266, 2, 12, 2, 1),
(5287, 3267, 2, 12, 2, 1),
(5288, 773, 2, 12, 2, 1),
(5289, 3268, 2, 12, 2, 3),
(5290, 3269, 2, 12, 2, 1),
(5291, 563, 2, 12, 2, 1),
(5292, 3270, 2, 12, 2, 1),
(5293, 65, 2, 12, 2, 0),
(5294, 3271, 2, 12, 2, 1),
(5295, 3272, 2, 12, 2, 1),
(5296, 3273, 2, 12, 2, 1),
(5297, 3274, 2, 12, 2, 1),
(5298, 3275, 2, 12, 2, 1),
(5299, 1375, 2, 12, 2, 3),
(5300, 3276, 2, 12, 2, 2),
(5301, 274, 2, 12, 2, 1),
(5302, 3277, 2, 12, 2, 1),
(5303, 91, 2, 12, 1, 1),
(5304, 3278, 2, 12, 1, 1),
(5305, 3279, 2, 12, 1, 1),
(5306, 3280, 2, 12, 1, 1),
(5307, 3281, 2, 12, 1, 1),
(5308, 3282, 2, 12, 1, 1),
(5309, 3283, 2, 12, 1, 1),
(5310, 3284, 2, 12, 1, 1),
(5311, 3285, 2, 12, 1, 1),
(5312, 3286, 2, 12, 1, 1),
(5313, 3287, 2, 12, 1, 1),
(5314, 3288, 2, 12, 1, 1),
(5315, 3289, 2, 12, 1, 1),
(5316, 3106, 2, 12, 1, 1),
(5317, 3290, 2, 12, 1, 1),
(5318, 3291, 2, 12, 1, 1),
(5319, 3292, 2, 12, 1, 1),
(5320, 3293, 2, 12, 1, 1),
(5321, 3294, 2, 12, 1, 1),
(5322, 3295, 2, 12, 1, 1),
(5323, 3296, 2, 12, 1, 1),
(5324, 3297, 2, 12, 1, 1),
(5325, 3298, 2, 12, 1, 1),
(5326, 3299, 2, 12, 1, 1),
(5327, 3300, 2, 12, 1, 1),
(5328, 3301, 2, 12, 1, 1),
(5329, 3302, 2, 12, 1, 1),
(5330, 3303, 2, 12, 1, 1),
(5331, 3304, 2, 12, 1, 1),
(5332, 3209, 2, 12, 1, 3),
(5333, 3305, 2, 12, 1, 3),
(5334, 3306, 2, 12, 1, 3),
(5335, 55, 2, 12, 1, 1),
(5336, 592, 2, 12, 1, 3),
(5337, 3307, 2, 12, 1, 1),
(5338, 3308, 2, 12, 1, 1),
(5339, 3309, 2, 12, 1, 3),
(5340, 3310, 2, 12, 1, 1),
(5341, 3311, 2, 12, 1, 1),
(5342, 617, 2, 12, 1, 1),
(5343, 3312, 2, 12, 1, 1),
(5344, 3313, 2, 12, 1, 1),
(5345, 17, 2, 12, 1, 1),
(5346, 1417, 2, 12, 1, 1),
(5347, 2796, 2, 12, 1, 3),
(5348, 533, 2, 12, 1, 1),
(5349, 16, 2, 12, 1, 0),
(5350, 3314, 2, 12, 1, 1),
(5351, 1897, 2, 12, 1, 3),
(5352, 3315, 2, 12, 1, 3),
(5353, 3316, 2, 12, 1, 2),
(5354, 2794, 2, 12, 1, 3),
(5355, 3317, 2, 12, 1, 2),
(5356, 2045, 2, 12, 1, 3),
(5357, 3318, 2, 12, 1, 1),
(5358, 3319, 2, 12, 1, 1),
(5359, 513, 2, 12, 1, 3),
(5360, 3320, 2, 12, 1, 2),
(5361, 1582, 2, 12, 1, 1),
(5362, 3321, 2, 12, 1, 1),
(5363, 742, 2, 12, 1, 3),
(5364, 115, 2, 12, 1, 3),
(5365, 3322, 2, 12, 1, 1),
(5366, 3323, 2, 12, 1, 1),
(5367, 3324, 2, 12, 1, 1),
(5368, 3325, 2, 12, 1, 1),
(5369, 3326, 2, 12, 1, 1),
(5370, 3327, 2, 12, 1, 1),
(5371, 3328, 2, 12, 1, 1),
(5372, 522, 2, 12, 1, 1),
(5373, 3329, 2, 12, 1, 3),
(5374, 3330, 2, 12, 1, 1),
(5375, 3331, 2, 12, 1, 1),
(5376, 3332, 2, 12, 1, 1),
(5377, 3333, 2, 12, 1, 1),
(5378, 3334, 2, 12, 1, 1),
(5379, 3335, 2, 12, 1, 1),
(5380, 193, 2, 12, 1, 1),
(5381, 1454, 2, 12, 1, 1),
(5382, 3336, 2, 12, 1, 1),
(5383, 3337, 2, 12, 1, 1),
(5384, 47, 2, 12, 1, 3),
(5385, 3338, 2, 12, 1, 3),
(5386, 79, 2, 12, 1, 0),
(5387, 3339, 2, 12, 1, 3),
(5388, 3340, 2, 12, 1, 3),
(5389, 3341, 2, 12, 1, 2),
(5390, 2110, 2, 12, 1, 0),
(5391, 729, 2, 12, 1, 1),
(5392, 2083, 2, 12, 1, 1),
(5393, 3342, 2, 12, 1, 2),
(5394, 3343, 2, 12, 1, 3),
(5395, 86, 2, 12, 1, 3),
(5396, 2312, 2, 12, 1, 1),
(5397, 828, 2, 12, 1, 1),
(5398, 139, 2, 12, 1, 3),
(5399, 3344, 2, 12, 1, 3),
(5400, 444, 2, 12, 1, 1),
(5401, 3345, 2, 12, 1, 2),
(5402, 1388, 2, 12, 1, 3),
(5403, 114, 2, 12, 1, 2),
(5404, 3346, 2, 12, 1, 3),
(5405, 95, 2, 12, 1, 3),
(5406, 3347, 2, 12, 1, 1),
(5407, 396, 2, 12, 1, 1),
(5408, 1305, 2, 12, 1, 3),
(5409, 3348, 2, 12, 1, 3),
(5410, 21, 2, 12, 1, 0),
(5411, 3349, 2, 12, 1, 1),
(5412, 24, 2, 12, 1, 2),
(5413, 1738, 2, 12, 1, 3),
(5414, 675, 2, 12, 1, 2),
(5415, 2152, 2, 12, 1, 2),
(5416, 572, 2, 12, 1, 3),
(5417, 3350, 2, 12, 1, 2),
(5418, 2314, 2, 12, 1, 3),
(5419, 3351, 2, 12, 1, 1),
(5420, 3352, 2, 12, 1, 1),
(5421, 2164, 2, 12, 1, 3),
(5422, 3353, 2, 12, 1, 1),
(5423, 1097, 2, 12, 1, 0),
(5424, 249, 2, 12, 1, 1),
(5425, 428, 2, 12, 1, 1),
(5426, 1625, 2, 12, 1, 1),
(5427, 3354, 2, 12, 1, 1),
(5428, 3355, 2, 12, 1, 1),
(5429, 3356, 2, 12, 1, 3),
(5430, 3357, 2, 12, 1, 1),
(5431, 30, 2, 12, 1, 2),
(5432, 3358, 2, 12, 1, 2),
(5433, 154, 2, 12, 1, 0),
(5434, 1355, 2, 12, 1, 2),
(5435, 38, 2, 12, 1, 3),
(5436, 201, 2, 12, 1, 2),
(5437, 3359, 2, 12, 1, 1),
(5438, 3360, 2, 12, 1, 1),
(5439, 3361, 2, 12, 1, 1),
(5440, 3362, 2, 12, 1, 2),
(5441, 919, 2, 12, 1, 1),
(5442, 425, 2, 12, 1, 3),
(5443, 3363, 2, 12, 1, 1),
(5444, 63, 2, 12, 1, 1),
(5445, 3364, 2, 12, 1, 1),
(5446, 3365, 2, 12, 1, 1),
(5447, 3366, 2, 12, 1, 3),
(5448, 3367, 2, 12, 1, 1),
(5449, 3368, 2, 12, 1, 3),
(5450, 3369, 2, 12, 1, 1),
(5451, 1876, 2, 12, 1, 1),
(5452, 647, 2, 12, 1, 3),
(5453, 3370, 2, 12, 1, 1),
(5454, 3371, 2, 12, 1, 1),
(5455, 3372, 2, 12, 1, 1),
(5456, 3373, 2, 12, 1, 1),
(5457, 873, 2, 12, 1, 3),
(5458, 3374, 2, 12, 1, 1),
(5459, 2721, 2, 12, 1, 1),
(5460, 876, 2, 12, 1, 3),
(5461, 1580, 2, 12, 1, 2),
(5462, 3375, 2, 12, 1, 1),
(5463, 1574, 2, 12, 1, 3),
(5464, 152, 2, 12, 1, 3),
(5465, 698, 2, 12, 1, 1),
(5466, 32, 2, 12, 1, 1),
(5467, 3376, 2, 12, 1, 1),
(5468, 3377, 2, 12, 1, 1),
(5469, 2846, 2, 12, 1, 1),
(5470, 3378, 2, 12, 1, 1),
(5471, 3379, 2, 12, 1, 1),
(5472, 3380, 2, 12, 1, 1),
(5473, 2855, 2, 12, 1, 3),
(5474, 192, 2, 12, 1, 3),
(5475, 3381, 2, 12, 1, 1),
(5476, 3382, 2, 12, 1, 1),
(5477, 364, 2, 12, 1, 3),
(5478, 544, 2, 12, 1, 1),
(5479, 3383, 2, 12, 1, 1),
(5480, 3384, 2, 12, 1, 1),
(5481, 1, 2, 13, 21, 0),
(5482, 3, 2, 13, 19, 0),
(5483, 1338, 2, 13, 7, 3),
(5484, 1218, 2, 13, 6, 1),
(5485, 2, 2, 13, 6, 0),
(5486, 9, 2, 13, 6, 2),
(5487, 1738, 2, 13, 6, 3),
(5488, 331, 2, 13, 5, 2),
(5489, 12, 2, 13, 5, 1),
(5490, 3385, 2, 13, 5, 3),
(5491, 206, 2, 13, 5, 3),
(5492, 14, 2, 13, 4, 2),
(5493, 1596, 2, 13, 4, 1),
(5494, 44, 2, 13, 4, 3),
(5495, 22, 2, 13, 4, 0),
(5496, 3386, 2, 13, 4, 1),
(5497, 312, 2, 13, 3, 3),
(5498, 16, 2, 13, 3, 0),
(5499, 461, 2, 13, 3, 1),
(5500, 3387, 2, 13, 3, 1),
(5501, 390, 2, 13, 3, 0),
(5502, 65, 2, 13, 3, 0),
(5503, 23, 2, 13, 3, 2),
(5504, 3388, 2, 13, 2, 3),
(5505, 31, 2, 13, 2, 0),
(5506, 21, 2, 13, 2, 0),
(5507, 621, 2, 13, 2, 3),
(5508, 6, 2, 13, 2, 0),
(5509, 29, 2, 13, 2, 2),
(5510, 153, 2, 13, 2, 1),
(5511, 449, 2, 13, 2, 3),
(5512, 101, 2, 13, 2, 2),
(5513, 1167, 2, 13, 2, 3),
(5514, 3389, 2, 13, 2, 3),
(5515, 1385, 2, 13, 2, 1),
(5516, 144, 2, 13, 2, 1),
(5517, 1730, 2, 13, 2, 2),
(5518, 15, 2, 13, 2, 0),
(5519, 77, 2, 13, 2, 1),
(5520, 3113, 2, 13, 2, 2),
(5521, 152, 2, 13, 2, 3),
(5522, 3390, 2, 13, 2, 3),
(5523, 3391, 2, 13, 2, 2),
(5524, 45, 2, 13, 2, 2),
(5525, 416, 2, 13, 2, 3),
(5526, 996, 2, 13, 2, 1),
(5527, 789, 2, 13, 2, 3),
(5528, 884, 2, 13, 2, 3),
(5529, 3392, 2, 13, 2, 3),
(5530, 1718, 2, 13, 2, 3),
(5531, 3393, 2, 13, 2, 2),
(5532, 1698, 2, 13, 2, 3),
(5533, 4, 2, 13, 2, 0),
(5534, 3394, 2, 13, 2, 3),
(5535, 38, 2, 13, 2, 3),
(5536, 72, 2, 13, 2, 0),
(5537, 56, 2, 13, 2, 1),
(5538, 25, 2, 13, 2, 0),
(5539, 592, 2, 13, 2, 3),
(5540, 5, 2, 13, 2, 0),
(5541, 35, 2, 13, 2, 1),
(5542, 30, 2, 13, 2, 2),
(5543, 612, 2, 13, 2, 3),
(5544, 280, 2, 13, 2, 0),
(5545, 1444, 2, 13, 2, 0),
(5546, 3395, 2, 13, 2, 1),
(5547, 679, 2, 13, 1, 2),
(5548, 435, 2, 13, 1, 2),
(5549, 2434, 2, 13, 1, 2),
(5550, 140, 2, 13, 1, 2),
(5551, 3396, 2, 13, 1, 2),
(5552, 450, 2, 13, 1, 1),
(5553, 2329, 2, 13, 1, 3),
(5554, 3397, 2, 13, 1, 3),
(5555, 3398, 2, 13, 1, 1),
(5556, 882, 2, 13, 1, 0),
(5557, 3399, 2, 13, 1, 1),
(5558, 3400, 2, 13, 1, 2),
(5559, 3401, 2, 13, 1, 3),
(5560, 589, 2, 13, 1, 1),
(5561, 817, 2, 13, 1, 2),
(5562, 1240, 2, 13, 1, 3),
(5563, 2524, 2, 13, 1, 1),
(5564, 436, 2, 13, 1, 0),
(5565, 887, 2, 13, 1, 1),
(5566, 3402, 2, 13, 1, 2),
(5567, 1420, 2, 13, 1, 2),
(5568, 3403, 2, 13, 1, 1),
(5569, 3404, 2, 13, 1, 2),
(5570, 3405, 2, 13, 1, 3),
(5571, 3406, 2, 13, 1, 2),
(5572, 3407, 2, 13, 1, 3),
(5573, 452, 2, 13, 1, 1),
(5574, 3408, 2, 13, 1, 3),
(5575, 1922, 2, 13, 1, 1),
(5576, 677, 2, 13, 1, 0),
(5577, 3409, 2, 13, 1, 3),
(5578, 3410, 2, 13, 1, 2),
(5579, 274, 2, 13, 1, 1),
(5580, 3411, 2, 13, 1, 1),
(5581, 401, 2, 13, 1, 1),
(5582, 3412, 2, 13, 1, 3),
(5583, 3413, 2, 13, 1, 3),
(5584, 3414, 2, 13, 1, 2),
(5585, 3415, 2, 13, 1, 1),
(5586, 3416, 2, 13, 1, 1),
(5587, 76, 2, 13, 1, 1),
(5588, 3417, 2, 13, 1, 1),
(5589, 3418, 2, 13, 1, 3),
(5590, 3419, 2, 13, 1, 1),
(5591, 1525, 2, 13, 1, 1),
(5592, 3420, 2, 13, 1, 3),
(5593, 3421, 2, 13, 1, 1),
(5594, 3422, 2, 13, 1, 2),
(5595, 3423, 2, 13, 1, 1),
(5596, 364, 2, 13, 1, 3),
(5597, 519, 2, 13, 1, 0),
(5598, 308, 2, 13, 1, 3),
(5599, 3424, 2, 13, 1, 2),
(5600, 1110, 2, 13, 1, 0),
(5601, 608, 2, 13, 1, 1),
(5602, 688, 2, 13, 1, 3),
(5603, 3425, 2, 13, 1, 2),
(5604, 282, 2, 13, 1, 3),
(5605, 3426, 2, 13, 1, 3),
(5606, 2172, 2, 13, 1, 2),
(5607, 3427, 2, 13, 1, 1),
(5608, 36, 2, 13, 1, 1),
(5609, 3428, 2, 13, 1, 1),
(5610, 1737, 2, 13, 1, 2),
(5611, 3429, 2, 13, 1, 1),
(5612, 117, 2, 13, 1, 1),
(5613, 39, 2, 13, 1, 3),
(5614, 2915, 2, 13, 1, 0),
(5615, 1786, 2, 13, 1, 2),
(5616, 1225, 2, 13, 1, 3),
(5617, 165, 2, 13, 1, 0),
(5618, 1520, 2, 13, 1, 2),
(5619, 3430, 2, 13, 1, 2),
(5620, 249, 2, 13, 1, 1),
(5621, 3431, 2, 13, 1, 3),
(5622, 215, 2, 13, 1, 0),
(5623, 756, 2, 13, 1, 3),
(5624, 3432, 2, 13, 1, 1),
(5625, 3433, 2, 13, 1, 2),
(5626, 3434, 2, 13, 1, 1),
(5627, 3435, 2, 13, 1, 1),
(5628, 1397, 2, 13, 1, 3),
(5629, 3436, 2, 13, 1, 1),
(5630, 1019, 2, 13, 1, 2),
(5631, 3437, 2, 13, 1, 3),
(5632, 1506, 2, 13, 1, 1),
(5633, 1334, 2, 13, 1, 2),
(5634, 3438, 2, 13, 1, 3),
(5635, 119, 2, 13, 1, 1),
(5636, 3439, 2, 13, 1, 1),
(5637, 3440, 2, 13, 1, 3),
(5638, 3441, 2, 13, 1, 2),
(5639, 3442, 2, 13, 1, 3),
(5640, 62, 2, 13, 1, 1),
(5641, 1992, 2, 13, 1, 3),
(5642, 2402, 2, 13, 1, 1),
(5643, 3443, 2, 13, 1, 2),
(5644, 604, 2, 13, 1, 2),
(5645, 1434, 2, 13, 1, 1),
(5646, 3444, 2, 13, 1, 1),
(5647, 2107, 2, 13, 1, 2),
(5648, 2536, 2, 13, 1, 3),
(5649, 3445, 2, 13, 1, 2),
(5650, 796, 2, 13, 1, 3),
(5651, 33, 2, 13, 1, 3),
(5652, 1498, 2, 13, 1, 2),
(5653, 666, 2, 13, 1, 3),
(5654, 3446, 2, 13, 1, 2),
(5655, 3447, 2, 13, 1, 3),
(5656, 2753, 2, 13, 1, 3),
(5657, 3448, 2, 13, 1, 2),
(5658, 794, 2, 13, 1, 1),
(5659, 3449, 2, 13, 1, 1),
(5660, 1056, 2, 13, 1, 3),
(5661, 105, 2, 13, 1, 3),
(5662, 1949, 2, 13, 1, 2),
(5663, 492, 2, 13, 1, 2),
(5664, 278, 2, 13, 1, 1),
(5665, 1496, 2, 13, 1, 3),
(5666, 398, 2, 13, 1, 2),
(5667, 3450, 2, 13, 1, 2),
(5668, 3451, 2, 13, 1, 3),
(5669, 3452, 2, 13, 1, 3),
(5670, 2201, 2, 13, 1, 3),
(5671, 2304, 2, 13, 1, 3),
(5672, 166, 2, 13, 1, 2),
(5673, 441, 2, 13, 1, 1),
(5674, 184, 2, 13, 1, 1),
(5675, 2458, 2, 13, 1, 3),
(5676, 1010, 2, 13, 1, 2),
(5677, 3453, 2, 13, 1, 3),
(5678, 3454, 2, 13, 1, 2),
(5679, 3455, 2, 13, 1, 2),
(5680, 3456, 2, 13, 1, 1),
(5681, 1330, 2, 13, 1, 2),
(5682, 1499, 2, 13, 1, 2),
(5683, 622, 2, 13, 1, 1),
(5684, 181, 2, 13, 1, 3),
(5685, 7, 2, 13, 1, 0),
(5686, 505, 2, 13, 1, 1),
(5687, 74, 2, 13, 1, 0),
(5688, 328, 2, 13, 1, 2),
(5689, 1563, 2, 13, 1, 3),
(5690, 3457, 2, 13, 1, 2),
(5691, 3458, 2, 13, 1, 3),
(5692, 1244, 2, 13, 1, 1),
(5693, 3459, 2, 13, 1, 1),
(5694, 116, 2, 13, 1, 3),
(5695, 1435, 2, 13, 1, 2),
(5696, 527, 2, 13, 1, 1),
(5697, 3460, 2, 13, 1, 2),
(5698, 2529, 2, 13, 1, 3),
(5699, 1017, 2, 13, 1, 3),
(5700, 88, 2, 13, 1, 1),
(5701, 3461, 2, 13, 1, 2),
(5702, 3462, 2, 13, 1, 1),
(5703, 3463, 2, 13, 1, 1),
(5704, 1370, 2, 13, 1, 2),
(5705, 3464, 2, 13, 1, 1),
(5706, 3465, 2, 13, 1, 1),
(5707, 3466, 2, 13, 1, 1),
(5708, 883, 2, 13, 1, 1),
(5709, 3467, 2, 13, 1, 2),
(5710, 3468, 2, 13, 1, 3),
(5711, 3469, 2, 13, 1, 2),
(5712, 3470, 2, 13, 1, 3),
(5713, 3471, 2, 13, 1, 1),
(5714, 3472, 2, 13, 1, 2),
(5715, 3135, 2, 13, 1, 1),
(5716, 3473, 2, 13, 1, 1),
(5717, 3474, 2, 13, 1, 3),
(5718, 3475, 2, 13, 1, 1),
(5719, 3476, 2, 13, 1, 2),
(5720, 3477, 2, 13, 1, 3),
(5721, 3478, 2, 13, 1, 2),
(5722, 2232, 2, 13, 1, 3),
(5723, 91, 2, 13, 1, 1),
(5724, 400, 2, 13, 1, 3),
(5725, 503, 2, 13, 1, 1),
(5726, 175, 2, 13, 1, 2),
(5727, 3479, 2, 13, 1, 1),
(5728, 114, 2, 13, 1, 2),
(5729, 1584, 2, 13, 1, 1),
(5730, 3480, 2, 13, 1, 1),
(5731, 3481, 2, 13, 1, 3),
(5732, 3482, 2, 13, 1, 3),
(5733, 103, 2, 13, 1, 3),
(5734, 690, 2, 13, 1, 1),
(5735, 3483, 2, 13, 1, 1),
(5736, 3355, 2, 13, 1, 1),
(5737, 2981, 2, 13, 1, 2),
(5738, 193, 2, 13, 1, 1),
(5739, 844, 2, 13, 1, 0),
(5740, 3484, 2, 13, 1, 3),
(5741, 41, 2, 13, 1, 0),
(5742, 1592, 2, 13, 1, 2),
(5743, 2143, 2, 13, 1, 3),
(5744, 3485, 2, 13, 1, 1),
(5745, 3486, 2, 13, 1, 1),
(5746, 1217, 2, 13, 1, 3),
(5747, 565, 2, 13, 1, 1),
(5748, 3, 2, 14, 17, 0),
(5749, 2, 2, 14, 15, 0),
(5750, 3487, 2, 14, 13, 3),
(5751, 1, 2, 14, 11, 0),
(5752, 144, 2, 14, 11, 1),
(5753, 9, 2, 14, 10, 2),
(5754, 12, 2, 14, 10, 1),
(5755, 76, 2, 14, 9, 1),
(5756, 21, 2, 14, 9, 0),
(5757, 218, 2, 14, 8, 3),
(5758, 5, 2, 14, 7, 0),
(5759, 23, 2, 14, 7, 2),
(5760, 20, 2, 14, 7, 0),
(5761, 30, 2, 14, 7, 2),
(5762, 38, 2, 14, 7, 3),
(5763, 146, 2, 14, 7, 1),
(5764, 4, 2, 14, 6, 0),
(5765, 17, 2, 14, 6, 1),
(5766, 77, 2, 14, 6, 1),
(5767, 7, 2, 14, 6, 0),
(5768, 6, 2, 14, 6, 0),
(5769, 8, 2, 14, 6, 3),
(5770, 15, 2, 14, 5, 0),
(5771, 36, 2, 14, 5, 1),
(5772, 592, 2, 14, 4, 3),
(5773, 190, 2, 14, 4, 1),
(5774, 115, 2, 14, 4, 3),
(5775, 14, 2, 14, 4, 2),
(5776, 3445, 2, 14, 4, 2),
(5777, 634, 2, 14, 4, 3),
(5778, 844, 2, 14, 4, 0),
(5779, 188, 2, 14, 4, 2),
(5780, 1895, 2, 14, 3, 3),
(5781, 32, 2, 14, 3, 1),
(5782, 2903, 2, 14, 3, 3),
(5783, 1303, 2, 14, 3, 1),
(5784, 364, 2, 14, 3, 3),
(5785, 1402, 2, 14, 3, 1),
(5786, 31, 2, 14, 3, 0),
(5787, 450, 2, 14, 3, 1),
(5788, 55, 2, 14, 3, 1),
(5789, 3488, 2, 14, 3, 3),
(5790, 180, 2, 14, 3, 2),
(5791, 423, 2, 14, 3, 3),
(5792, 3489, 2, 14, 3, 3),
(5793, 90, 2, 14, 3, 1),
(5794, 63, 2, 14, 3, 1),
(5795, 428, 2, 14, 3, 1),
(5796, 3490, 2, 14, 3, 3),
(5797, 773, 2, 14, 3, 1),
(5798, 29, 2, 14, 3, 2),
(5799, 400, 2, 14, 3, 3),
(5800, 532, 2, 14, 2, 1),
(5801, 1590, 2, 14, 2, 1),
(5802, 45, 2, 14, 2, 2),
(5803, 3491, 2, 14, 2, 1),
(5804, 3492, 2, 14, 2, 2),
(5805, 1385, 2, 14, 2, 1),
(5806, 61, 2, 14, 2, 1),
(5807, 435, 2, 14, 2, 2),
(5808, 65, 2, 14, 2, 0),
(5809, 52, 2, 14, 2, 1),
(5810, 2805, 2, 14, 2, 2),
(5811, 362, 2, 14, 2, 1),
(5812, 3493, 2, 14, 2, 1),
(5813, 3494, 2, 14, 2, 1),
(5814, 3495, 2, 14, 2, 1),
(5815, 25, 2, 14, 2, 0),
(5816, 604, 2, 14, 2, 2),
(5817, 18, 2, 14, 2, 1),
(5818, 2557, 2, 14, 2, 2),
(5819, 1718, 2, 14, 2, 3),
(5820, 1468, 2, 14, 2, 1),
(5821, 888, 2, 14, 2, 3),
(5822, 1444, 2, 14, 2, 0),
(5823, 534, 2, 14, 2, 1),
(5824, 99, 2, 14, 2, 2),
(5825, 153, 2, 14, 2, 1),
(5826, 44, 2, 14, 2, 3),
(5827, 3496, 2, 14, 2, 2),
(5828, 3497, 2, 14, 2, 2),
(5829, 331, 2, 14, 2, 2),
(5830, 1922, 2, 14, 2, 1),
(5831, 396, 2, 14, 2, 1),
(5832, 3498, 2, 14, 2, 1),
(5833, 330, 2, 14, 2, 2),
(5834, 381, 2, 14, 2, 3),
(5835, 1897, 2, 14, 2, 3),
(5836, 1686, 2, 14, 2, 0),
(5837, 3499, 2, 14, 2, 3),
(5838, 196, 2, 14, 2, 2),
(5839, 1396, 2, 14, 2, 3),
(5840, 182, 2, 14, 2, 2),
(5841, 266, 2, 14, 2, 0),
(5842, 2181, 2, 14, 2, 3),
(5843, 3500, 2, 14, 2, 2),
(5844, 332, 2, 14, 2, 3),
(5845, 1464, 2, 14, 2, 3),
(5846, 416, 2, 14, 2, 3),
(5847, 3501, 2, 14, 2, 3),
(5848, 944, 2, 14, 1, 1),
(5849, 3502, 2, 14, 1, 1),
(5850, 3503, 2, 14, 1, 3),
(5851, 2080, 2, 14, 1, 2),
(5852, 883, 2, 14, 1, 1),
(5853, 3504, 2, 14, 1, 1),
(5854, 95, 2, 14, 1, 3),
(5855, 3505, 2, 14, 1, 1),
(5856, 449, 2, 14, 1, 3),
(5857, 3506, 2, 14, 1, 2),
(5858, 105, 2, 14, 1, 3),
(5859, 1884, 2, 14, 1, 3),
(5860, 3433, 2, 14, 1, 2),
(5861, 684, 2, 14, 1, 2),
(5862, 64, 2, 14, 1, 3),
(5863, 154, 2, 14, 1, 0),
(5864, 1220, 2, 14, 1, 1),
(5865, 2268, 2, 14, 1, 3),
(5866, 1334, 2, 14, 1, 2),
(5867, 753, 2, 14, 1, 1),
(5868, 996, 2, 14, 1, 1),
(5869, 3507, 2, 14, 1, 3),
(5870, 19, 2, 14, 1, 3),
(5871, 1104, 2, 14, 1, 2),
(5872, 1574, 2, 14, 1, 3),
(5873, 24, 2, 14, 1, 2),
(5874, 1007, 2, 14, 1, 3),
(5875, 3508, 2, 14, 1, 2),
(5876, 1010, 2, 14, 1, 2),
(5877, 184, 2, 14, 1, 1),
(5878, 3509, 2, 14, 1, 1),
(5879, 698, 2, 14, 1, 1),
(5880, 464, 2, 14, 1, 3),
(5881, 3510, 2, 14, 1, 3),
(5882, 2322, 2, 14, 1, 3),
(5883, 2078, 2, 14, 1, 2),
(5884, 3511, 2, 14, 1, 1),
(5885, 312, 2, 14, 1, 3),
(5886, 3512, 2, 14, 1, 2),
(5887, 1107, 2, 14, 1, 1),
(5888, 119, 2, 14, 1, 1),
(5889, 3513, 2, 14, 1, 3),
(5890, 3514, 2, 14, 1, 3),
(5891, 3515, 2, 14, 1, 1),
(5892, 425, 2, 14, 1, 3),
(5893, 1803, 2, 14, 1, 2),
(5894, 486, 2, 14, 1, 1),
(5895, 3516, 2, 14, 1, 2),
(5896, 308, 2, 14, 1, 3),
(5897, 882, 2, 14, 1, 0),
(5898, 422, 2, 14, 1, 1),
(5899, 333, 2, 14, 1, 0),
(5900, 320, 2, 14, 1, 1),
(5901, 589, 2, 14, 1, 1),
(5902, 1282, 2, 14, 1, 2),
(5903, 1037, 2, 14, 1, 2),
(5904, 3517, 2, 14, 1, 1),
(5905, 50, 2, 14, 1, 3),
(5906, 168, 2, 14, 1, 0),
(5907, 765, 2, 14, 1, 3),
(5908, 42, 2, 14, 1, 1),
(5909, 2096, 2, 14, 1, 2),
(5910, 3518, 2, 14, 1, 1),
(5911, 2551, 2, 14, 1, 3),
(5912, 1181, 2, 14, 1, 2),
(5913, 278, 2, 14, 1, 1),
(5914, 1847, 2, 14, 1, 1),
(5915, 1249, 2, 14, 1, 3),
(5916, 1111, 2, 14, 1, 1),
(5917, 3519, 2, 14, 1, 3),
(5918, 1052, 2, 14, 1, 2),
(5919, 3520, 2, 14, 1, 3),
(5920, 3521, 2, 14, 1, 1),
(5921, 59, 2, 14, 1, 3),
(5922, 390, 2, 14, 1, 0),
(5923, 742, 2, 14, 1, 3),
(5924, 3522, 2, 14, 1, 1),
(5925, 1331, 2, 14, 1, 2),
(5926, 3523, 2, 14, 1, 3),
(5927, 3524, 2, 14, 1, 2),
(5928, 527, 2, 14, 1, 1),
(5929, 3525, 2, 14, 1, 1),
(5930, 692, 2, 14, 1, 0),
(5931, 1961, 2, 14, 1, 2),
(5932, 3526, 2, 14, 1, 1),
(5933, 1450, 2, 14, 1, 1),
(5934, 1531, 2, 14, 1, 2),
(5935, 487, 2, 14, 1, 0),
(5936, 2320, 2, 14, 1, 1),
(5937, 3527, 2, 14, 1, 3),
(5938, 225, 2, 14, 1, 1),
(5939, 3528, 2, 14, 1, 1),
(5940, 262, 2, 14, 1, 1),
(5941, 3529, 2, 14, 1, 1),
(5942, 310, 2, 14, 1, 2),
(5943, 1498, 2, 14, 1, 2),
(5944, 569, 2, 14, 1, 2),
(5945, 3530, 2, 14, 1, 2),
(5946, 2842, 2, 14, 1, 3),
(5947, 2817, 2, 14, 1, 3),
(5948, 3531, 2, 14, 1, 2),
(5949, 528, 2, 14, 1, 1),
(5950, 202, 2, 14, 1, 0),
(5951, 3532, 2, 14, 1, 1),
(5952, 328, 2, 14, 1, 2),
(5953, 1570, 2, 14, 1, 1),
(5954, 1097, 2, 14, 1, 0),
(5955, 3533, 2, 14, 1, 1),
(5956, 34, 2, 14, 1, 0),
(5957, 118, 2, 14, 1, 3),
(5958, 3534, 2, 14, 1, 1),
(5959, 3535, 2, 14, 1, 1),
(5960, 3536, 2, 14, 1, 1),
(5961, 3537, 2, 14, 1, 3),
(5962, 3538, 2, 14, 1, 3),
(5963, 3539, 2, 14, 1, 1),
(5964, 3540, 2, 14, 1, 3),
(5965, 3541, 2, 14, 1, 1),
(5966, 1951, 2, 14, 1, 1),
(5967, 3542, 2, 14, 1, 3),
(5968, 3543, 2, 14, 1, 1),
(5969, 2179, 2, 14, 1, 1),
(5970, 3544, 2, 14, 1, 3),
(5971, 3545, 2, 14, 1, 3),
(5972, 1259, 2, 14, 1, 2),
(5973, 234, 2, 14, 1, 3),
(5974, 832, 2, 14, 1, 3),
(5975, 747, 2, 14, 1, 2),
(5976, 3196, 2, 14, 1, 3),
(5977, 3478, 2, 14, 1, 2),
(5978, 3546, 2, 14, 1, 2),
(5979, 318, 2, 14, 1, 2),
(5980, 1232, 2, 14, 1, 1),
(5981, 3547, 2, 14, 1, 1),
(5982, 1471, 2, 14, 1, 3),
(5983, 172, 2, 14, 1, 1),
(5984, 3548, 2, 14, 1, 3),
(5985, 79, 2, 14, 1, 0),
(5986, 2017, 2, 14, 1, 3),
(5987, 1435, 2, 14, 1, 2),
(5988, 3549, 2, 14, 1, 1),
(5989, 3550, 2, 14, 1, 1),
(5990, 3461, 2, 14, 1, 2),
(5991, 3551, 2, 14, 1, 1),
(5992, 1518, 2, 14, 1, 2),
(5993, 3552, 2, 14, 1, 2),
(5994, 3391, 2, 14, 1, 2),
(5995, 3553, 2, 14, 1, 1),
(5996, 39, 2, 14, 1, 3),
(5997, 2598, 2, 14, 1, 3),
(5998, 578, 2, 14, 1, 1),
(5999, 1680, 2, 14, 1, 3),
(6000, 1241, 2, 14, 1, 3),
(6001, 2645, 2, 14, 1, 1),
(6002, 207, 2, 14, 1, 3),
(6003, 1112, 2, 14, 1, 1),
(6004, 74, 2, 14, 1, 0),
(6005, 3554, 2, 14, 1, 2),
(6006, 3555, 2, 14, 1, 1),
(6007, 3556, 2, 14, 1, 1),
(6008, 47, 2, 14, 1, 3),
(6009, 3557, 2, 14, 1, 3),
(6010, 746, 2, 14, 1, 3),
(6011, 3558, 2, 14, 1, 3),
(6012, 1738, 2, 14, 1, 3),
(6013, 3559, 2, 14, 1, 2),
(6014, 3560, 2, 14, 1, 1),
(6015, 452, 2, 14, 1, 1),
(6016, 3561, 2, 14, 1, 3),
(6017, 51, 2, 14, 1, 3),
(6018, 3562, 2, 14, 1, 3),
(6019, 3563, 2, 14, 1, 2),
(6020, 3564, 2, 14, 1, 3),
(6021, 3565, 2, 14, 1, 2),
(6022, 1545, 2, 14, 1, 3),
(6023, 3566, 2, 14, 1, 2),
(6024, 215, 2, 14, 1, 0),
(6025, 493, 2, 14, 1, 3),
(6026, 1338, 2, 14, 1, 3),
(6027, 3567, 2, 14, 1, 2),
(6028, 3403, 2, 14, 1, 1),
(6029, 2441, 2, 14, 1, 1),
(6030, 197, 2, 14, 1, 1),
(6031, 3568, 2, 14, 1, 1),
(6032, 2803, 2, 14, 1, 3),
(6033, 102, 2, 14, 1, 2),
(6034, 3569, 2, 14, 1, 3),
(6035, 114, 2, 14, 1, 2),
(6036, 3570, 2, 14, 1, 1),
(6037, 3571, 2, 14, 1, 3),
(6038, 3572, 2, 14, 1, 2),
(6039, 3573, 2, 14, 1, 2),
(6040, 33, 2, 14, 1, 3),
(6041, 3574, 2, 14, 1, 2),
(6042, 3575, 2, 14, 1, 3),
(6043, 3188, 2, 14, 1, 3),
(6044, 3576, 2, 14, 1, 1),
(6045, 117, 2, 14, 1, 1),
(6046, 544, 2, 14, 1, 1),
(6047, 3437, 2, 14, 1, 3),
(6048, 3577, 2, 14, 1, 0),
(6049, 395, 2, 14, 1, 2),
(6050, 3255, 2, 14, 1, 3),
(6051, 176, 2, 14, 1, 3),
(6052, 3578, 2, 14, 1, 1),
(6053, 1210, 2, 14, 1, 1),
(6054, 46, 2, 14, 1, 1),
(6055, 1601, 2, 14, 1, 3),
(6056, 35, 2, 14, 1, 1),
(6057, 3579, 2, 14, 1, 1),
(6058, 101, 2, 14, 1, 2),
(6059, 3580, 2, 14, 1, 3),
(6060, 1912, 2, 14, 1, 2),
(6061, 3581, 2, 14, 1, 3),
(6062, 41, 2, 14, 1, 0),
(6063, 191, 2, 14, 1, 2),
(6064, 3582, 2, 14, 1, 1),
(6065, 1273, 2, 14, 1, 3),
(6066, 458, 2, 14, 1, 2),
(6067, 3026, 2, 14, 1, 1),
(6068, 1355, 2, 14, 1, 2),
(6069, 3583, 2, 14, 1, 1),
(6070, 3584, 2, 14, 1, 3),
(6071, 3006, 2, 14, 1, 0),
(6072, 3585, 2, 14, 1, 2),
(6073, 2056, 2, 14, 1, 3),
(6074, 1017, 2, 14, 1, 3),
(6075, 679, 2, 14, 1, 2),
(6076, 3586, 2, 14, 1, 3),
(6077, 2767, 2, 14, 1, 1),
(6078, 3587, 2, 14, 1, 1),
(6079, 3588, 2, 14, 1, 3),
(6080, 3589, 2, 14, 1, 3),
(6081, 1886, 2, 14, 1, 1),
(6082, 177, 2, 14, 1, 3),
(6083, 2366, 2, 14, 1, 3),
(6084, 3387, 2, 14, 1, 1),
(6085, 3590, 2, 14, 1, 2),
(6086, 1329, 2, 14, 1, 3),
(6087, 3591, 2, 14, 1, 3),
(6088, 1102, 2, 14, 1, 1),
(6089, 3592, 2, 14, 1, 1),
(6090, 82, 2, 14, 1, 2),
(6091, 3593, 2, 14, 1, 1),
(6092, 1603, 2, 14, 1, 1),
(6093, 68, 2, 14, 1, 3),
(6094, 3, 2, 15, 4, 0),
(6095, 7, 2, 15, 3, 0),
(6096, 883, 2, 15, 3, 1),
(6097, 3594, 2, 15, 2, 1),
(6098, 3391, 2, 15, 2, 2),
(6099, 153, 2, 15, 2, 1),
(6100, 9, 2, 15, 1, 2),
(6101, 3595, 2, 15, 1, 3),
(6102, 2645, 2, 15, 1, 1),
(6103, 592, 2, 15, 1, 3),
(6104, 1388, 2, 15, 1, 3),
(6105, 505, 2, 15, 1, 1),
(6106, 3596, 2, 15, 1, 2),
(6107, 29, 2, 15, 1, 2),
(6108, 3597, 2, 15, 1, 3),
(6109, 3598, 2, 15, 1, 3),
(6110, 3599, 2, 15, 1, 2),
(6111, 266, 2, 15, 1, 0),
(6112, 1921, 2, 15, 1, 1),
(6113, 783, 2, 15, 1, 3),
(6114, 3600, 2, 15, 1, 3),
(6115, 1601, 2, 15, 1, 3),
(6116, 917, 2, 15, 1, 3),
(6117, 31, 2, 15, 1, 0),
(6118, 3601, 2, 15, 1, 1),
(6119, 1419, 2, 15, 1, 0),
(6120, 3602, 2, 15, 1, 1),
(6121, 19, 2, 15, 1, 3),
(6122, 3249, 2, 15, 1, 1),
(6123, 3196, 2, 15, 1, 3),
(6124, 3603, 2, 15, 1, 3),
(6125, 844, 2, 15, 1, 0),
(6126, 12, 2, 15, 1, 1),
(6127, 3604, 2, 15, 1, 3),
(6128, 3605, 2, 15, 1, 3),
(6129, 2808, 2, 15, 1, 3),
(6130, 1961, 2, 15, 1, 2),
(6131, 3606, 2, 15, 1, 1),
(6132, 76, 2, 15, 1, 1),
(6133, 51, 2, 15, 1, 3),
(6134, 1238, 2, 15, 1, 2),
(6135, 789, 2, 15, 1, 3),
(6136, 192, 2, 15, 1, 3),
(6137, 3607, 2, 15, 1, 2),
(6138, 99, 2, 15, 1, 2),
(6139, 56, 2, 15, 1, 1),
(6140, 18, 2, 15, 1, 1),
(6141, 3608, 2, 15, 1, 1),
(6142, 3609, 2, 15, 1, 1),
(6143, 423, 2, 15, 1, 3),
(6144, 1, 2, 15, 1, 0),
(6145, 1717, 2, 15, 1, 2),
(6146, 65, 2, 15, 1, 0),
(6147, 271, 2, 16, 24, 1),
(6148, 3, 2, 16, 19, 0),
(6149, 1229, 2, 16, 14, 3),
(6150, 1, 2, 16, 10, 0),
(6151, 2173, 2, 16, 8, 1),
(6152, 3610, 2, 16, 8, 1),
(6153, 870, 2, 16, 8, 1),
(6154, 12, 2, 16, 8, 1),
(6155, 144, 2, 16, 7, 1),
(6156, 106, 2, 16, 6, 3),
(6157, 3249, 2, 16, 6, 1),
(6158, 76, 2, 16, 6, 1),
(6159, 11, 2, 16, 6, 1),
(6160, 2350, 2, 16, 6, 1),
(6161, 2330, 2, 16, 6, 3),
(6162, 3611, 2, 16, 6, 1),
(6163, 119, 2, 16, 6, 1),
(6164, 3612, 2, 16, 6, 3),
(6165, 35, 2, 16, 5, 1),
(6166, 17, 2, 16, 5, 1),
(6167, 892, 2, 16, 4, 1),
(6168, 1010, 2, 16, 4, 2),
(6169, 61, 2, 16, 4, 1),
(6170, 184, 2, 16, 4, 1),
(6171, 883, 2, 16, 4, 1),
(6172, 16, 2, 16, 4, 0),
(6173, 801, 2, 16, 4, 3),
(6174, 2143, 2, 16, 4, 3),
(6175, 3594, 2, 16, 4, 1),
(6176, 249, 2, 16, 4, 1),
(6177, 7, 2, 16, 4, 0),
(6178, 145, 2, 16, 4, 1),
(6179, 932, 2, 16, 4, 3),
(6180, 14, 2, 16, 4, 2),
(6181, 55, 2, 16, 4, 1),
(6182, 3613, 2, 16, 4, 1),
(6183, 1705, 2, 16, 3, 1),
(6184, 1097, 2, 16, 3, 0),
(6185, 1849, 2, 16, 3, 3),
(6186, 4, 2, 16, 3, 0),
(6187, 3614, 2, 16, 3, 1),
(6188, 3615, 2, 16, 3, 3),
(6189, 29, 2, 16, 3, 2),
(6190, 3616, 2, 16, 3, 1),
(6191, 2174, 2, 16, 3, 3),
(6192, 9, 2, 16, 3, 2),
(6193, 310, 2, 16, 3, 2),
(6194, 3617, 2, 16, 3, 3),
(6195, 28, 2, 16, 3, 0),
(6196, 3618, 2, 16, 3, 1),
(6197, 24, 2, 16, 3, 2),
(6198, 5, 2, 16, 3, 0),
(6199, 45, 2, 16, 3, 2),
(6200, 3619, 2, 16, 3, 1),
(6201, 1222, 2, 16, 3, 3),
(6202, 425, 2, 16, 3, 3),
(6203, 1007, 2, 16, 2, 3),
(6204, 3620, 2, 16, 2, 1),
(6205, 133, 2, 16, 2, 1),
(6206, 2909, 2, 16, 2, 1),
(6207, 3621, 2, 16, 2, 1),
(6208, 2980, 2, 16, 2, 3),
(6209, 3622, 2, 16, 2, 1),
(6210, 1027, 2, 16, 2, 3),
(6211, 152, 2, 16, 2, 3),
(6212, 244, 2, 16, 2, 3),
(6213, 3623, 2, 16, 2, 1),
(6214, 3624, 2, 16, 2, 1),
(6215, 1453, 2, 16, 2, 1),
(6216, 196, 2, 16, 2, 2),
(6217, 30, 2, 16, 2, 2),
(6218, 3625, 2, 16, 2, 1),
(6219, 3626, 2, 16, 2, 1),
(6220, 153, 2, 16, 2, 1),
(6221, 918, 2, 16, 2, 1),
(6222, 52, 2, 16, 2, 1),
(6223, 2307, 2, 16, 2, 1),
(6224, 205, 2, 16, 2, 3),
(6225, 195, 2, 16, 2, 0),
(6226, 3627, 2, 16, 2, 1),
(6227, 105, 2, 16, 2, 3),
(6228, 361, 2, 16, 2, 1),
(6229, 3628, 2, 16, 2, 1),
(6230, 893, 2, 16, 2, 1),
(6231, 3629, 2, 16, 2, 1),
(6232, 3630, 2, 16, 2, 1),
(6233, 1217, 2, 16, 2, 3),
(6234, 22, 2, 16, 2, 0),
(6235, 15, 2, 16, 2, 0),
(6236, 189, 2, 16, 2, 0),
(6237, 330, 2, 16, 2, 2),
(6238, 79, 2, 16, 2, 0),
(6239, 3631, 2, 16, 2, 1),
(6240, 202, 2, 16, 2, 0),
(6241, 1896, 2, 16, 2, 2),
(6242, 2398, 2, 16, 2, 3),
(6243, 1348, 2, 16, 2, 2),
(6244, 25, 2, 16, 2, 0),
(6245, 280, 2, 16, 2, 0),
(6246, 3632, 2, 16, 2, 1),
(6247, 1738, 2, 16, 2, 3),
(6248, 3633, 2, 16, 2, 1),
(6249, 1419, 2, 16, 2, 0),
(6250, 1190, 2, 16, 2, 2),
(6251, 3634, 2, 16, 2, 2),
(6252, 1002, 2, 16, 2, 1),
(6253, 2, 2, 16, 2, 0),
(6254, 65, 2, 16, 2, 0),
(6255, 1176, 2, 16, 2, 1),
(6256, 36, 2, 16, 2, 1),
(6257, 3635, 2, 16, 2, 3),
(6258, 1305, 2, 16, 1, 3),
(6259, 3636, 2, 16, 1, 1),
(6260, 3637, 2, 16, 1, 1),
(6261, 2025, 2, 16, 1, 2),
(6262, 3638, 2, 16, 1, 1),
(6263, 3639, 2, 16, 1, 1),
(6264, 3640, 2, 16, 1, 1),
(6265, 3641, 2, 16, 1, 1),
(6266, 608, 2, 16, 1, 1),
(6267, 1362, 2, 16, 1, 2),
(6268, 41, 2, 16, 1, 0),
(6269, 536, 2, 16, 1, 1),
(6270, 3642, 2, 16, 1, 1),
(6271, 401, 2, 16, 1, 1),
(6272, 1990, 2, 16, 1, 3),
(6273, 1973, 2, 16, 1, 3),
(6274, 3643, 2, 16, 1, 1),
(6275, 2154, 2, 16, 1, 3),
(6276, 3644, 2, 16, 1, 1),
(6277, 3645, 2, 16, 1, 1),
(6278, 2152, 2, 16, 1, 2),
(6279, 486, 2, 16, 1, 1),
(6280, 3646, 2, 16, 1, 3),
(6281, 2858, 2, 16, 1, 1),
(6282, 3647, 2, 16, 1, 1),
(6283, 2319, 2, 16, 1, 1),
(6284, 1382, 2, 16, 1, 1),
(6285, 1214, 2, 16, 1, 3),
(6286, 2004, 2, 16, 1, 1),
(6287, 356, 2, 16, 1, 1),
(6288, 452, 2, 16, 1, 1),
(6289, 1202, 2, 16, 1, 3),
(6290, 3648, 2, 16, 1, 1),
(6291, 1303, 2, 16, 1, 1),
(6292, 327, 2, 16, 1, 1),
(6293, 3649, 2, 16, 1, 1),
(6294, 3650, 2, 16, 1, 1),
(6295, 3651, 2, 16, 1, 3),
(6296, 3652, 2, 16, 1, 1),
(6297, 3653, 2, 16, 1, 1),
(6298, 3654, 2, 16, 1, 1),
(6299, 3655, 2, 16, 1, 1),
(6300, 3656, 2, 16, 1, 1),
(6301, 3657, 2, 16, 1, 1),
(6302, 1003, 2, 16, 1, 1),
(6303, 34, 2, 16, 1, 0),
(6304, 90, 2, 16, 1, 1),
(6305, 3658, 2, 16, 1, 1),
(6306, 112, 2, 16, 1, 3),
(6307, 3659, 2, 16, 1, 1),
(6308, 3379, 2, 16, 1, 1),
(6309, 207, 2, 16, 1, 3),
(6310, 192, 2, 16, 1, 3),
(6311, 3660, 2, 16, 1, 3),
(6312, 3661, 2, 16, 1, 1),
(6313, 3662, 2, 16, 1, 1),
(6314, 3663, 2, 16, 1, 1),
(6315, 58, 2, 16, 1, 3),
(6316, 37, 2, 16, 1, 3),
(6317, 907, 2, 16, 1, 2),
(6318, 3664, 2, 16, 1, 1),
(6319, 364, 2, 16, 1, 3),
(6320, 1023, 2, 16, 1, 1),
(6321, 3665, 2, 16, 1, 3),
(6322, 1846, 2, 16, 1, 1),
(6323, 3666, 2, 16, 1, 3),
(6324, 3667, 2, 16, 1, 1),
(6325, 3668, 2, 16, 1, 1),
(6326, 1278, 2, 16, 1, 3),
(6327, 2937, 2, 16, 1, 1),
(6328, 592, 2, 16, 1, 3),
(6329, 477, 2, 16, 1, 3),
(6330, 888, 2, 16, 1, 3),
(6331, 3669, 2, 16, 1, 3),
(6332, 652, 2, 16, 1, 3),
(6333, 1876, 2, 16, 1, 1),
(6334, 214, 2, 16, 1, 3),
(6335, 686, 2, 16, 1, 2),
(6336, 1897, 2, 16, 1, 3),
(6337, 534, 2, 16, 1, 1),
(6338, 400, 2, 16, 1, 3),
(6339, 3670, 2, 16, 1, 1),
(6340, 3671, 2, 16, 1, 1),
(6341, 3672, 2, 16, 1, 1),
(6342, 3673, 2, 16, 1, 1),
(6343, 3674, 2, 16, 1, 1),
(6344, 3328, 2, 16, 1, 1),
(6345, 3675, 2, 16, 1, 1),
(6346, 3676, 2, 16, 1, 1),
(6347, 3677, 2, 16, 1, 1),
(6348, 3678, 2, 16, 1, 1),
(6349, 3679, 2, 16, 1, 1),
(6350, 3680, 2, 16, 1, 3),
(6351, 3681, 2, 16, 1, 1),
(6352, 1034, 2, 16, 1, 2),
(6353, 3682, 2, 16, 1, 1),
(6354, 2904, 2, 16, 1, 1),
(6355, 3683, 2, 16, 1, 1),
(6356, 1796, 2, 16, 1, 3),
(6357, 3684, 2, 16, 1, 1),
(6358, 3685, 2, 16, 1, 1),
(6359, 274, 2, 16, 1, 1),
(6360, 181, 2, 16, 1, 3),
(6361, 3686, 2, 16, 1, 1);
INSERT INTO `indices` (`id`, `word_id`, `table_id`, `table_index`, `rating_reps`, `weight`) VALUES
(6362, 3687, 2, 16, 1, 3),
(6363, 3688, 2, 16, 1, 1),
(6364, 3689, 2, 16, 1, 1),
(6365, 572, 2, 16, 1, 3),
(6366, 3690, 2, 16, 1, 1),
(6367, 3691, 2, 16, 1, 1),
(6368, 3692, 2, 16, 1, 1),
(6369, 3693, 2, 16, 1, 1),
(6370, 3694, 2, 16, 1, 1),
(6371, 3695, 2, 16, 1, 1),
(6372, 3696, 2, 16, 1, 1),
(6373, 3697, 2, 16, 1, 1),
(6374, 3698, 2, 16, 1, 1),
(6375, 3699, 2, 16, 1, 1),
(6376, 2138, 2, 16, 1, 1),
(6377, 3700, 2, 16, 1, 1),
(6378, 3701, 2, 16, 1, 1),
(6379, 3702, 2, 16, 1, 1),
(6380, 3703, 2, 16, 1, 1),
(6381, 3704, 2, 16, 1, 1),
(6382, 3705, 2, 16, 1, 1),
(6383, 2437, 2, 16, 1, 1),
(6384, 2199, 2, 16, 1, 0),
(6385, 19, 2, 16, 1, 3),
(6386, 3556, 2, 16, 1, 1),
(6387, 1686, 2, 16, 1, 0),
(6388, 1803, 2, 16, 1, 2),
(6389, 3706, 2, 16, 1, 2),
(6390, 3707, 2, 16, 1, 2),
(6391, 3708, 2, 16, 1, 2),
(6392, 3709, 2, 16, 1, 1),
(6393, 1601, 2, 16, 1, 3),
(6394, 121, 2, 16, 1, 2),
(6395, 115, 2, 16, 1, 3),
(6396, 2113, 2, 16, 1, 2),
(6397, 21, 2, 16, 1, 0),
(6398, 1592, 2, 16, 1, 2),
(6399, 3710, 2, 16, 1, 1),
(6400, 844, 2, 16, 1, 0),
(6401, 62, 2, 16, 1, 1),
(6402, 1674, 2, 16, 1, 3),
(6403, 2883, 2, 16, 1, 2),
(6404, 114, 2, 16, 1, 2),
(6405, 3711, 2, 16, 1, 1),
(6406, 3712, 2, 16, 1, 3),
(6407, 3713, 2, 16, 1, 1),
(6408, 2371, 2, 16, 1, 3),
(6409, 56, 2, 16, 1, 1),
(6410, 3714, 2, 16, 1, 3),
(6411, 146, 2, 16, 1, 1),
(6412, 788, 2, 16, 1, 1),
(6413, 871, 2, 16, 1, 1),
(6414, 39, 2, 16, 1, 3),
(6415, 416, 2, 16, 1, 3),
(6416, 3114, 2, 16, 1, 1),
(6417, 124, 2, 16, 1, 2),
(6418, 3715, 2, 16, 1, 1),
(6419, 3716, 2, 16, 1, 2),
(6420, 2529, 2, 16, 1, 3),
(6421, 198, 2, 16, 1, 3),
(6422, 172, 2, 16, 1, 1),
(6423, 2107, 2, 16, 1, 2),
(6424, 3717, 2, 16, 1, 2),
(6425, 3718, 2, 16, 1, 2),
(6426, 805, 2, 16, 1, 1),
(6427, 3719, 2, 16, 1, 1),
(6428, 3720, 2, 16, 1, 1),
(6429, 594, 2, 16, 1, 3),
(6430, 479, 2, 16, 1, 1),
(6431, 3721, 2, 16, 1, 1),
(6432, 182, 2, 16, 1, 2),
(6433, 1548, 2, 16, 1, 3),
(6434, 3722, 2, 16, 1, 1),
(6435, 3723, 2, 16, 1, 1),
(6436, 3724, 2, 16, 1, 1),
(6437, 3725, 2, 16, 1, 1),
(6438, 3726, 2, 16, 1, 1),
(6439, 3727, 2, 16, 1, 1),
(6440, 3728, 2, 16, 1, 1),
(6441, 923, 2, 16, 1, 3),
(6442, 3729, 2, 16, 1, 3),
(6443, 3730, 2, 16, 1, 1),
(6444, 3731, 2, 16, 1, 1),
(6445, 3732, 2, 16, 1, 1),
(6446, 1301, 2, 16, 1, 1),
(6447, 3733, 2, 16, 1, 1),
(6448, 3734, 2, 16, 1, 1),
(6449, 3735, 2, 16, 1, 1),
(6450, 6, 2, 16, 1, 0),
(6451, 3736, 2, 16, 1, 2),
(6452, 408, 2, 16, 1, 1),
(6453, 2660, 2, 16, 1, 3),
(6454, 3737, 2, 16, 1, 3),
(6455, 3738, 2, 16, 1, 1),
(6456, 3739, 2, 16, 1, 1),
(6457, 576, 2, 16, 1, 2),
(6458, 215, 2, 16, 1, 0),
(6459, 2695, 2, 16, 1, 2),
(6460, 77, 2, 16, 1, 1),
(6461, 44, 2, 16, 1, 3),
(6462, 3740, 2, 16, 1, 1),
(6463, 72, 2, 16, 1, 0),
(6464, 3741, 2, 16, 1, 2),
(6465, 3742, 2, 16, 1, 1),
(6466, 3743, 2, 16, 1, 1),
(6467, 3744, 2, 16, 1, 1),
(6468, 3745, 2, 16, 1, 1),
(6469, 70, 2, 16, 1, 1),
(6470, 3746, 2, 16, 1, 3),
(6471, 2796, 2, 17, 8, 3),
(6472, 1, 2, 17, 8, 0),
(6473, 3, 2, 17, 5, 0),
(6474, 3747, 2, 17, 4, 3),
(6475, 2010, 2, 17, 3, 2),
(6476, 14, 2, 17, 3, 2),
(6477, 3748, 2, 17, 3, 1),
(6478, 169, 2, 17, 3, 1),
(6479, 177, 2, 17, 3, 3),
(6480, 79, 2, 17, 3, 0),
(6481, 17, 2, 17, 3, 1),
(6482, 666, 2, 17, 2, 3),
(6483, 3749, 2, 17, 2, 1),
(6484, 274, 2, 17, 2, 1),
(6485, 174, 2, 17, 2, 1),
(6486, 58, 2, 17, 2, 3),
(6487, 3750, 2, 17, 2, 3),
(6488, 61, 2, 17, 2, 1),
(6489, 56, 2, 17, 2, 1),
(6490, 101, 2, 17, 2, 2),
(6491, 153, 2, 17, 2, 1),
(6492, 12, 2, 17, 2, 1),
(6493, 3751, 2, 17, 2, 3),
(6494, 170, 2, 17, 2, 1),
(6495, 1876, 2, 17, 2, 1),
(6496, 3752, 2, 17, 2, 1),
(6497, 5, 2, 17, 2, 0),
(6498, 4, 2, 17, 2, 0),
(6499, 47, 2, 17, 2, 3),
(6500, 3594, 2, 17, 2, 1),
(6501, 481, 2, 17, 2, 1),
(6502, 2164, 2, 17, 1, 3),
(6503, 3753, 2, 17, 1, 3),
(6504, 563, 2, 17, 1, 1),
(6505, 2945, 2, 17, 1, 3),
(6506, 3366, 2, 17, 1, 3),
(6507, 117, 2, 17, 1, 1),
(6508, 1931, 2, 17, 1, 2),
(6509, 178, 2, 17, 1, 1),
(6510, 450, 2, 17, 1, 1),
(6511, 2328, 2, 17, 1, 3),
(6512, 29, 2, 17, 1, 2),
(6513, 2401, 2, 17, 1, 2),
(6514, 46, 2, 17, 1, 1),
(6515, 3754, 2, 17, 1, 3),
(6516, 3741, 2, 17, 1, 2),
(6517, 55, 2, 17, 1, 1),
(6518, 3310, 2, 17, 1, 1),
(6519, 49, 2, 17, 1, 1),
(6520, 3755, 2, 17, 1, 1),
(6521, 3756, 2, 17, 1, 2),
(6522, 897, 2, 17, 1, 2),
(6523, 35, 2, 17, 1, 1),
(6524, 9, 2, 17, 1, 2),
(6525, 3757, 2, 17, 1, 1),
(6526, 34, 2, 17, 1, 0),
(6527, 3758, 2, 17, 1, 1),
(6528, 105, 2, 17, 1, 3),
(6529, 119, 2, 17, 1, 1),
(6530, 81, 2, 17, 1, 3),
(6531, 3759, 2, 17, 1, 3),
(6532, 3760, 2, 17, 1, 1),
(6533, 1221, 2, 17, 1, 3),
(6534, 367, 2, 17, 1, 1),
(6535, 215, 2, 17, 1, 0),
(6536, 3761, 2, 17, 1, 1),
(6537, 103, 2, 17, 1, 3),
(6538, 2669, 2, 17, 1, 2),
(6539, 1347, 2, 17, 1, 0),
(6540, 3762, 2, 17, 1, 1),
(6541, 188, 2, 17, 1, 2),
(6542, 3516, 2, 17, 1, 2),
(6543, 788, 2, 17, 1, 1),
(6544, 16, 2, 17, 1, 0),
(6545, 3763, 2, 17, 1, 1),
(6546, 3764, 2, 17, 1, 3),
(6547, 2645, 2, 17, 1, 1),
(6548, 2976, 2, 17, 1, 1),
(6549, 1507, 2, 17, 1, 1),
(6550, 77, 2, 17, 1, 1),
(6551, 831, 2, 17, 1, 1),
(6552, 1019, 2, 17, 1, 2),
(6553, 789, 2, 17, 1, 3),
(6554, 3629, 2, 17, 1, 1),
(6555, 3765, 2, 17, 1, 2),
(6556, 65, 2, 17, 1, 0),
(6557, 30, 2, 17, 1, 2),
(6558, 2134, 2, 17, 1, 2),
(6559, 1705, 2, 17, 1, 1),
(6560, 876, 2, 17, 1, 3),
(6561, 36, 2, 17, 1, 1),
(6562, 115, 2, 17, 1, 3),
(6563, 2406, 2, 17, 1, 1),
(6564, 90, 2, 17, 1, 1),
(6565, 793, 2, 17, 1, 1),
(6566, 154, 2, 17, 1, 0),
(6567, 2588, 2, 17, 1, 2),
(6568, 7, 2, 17, 1, 0),
(6569, 3766, 2, 17, 1, 2),
(6570, 1975, 2, 17, 1, 1),
(6571, 2550, 2, 17, 1, 1),
(6572, 8, 2, 17, 1, 3),
(6573, 511, 2, 17, 1, 2),
(6574, 118, 2, 17, 1, 3),
(6575, 205, 2, 17, 1, 3),
(6576, 3767, 2, 17, 1, 1),
(6577, 3768, 2, 17, 1, 1),
(6578, 3769, 2, 17, 1, 1),
(6579, 3770, 2, 17, 1, 1),
(6580, 3771, 2, 17, 1, 3),
(6581, 146, 2, 17, 1, 1),
(6582, 3772, 2, 17, 1, 1),
(6583, 3773, 2, 17, 1, 3),
(6584, 1419, 2, 17, 1, 0),
(6585, 999, 2, 17, 1, 3),
(6586, 15, 2, 17, 1, 0),
(6587, 3774, 2, 17, 1, 1),
(6588, 3775, 2, 17, 1, 1),
(6589, 3776, 2, 17, 1, 1),
(6590, 141, 2, 17, 1, 3),
(6591, 3777, 2, 17, 1, 1),
(6592, 3675, 2, 17, 1, 1),
(6593, 310, 2, 17, 1, 2),
(6594, 21, 2, 17, 1, 0),
(6595, 181, 2, 17, 1, 3),
(6596, 3778, 2, 17, 1, 1),
(6597, 3779, 2, 18, 9, 3),
(6598, 218, 2, 18, 9, 3),
(6599, 3, 2, 18, 8, 0),
(6600, 2, 2, 18, 7, 0),
(6601, 4, 2, 18, 7, 0),
(6602, 12, 2, 18, 7, 1),
(6603, 9, 2, 18, 7, 2),
(6604, 56, 2, 18, 6, 1),
(6605, 5, 2, 18, 6, 0),
(6606, 15, 2, 18, 6, 0),
(6607, 1, 2, 18, 6, 0),
(6608, 481, 2, 18, 5, 1),
(6609, 77, 2, 18, 5, 1),
(6610, 14, 2, 18, 5, 2),
(6611, 3780, 2, 18, 4, 3),
(6612, 3781, 2, 18, 4, 3),
(6613, 3782, 2, 18, 4, 3),
(6614, 76, 2, 18, 4, 1),
(6615, 3783, 2, 18, 4, 1),
(6616, 215, 2, 18, 3, 0),
(6617, 801, 2, 18, 3, 3),
(6618, 71, 2, 18, 3, 0),
(6619, 55, 2, 18, 3, 1),
(6620, 62, 2, 18, 3, 1),
(6621, 3784, 2, 18, 3, 1),
(6622, 61, 2, 18, 3, 1),
(6623, 1399, 2, 18, 3, 1),
(6624, 21, 2, 18, 3, 0),
(6625, 119, 2, 18, 3, 1),
(6626, 2070, 2, 18, 3, 1),
(6627, 144, 2, 18, 3, 1),
(6628, 101, 2, 18, 3, 2),
(6629, 30, 2, 18, 3, 2),
(6630, 2236, 2, 18, 3, 2),
(6631, 182, 2, 18, 3, 2),
(6632, 3785, 2, 18, 3, 1),
(6633, 274, 2, 18, 3, 1),
(6634, 1168, 2, 18, 2, 3),
(6635, 166, 2, 18, 2, 2),
(6636, 41, 2, 18, 2, 0),
(6637, 3786, 2, 18, 2, 1),
(6638, 153, 2, 18, 2, 1),
(6639, 47, 2, 18, 2, 3),
(6640, 3787, 2, 18, 2, 2),
(6641, 3788, 2, 18, 2, 3),
(6642, 2819, 2, 18, 2, 1),
(6643, 839, 2, 18, 2, 3),
(6644, 732, 2, 18, 2, 3),
(6645, 44, 2, 18, 2, 3),
(6646, 116, 2, 18, 2, 3),
(6647, 3789, 2, 18, 2, 2),
(6648, 1347, 2, 18, 2, 0),
(6649, 105, 2, 18, 2, 3),
(6650, 3516, 2, 18, 2, 2),
(6651, 17, 2, 18, 2, 1),
(6652, 3790, 2, 18, 2, 3),
(6653, 3791, 2, 18, 2, 1),
(6654, 3792, 2, 18, 2, 3),
(6655, 3793, 2, 18, 2, 3),
(6656, 1574, 2, 18, 2, 3),
(6657, 25, 2, 18, 2, 0),
(6658, 188, 2, 18, 2, 2),
(6659, 3794, 2, 18, 2, 3),
(6660, 16, 2, 18, 2, 0),
(6661, 193, 2, 18, 2, 1),
(6662, 3795, 2, 18, 2, 3),
(6663, 168, 2, 18, 2, 0),
(6664, 7, 2, 18, 2, 0),
(6665, 90, 2, 18, 2, 1),
(6666, 1010, 2, 18, 2, 2),
(6667, 22, 2, 18, 2, 0),
(6668, 502, 2, 18, 1, 1),
(6669, 3796, 2, 18, 1, 1),
(6670, 690, 2, 18, 1, 1),
(6671, 660, 2, 18, 1, 1),
(6672, 452, 2, 18, 1, 1),
(6673, 3797, 2, 18, 1, 3),
(6674, 3798, 2, 18, 1, 1),
(6675, 3799, 2, 18, 1, 1),
(6676, 3800, 2, 18, 1, 2),
(6677, 3801, 2, 18, 1, 1),
(6678, 1579, 2, 18, 1, 2),
(6679, 1201, 2, 18, 1, 2),
(6680, 35, 2, 18, 1, 1),
(6681, 393, 2, 18, 1, 1),
(6682, 565, 2, 18, 1, 1),
(6683, 28, 2, 18, 1, 0),
(6684, 3802, 2, 18, 1, 1),
(6685, 3803, 2, 18, 1, 3),
(6686, 91, 2, 18, 1, 1),
(6687, 88, 2, 18, 1, 1),
(6688, 3767, 2, 18, 1, 1),
(6689, 2068, 2, 18, 1, 1),
(6690, 3804, 2, 18, 1, 1),
(6691, 1742, 2, 18, 1, 1),
(6692, 1419, 2, 18, 1, 0),
(6693, 636, 2, 18, 1, 1),
(6694, 1453, 2, 18, 1, 1),
(6695, 1411, 2, 18, 1, 1),
(6696, 3805, 2, 18, 1, 2),
(6697, 472, 2, 18, 1, 2),
(6698, 1273, 2, 18, 1, 3),
(6699, 357, 2, 18, 1, 1),
(6700, 3806, 2, 18, 1, 1),
(6701, 386, 2, 18, 1, 1),
(6702, 3807, 2, 18, 1, 3),
(6703, 400, 2, 18, 1, 3),
(6704, 679, 2, 18, 1, 2),
(6705, 888, 2, 18, 1, 3),
(6706, 34, 2, 18, 1, 0),
(6707, 3808, 2, 18, 1, 3),
(6708, 8, 2, 18, 1, 3),
(6709, 3809, 2, 18, 1, 3),
(6710, 3810, 2, 18, 1, 1),
(6711, 984, 2, 18, 1, 2),
(6712, 3811, 2, 18, 1, 3),
(6713, 3812, 2, 18, 1, 1),
(6714, 3813, 2, 18, 1, 3),
(6715, 422, 2, 18, 1, 1),
(6716, 3814, 2, 18, 1, 1),
(6717, 844, 2, 18, 1, 0),
(6718, 907, 2, 18, 1, 2),
(6719, 3815, 2, 18, 1, 2),
(6720, 3816, 2, 18, 1, 3),
(6721, 686, 2, 18, 1, 2),
(6722, 3817, 2, 18, 1, 3),
(6723, 3818, 2, 18, 1, 3),
(6724, 79, 2, 18, 1, 0),
(6725, 115, 2, 18, 1, 3),
(6726, 74, 2, 18, 1, 0),
(6727, 1219, 2, 18, 1, 2),
(6728, 3819, 2, 18, 1, 2),
(6729, 3820, 2, 18, 1, 2),
(6730, 23, 2, 18, 1, 2),
(6731, 796, 2, 18, 1, 3),
(6732, 3596, 2, 18, 1, 2),
(6733, 2312, 2, 18, 1, 1),
(6734, 364, 2, 18, 1, 3),
(6735, 3821, 2, 18, 1, 3),
(6736, 6, 2, 18, 1, 0),
(6737, 2257, 2, 18, 1, 2),
(6738, 3023, 2, 18, 1, 3),
(6739, 3822, 2, 18, 1, 3),
(6740, 1982, 2, 18, 1, 1),
(6741, 20, 2, 18, 1, 0),
(6742, 2163, 2, 18, 1, 1),
(6743, 3113, 2, 18, 1, 2),
(6744, 195, 2, 18, 1, 0),
(6745, 3823, 2, 18, 1, 1),
(6746, 49, 2, 18, 1, 1),
(6747, 3824, 2, 18, 1, 1),
(6748, 1388, 2, 18, 1, 3),
(6749, 535, 2, 18, 1, 2),
(6750, 1743, 2, 18, 1, 2),
(6751, 280, 2, 18, 1, 0),
(6752, 804, 2, 18, 1, 3),
(6753, 45, 2, 18, 1, 2),
(6754, 773, 2, 18, 1, 1),
(6755, 3825, 2, 18, 1, 1),
(6756, 207, 2, 18, 1, 3),
(6757, 134, 2, 18, 1, 1),
(6758, 3826, 2, 18, 1, 1),
(6759, 1334, 2, 18, 1, 2),
(6760, 3827, 2, 18, 1, 3),
(6761, 72, 2, 18, 1, 0),
(6762, 3828, 2, 18, 1, 1),
(6763, 2542, 2, 18, 1, 2),
(6764, 3478, 2, 18, 1, 2),
(6765, 3829, 2, 18, 1, 1),
(6766, 3830, 2, 18, 1, 3),
(6767, 154, 2, 18, 1, 0),
(6768, 1705, 2, 18, 1, 1),
(6769, 3831, 2, 18, 1, 3),
(6770, 693, 2, 18, 1, 3),
(6771, 1509, 2, 18, 1, 3),
(6772, 3832, 2, 18, 1, 1),
(6773, 1303, 2, 18, 1, 1),
(6774, 51, 2, 18, 1, 3),
(6775, 1961, 2, 18, 1, 2),
(6776, 1214, 2, 18, 1, 3),
(6777, 3833, 2, 18, 1, 2),
(6778, 331, 2, 18, 1, 2),
(6779, 3834, 2, 18, 1, 3),
(6780, 222, 2, 18, 1, 1),
(6781, 3835, 2, 18, 1, 1),
(6782, 3836, 2, 18, 1, 3),
(6783, 185, 2, 18, 1, 3),
(6784, 458, 2, 18, 1, 2),
(6785, 190, 2, 18, 1, 1),
(6786, 117, 2, 18, 1, 1),
(6787, 1348, 2, 18, 1, 2),
(6788, 1370, 2, 18, 1, 2),
(6789, 3837, 2, 18, 1, 0),
(6790, 95, 2, 18, 1, 3),
(6791, 1402, 2, 18, 1, 1),
(6792, 840, 2, 18, 1, 3),
(6793, 220, 2, 18, 1, 0),
(6794, 3838, 2, 18, 1, 2),
(6795, 2035, 2, 18, 1, 2),
(6796, 1608, 2, 18, 1, 1),
(6797, 486, 2, 18, 1, 1),
(6798, 3839, 2, 18, 1, 2),
(6799, 3840, 2, 18, 1, 3),
(6800, 395, 2, 18, 1, 2),
(6801, 103, 2, 18, 1, 3),
(6802, 3841, 2, 18, 1, 1),
(6803, 167, 2, 18, 1, 1),
(6804, 1266, 2, 18, 1, 2),
(6805, 3842, 2, 18, 1, 1),
(6806, 3843, 2, 18, 1, 3),
(6807, 808, 2, 18, 1, 1),
(6808, 3844, 2, 18, 1, 3),
(6809, 29, 2, 18, 1, 2),
(6810, 3845, 2, 18, 1, 1),
(6811, 2904, 2, 18, 1, 1),
(6812, 882, 2, 18, 1, 0),
(6813, 519, 2, 18, 1, 0),
(6814, 3846, 2, 18, 1, 1),
(6815, 2118, 2, 18, 1, 1),
(6816, 403, 2, 18, 1, 2),
(6817, 18, 2, 18, 1, 1),
(6818, 1531, 2, 18, 1, 2),
(6819, 3847, 2, 18, 1, 3),
(6820, 3848, 2, 18, 1, 2),
(6821, 136, 2, 18, 1, 1),
(6822, 960, 2, 18, 1, 1),
(6823, 3849, 2, 18, 1, 3),
(6824, 783, 2, 18, 1, 3),
(6825, 3850, 2, 18, 1, 1),
(6826, 124, 2, 18, 1, 2),
(6827, 38, 2, 18, 1, 3),
(6828, 327, 2, 18, 1, 1),
(6829, 3851, 2, 18, 1, 2),
(6830, 3, 2, 19, 28, 0),
(6831, 17, 2, 19, 13, 1),
(6832, 7, 2, 19, 12, 0),
(6833, 271, 2, 19, 11, 1),
(6834, 61, 2, 19, 11, 1),
(6835, 1, 2, 19, 9, 0),
(6836, 144, 2, 19, 9, 1),
(6837, 76, 2, 19, 9, 1),
(6838, 431, 2, 19, 8, 3),
(6839, 3594, 2, 19, 8, 1),
(6840, 12, 2, 19, 8, 1),
(6841, 35, 2, 19, 8, 1),
(6842, 14, 2, 19, 7, 2),
(6843, 2350, 2, 19, 7, 1),
(6844, 119, 2, 19, 7, 1),
(6845, 2164, 2, 19, 7, 3),
(6846, 3852, 2, 19, 7, 1),
(6847, 883, 2, 19, 7, 1),
(6848, 44, 2, 19, 7, 3),
(6849, 9, 2, 19, 6, 2),
(6850, 5, 2, 19, 6, 0),
(6851, 3853, 2, 19, 6, 1),
(6852, 15, 2, 19, 6, 0),
(6853, 37, 2, 19, 5, 3),
(6854, 116, 2, 19, 5, 3),
(6855, 21, 2, 19, 5, 0),
(6856, 176, 2, 19, 5, 3),
(6857, 3854, 2, 19, 5, 1),
(6858, 106, 2, 19, 5, 3),
(6859, 77, 2, 19, 5, 1),
(6860, 892, 2, 19, 5, 1),
(6861, 30, 2, 19, 5, 2),
(6862, 690, 2, 19, 5, 1),
(6863, 3855, 2, 19, 5, 1),
(6864, 215, 2, 19, 5, 0),
(6865, 79, 2, 19, 4, 0),
(6866, 1876, 2, 19, 4, 1),
(6867, 400, 2, 19, 4, 3),
(6868, 20, 2, 19, 4, 0),
(6869, 6, 2, 19, 4, 0),
(6870, 3752, 2, 19, 4, 1),
(6871, 4, 2, 19, 4, 0),
(6872, 2307, 2, 19, 4, 1),
(6873, 3856, 2, 19, 4, 1),
(6874, 3724, 2, 19, 4, 1),
(6875, 1388, 2, 19, 4, 3),
(6876, 1705, 2, 19, 4, 1),
(6877, 3857, 2, 19, 3, 3),
(6878, 2937, 2, 19, 3, 1),
(6879, 29, 2, 19, 3, 2),
(6880, 907, 2, 19, 3, 2),
(6881, 68, 2, 19, 3, 3),
(6882, 3858, 2, 19, 3, 1),
(6883, 396, 2, 19, 3, 1),
(6884, 2245, 2, 19, 3, 3),
(6885, 870, 2, 19, 3, 1),
(6886, 33, 2, 19, 3, 3),
(6887, 364, 2, 19, 3, 3),
(6888, 3618, 2, 19, 3, 1),
(6889, 198, 2, 19, 3, 3),
(6890, 23, 2, 19, 3, 2),
(6891, 3859, 2, 19, 3, 1),
(6892, 133, 2, 19, 3, 1),
(6893, 25, 2, 19, 3, 0),
(6894, 3860, 2, 19, 3, 1),
(6895, 214, 2, 19, 3, 3),
(6896, 2173, 2, 19, 3, 1),
(6897, 345, 2, 19, 3, 3),
(6898, 660, 2, 19, 3, 1),
(6899, 22, 2, 19, 3, 0),
(6900, 2, 2, 19, 3, 0),
(6901, 18, 2, 19, 3, 1),
(6902, 58, 2, 19, 3, 3),
(6903, 101, 2, 19, 3, 2),
(6904, 3781, 2, 19, 3, 3),
(6905, 932, 2, 19, 3, 3),
(6906, 16, 2, 19, 3, 0),
(6907, 3861, 2, 19, 3, 1),
(6908, 3862, 2, 19, 3, 1),
(6909, 486, 2, 19, 3, 1),
(6910, 1846, 2, 19, 3, 1),
(6911, 46, 2, 19, 3, 1),
(6912, 34, 2, 19, 3, 0),
(6913, 1278, 2, 19, 3, 3),
(6914, 41, 2, 19, 3, 0),
(6915, 3863, 2, 19, 2, 1),
(6916, 3864, 2, 19, 2, 1),
(6917, 49, 2, 19, 2, 1),
(6918, 3865, 2, 19, 2, 1),
(6919, 47, 2, 19, 2, 3),
(6920, 3866, 2, 19, 2, 1),
(6921, 3867, 2, 19, 2, 1),
(6922, 247, 2, 19, 2, 2),
(6923, 884, 2, 19, 2, 3),
(6924, 3868, 2, 19, 2, 1),
(6925, 3869, 2, 19, 2, 1),
(6926, 87, 2, 19, 2, 3),
(6927, 3870, 2, 19, 2, 1),
(6928, 231, 2, 19, 2, 3),
(6929, 55, 2, 19, 2, 1),
(6930, 565, 2, 19, 2, 1),
(6931, 3871, 2, 19, 2, 1),
(6932, 3872, 2, 19, 2, 1),
(6933, 450, 2, 19, 2, 1),
(6934, 3873, 2, 19, 2, 3),
(6935, 1419, 2, 19, 2, 0),
(6936, 634, 2, 19, 2, 3),
(6937, 1339, 2, 19, 2, 1),
(6938, 179, 2, 19, 2, 2),
(6939, 592, 2, 19, 2, 3),
(6940, 2364, 2, 19, 2, 3),
(6941, 1718, 2, 19, 2, 3),
(6942, 3874, 2, 19, 2, 1),
(6943, 182, 2, 19, 2, 2),
(6944, 1019, 2, 19, 2, 2),
(6945, 3875, 2, 19, 2, 1),
(6946, 3876, 2, 19, 2, 1),
(6947, 493, 2, 19, 2, 3),
(6948, 416, 2, 19, 2, 3),
(6949, 310, 2, 19, 2, 2),
(6950, 153, 2, 19, 2, 1),
(6951, 3253, 2, 19, 2, 1),
(6952, 184, 2, 19, 2, 1),
(6953, 1222, 2, 19, 2, 3),
(6954, 3877, 2, 19, 2, 1),
(6955, 115, 2, 19, 2, 3),
(6956, 105, 2, 19, 2, 3),
(6957, 1564, 2, 19, 2, 0),
(6958, 1574, 2, 19, 2, 3),
(6959, 45, 2, 19, 2, 2),
(6960, 3878, 2, 19, 2, 3),
(6961, 65, 2, 19, 2, 0),
(6962, 74, 2, 19, 2, 0),
(6963, 92, 2, 19, 2, 3),
(6964, 56, 2, 19, 2, 1),
(6965, 2400, 2, 19, 2, 3),
(6966, 3113, 2, 19, 2, 2),
(6967, 191, 2, 19, 2, 2),
(6968, 146, 2, 19, 2, 1),
(6969, 88, 2, 19, 2, 1),
(6970, 679, 2, 19, 2, 2),
(6971, 1347, 2, 19, 2, 0),
(6972, 425, 2, 19, 2, 3),
(6973, 1238, 2, 19, 2, 2),
(6974, 1217, 2, 19, 2, 3),
(6975, 19, 2, 19, 2, 3),
(6976, 873, 2, 19, 2, 3),
(6977, 32, 2, 19, 2, 1),
(6978, 3879, 2, 19, 2, 2),
(6979, 70, 2, 19, 1, 1),
(6980, 3880, 2, 19, 1, 1),
(6981, 984, 2, 19, 1, 2),
(6982, 312, 2, 19, 1, 3),
(6983, 3881, 2, 19, 1, 3),
(6984, 494, 2, 19, 1, 1),
(6985, 436, 2, 19, 1, 0),
(6986, 627, 2, 19, 1, 3),
(6987, 3882, 2, 19, 1, 3),
(6988, 201, 2, 19, 1, 2),
(6989, 2433, 2, 19, 1, 3),
(6990, 3430, 2, 19, 1, 2),
(6991, 2318, 2, 19, 1, 3),
(6992, 3883, 2, 19, 1, 1),
(6993, 3884, 2, 19, 1, 1),
(6994, 3885, 2, 19, 1, 1),
(6995, 2435, 2, 19, 1, 3),
(6996, 3886, 2, 19, 1, 1),
(6997, 3887, 2, 19, 1, 1),
(6998, 2142, 2, 19, 1, 1),
(6999, 28, 2, 19, 1, 0),
(7000, 327, 2, 19, 1, 1),
(7001, 2136, 2, 19, 1, 3),
(7002, 3888, 2, 19, 1, 2),
(7003, 535, 2, 19, 1, 2),
(7004, 124, 2, 19, 1, 2),
(7005, 3889, 2, 19, 1, 1),
(7006, 3890, 2, 19, 1, 1),
(7007, 152, 2, 19, 1, 3),
(7008, 1975, 2, 19, 1, 1),
(7009, 378, 2, 19, 1, 0),
(7010, 200, 2, 19, 1, 2),
(7011, 3891, 2, 19, 1, 2),
(7012, 1618, 2, 19, 1, 3),
(7013, 3892, 2, 19, 1, 3),
(7014, 1338, 2, 19, 1, 3),
(7015, 3893, 2, 19, 1, 1),
(7016, 3665, 2, 19, 1, 3),
(7017, 1781, 2, 19, 1, 0),
(7018, 3825, 2, 19, 1, 1),
(7019, 2904, 2, 19, 1, 1),
(7020, 3894, 2, 19, 1, 1),
(7021, 3895, 2, 19, 1, 1),
(7022, 168, 2, 19, 1, 0),
(7023, 1002, 2, 19, 1, 1),
(7024, 3815, 2, 19, 1, 2),
(7025, 189, 2, 19, 1, 0),
(7026, 595, 2, 19, 1, 3),
(7027, 71, 2, 19, 1, 0),
(7028, 1010, 2, 19, 1, 2),
(7029, 401, 2, 19, 1, 1),
(7030, 536, 2, 19, 1, 1),
(7031, 192, 2, 19, 1, 3),
(7032, 1470, 2, 19, 1, 3),
(7033, 82, 2, 19, 1, 2),
(7034, 692, 2, 19, 1, 0),
(7035, 3896, 2, 19, 1, 1),
(7036, 2567, 2, 19, 1, 1),
(7037, 794, 2, 19, 1, 1),
(7038, 3897, 2, 19, 1, 3),
(7039, 529, 2, 19, 1, 3),
(7040, 3898, 2, 19, 1, 2),
(7041, 329, 2, 19, 1, 0),
(7042, 330, 2, 19, 1, 2),
(7043, 3011, 2, 19, 1, 3),
(7044, 3899, 2, 19, 1, 3),
(7045, 888, 2, 19, 1, 3),
(7046, 727, 2, 19, 1, 3),
(7047, 1415, 2, 19, 1, 1),
(7048, 1584, 2, 19, 1, 1),
(7049, 222, 2, 19, 1, 1),
(7050, 114, 2, 19, 1, 2),
(7051, 356, 2, 19, 1, 1),
(7052, 2088, 2, 19, 1, 2),
(7053, 3900, 2, 19, 1, 2),
(7054, 3901, 2, 19, 1, 3),
(7055, 1406, 2, 19, 1, 1),
(7056, 3902, 2, 19, 1, 1),
(7057, 2037, 2, 19, 1, 3),
(7058, 397, 2, 19, 1, 2),
(7059, 586, 2, 19, 1, 3),
(7060, 2836, 2, 19, 1, 1),
(7061, 3711, 2, 19, 1, 1),
(7062, 3903, 2, 19, 1, 1),
(7063, 250, 2, 19, 1, 2),
(7064, 2742, 2, 19, 1, 1),
(7065, 3904, 2, 19, 1, 1),
(7066, 1802, 2, 19, 1, 3),
(7067, 3905, 2, 19, 1, 1),
(7068, 205, 2, 19, 1, 3),
(7069, 2114, 2, 19, 1, 0),
(7070, 3906, 2, 19, 1, 1),
(7071, 3907, 2, 19, 1, 1),
(7072, 3330, 2, 19, 1, 1),
(7073, 3908, 2, 19, 1, 1),
(7074, 3909, 2, 19, 1, 1),
(7075, 569, 2, 19, 1, 2),
(7076, 2021, 2, 19, 1, 3),
(7077, 206, 2, 19, 1, 3),
(7078, 1788, 2, 19, 1, 2),
(7079, 609, 2, 19, 1, 2),
(7080, 145, 2, 19, 1, 1),
(7081, 2060, 2, 19, 1, 1),
(7082, 3910, 2, 19, 1, 1),
(7083, 1037, 2, 19, 1, 2),
(7084, 3911, 2, 19, 1, 1),
(7085, 3912, 2, 19, 1, 1),
(7086, 1097, 2, 19, 1, 0),
(7087, 190, 2, 19, 1, 1),
(7088, 3913, 2, 19, 1, 1),
(7089, 3914, 2, 19, 1, 1),
(7090, 3915, 2, 19, 1, 3),
(7091, 1469, 2, 19, 1, 3),
(7092, 3916, 2, 19, 1, 2),
(7093, 3917, 2, 19, 1, 1),
(7094, 2980, 2, 19, 1, 3),
(7095, 3015, 2, 19, 1, 1),
(7096, 2312, 2, 19, 1, 1),
(7097, 99, 2, 19, 1, 2),
(7098, 3837, 2, 19, 1, 0),
(7099, 1003, 2, 19, 1, 1),
(7100, 1400, 2, 19, 1, 2),
(7101, 3918, 2, 19, 1, 1),
(7102, 196, 2, 19, 1, 2),
(7103, 2216, 2, 19, 1, 1),
(7104, 3634, 2, 19, 1, 2),
(7105, 1334, 2, 19, 1, 2),
(7106, 3919, 2, 19, 1, 1),
(7107, 732, 2, 19, 1, 3),
(7108, 1686, 2, 19, 1, 0),
(7109, 1468, 2, 19, 1, 1),
(7110, 1418, 2, 19, 1, 2),
(7111, 3745, 2, 19, 1, 1),
(7112, 3920, 2, 19, 1, 3),
(7113, 3735, 2, 19, 1, 1),
(7114, 3921, 2, 19, 1, 1),
(7115, 3922, 2, 19, 1, 1),
(7116, 974, 2, 19, 1, 1),
(7117, 3923, 2, 19, 1, 1),
(7118, 3924, 2, 19, 1, 1),
(7119, 3925, 2, 19, 1, 1),
(7120, 3926, 2, 19, 1, 1),
(7121, 3927, 2, 19, 1, 1),
(7122, 1656, 2, 19, 1, 3),
(7123, 78, 2, 19, 1, 1),
(7124, 3928, 2, 19, 1, 1),
(7125, 3929, 2, 19, 1, 1),
(7126, 3930, 2, 19, 1, 2),
(7127, 3931, 2, 19, 1, 1),
(7128, 3932, 2, 19, 1, 1),
(7129, 3933, 2, 19, 1, 1),
(7130, 1249, 2, 19, 1, 3),
(7131, 3934, 2, 19, 1, 3),
(7132, 1506, 2, 19, 1, 1),
(7133, 2888, 2, 19, 1, 1),
(7134, 3935, 2, 19, 1, 1),
(7135, 452, 2, 19, 1, 1),
(7136, 3936, 2, 19, 1, 1),
(7137, 331, 2, 19, 1, 2),
(7138, 3937, 2, 19, 1, 1),
(7139, 113, 2, 19, 1, 2),
(7140, 882, 2, 19, 1, 0),
(7141, 1335, 2, 19, 1, 1),
(7142, 3938, 2, 19, 1, 1),
(7143, 308, 2, 19, 1, 3),
(7144, 458, 2, 19, 1, 2),
(7145, 282, 2, 19, 1, 3),
(7146, 3939, 2, 19, 1, 1),
(7147, 3940, 2, 19, 1, 1),
(7148, 3941, 2, 19, 1, 1),
(7149, 2943, 2, 19, 1, 1),
(7150, 3942, 2, 19, 1, 3),
(7151, 477, 2, 19, 1, 3),
(7152, 2174, 2, 19, 1, 3),
(7153, 62, 2, 19, 1, 1),
(7154, 1545, 2, 19, 1, 3),
(7155, 647, 2, 19, 1, 3),
(7156, 1961, 2, 19, 1, 2),
(7157, 1734, 2, 19, 1, 0),
(7158, 352, 2, 19, 1, 1),
(7159, 3943, 2, 19, 1, 3),
(7160, 3785, 2, 19, 1, 1),
(7161, 3944, 2, 19, 1, 1),
(7162, 193, 2, 19, 1, 1),
(7163, 3945, 2, 19, 1, 1),
(7164, 3946, 2, 19, 1, 1),
(7165, 3947, 2, 19, 1, 1),
(7166, 3948, 2, 19, 1, 1),
(7167, 3949, 2, 19, 1, 1),
(7168, 3950, 2, 19, 1, 1),
(7169, 3951, 2, 19, 1, 3),
(7170, 944, 2, 19, 1, 1),
(7171, 3952, 2, 19, 1, 3),
(7172, 534, 2, 19, 1, 1),
(7173, 924, 2, 19, 1, 3),
(7174, 40, 2, 19, 1, 3),
(7175, 31, 2, 19, 1, 0),
(7176, 1316, 2, 19, 1, 1),
(7177, 3953, 2, 19, 1, 1),
(7178, 3954, 2, 19, 1, 1),
(7179, 2858, 2, 19, 1, 1),
(7180, 487, 2, 19, 1, 0),
(7181, 63, 2, 19, 1, 1),
(7182, 1350, 2, 19, 1, 3),
(7183, 3955, 2, 19, 1, 1),
(7184, 91, 2, 19, 1, 1),
(7185, 3956, 2, 19, 1, 3),
(7186, 3957, 2, 19, 1, 2),
(7187, 3411, 2, 19, 1, 1),
(7188, 563, 2, 19, 1, 1),
(7189, 2752, 2, 19, 1, 3),
(7190, 1190, 2, 19, 1, 2),
(7191, 3958, 2, 19, 1, 2),
(7192, 3959, 2, 19, 1, 1),
(7193, 2010, 2, 19, 1, 2),
(7194, 274, 2, 19, 1, 1),
(7195, 574, 2, 19, 1, 2),
(7196, 3960, 2, 19, 1, 1),
(7197, 3796, 2, 19, 1, 1),
(7198, 8, 2, 19, 1, 3),
(7199, 1396, 2, 19, 1, 3),
(7200, 3561, 2, 19, 1, 3),
(7201, 3661, 2, 19, 1, 1),
(7202, 3961, 2, 19, 1, 1),
(7203, 2319, 2, 19, 1, 1),
(7204, 3962, 2, 19, 1, 1),
(7205, 172, 2, 19, 1, 1),
(7206, 2143, 2, 19, 1, 3),
(7207, 3963, 2, 19, 1, 1),
(7208, 3964, 2, 19, 1, 1),
(7209, 1570, 2, 19, 1, 1),
(7210, 1738, 2, 19, 1, 3),
(7211, 1576, 2, 19, 1, 3),
(7212, 279, 2, 19, 1, 2),
(7213, 3965, 2, 19, 1, 1),
(7214, 117, 2, 19, 1, 1),
(7215, 3966, 2, 19, 1, 2),
(7216, 17, 2, 20, 10, 1),
(7217, 1, 2, 20, 10, 0),
(7218, 5, 2, 20, 10, 0),
(7219, 176, 2, 20, 9, 3),
(7220, 3, 2, 20, 8, 0),
(7221, 9, 2, 20, 8, 2),
(7222, 7, 2, 20, 8, 0),
(7223, 144, 2, 20, 7, 1),
(7224, 2, 2, 20, 6, 0),
(7225, 4, 2, 20, 6, 0),
(7226, 3852, 2, 20, 5, 1),
(7227, 3862, 2, 20, 5, 1),
(7228, 2142, 2, 20, 5, 1),
(7229, 431, 2, 20, 5, 3),
(7230, 37, 2, 20, 5, 3),
(7231, 14, 2, 20, 5, 2),
(7232, 6, 2, 20, 5, 0),
(7233, 3663, 2, 20, 5, 1),
(7234, 79, 2, 20, 5, 0),
(7235, 3855, 2, 20, 5, 1),
(7236, 35, 2, 20, 5, 1),
(7237, 3967, 2, 20, 4, 1),
(7238, 1019, 2, 20, 4, 2),
(7239, 15, 2, 20, 4, 0),
(7240, 550, 2, 20, 4, 3),
(7241, 3968, 2, 20, 4, 3),
(7242, 2010, 2, 20, 4, 2),
(7243, 12, 2, 20, 4, 1),
(7244, 77, 2, 20, 4, 1),
(7245, 145, 2, 20, 3, 1),
(7246, 44, 2, 20, 3, 3),
(7247, 72, 2, 20, 3, 0),
(7248, 28, 2, 20, 3, 0),
(7249, 450, 2, 20, 3, 1),
(7250, 214, 2, 20, 3, 3),
(7251, 401, 2, 20, 3, 1),
(7252, 1718, 2, 20, 3, 3),
(7253, 146, 2, 20, 3, 1),
(7254, 3854, 2, 20, 3, 1),
(7255, 690, 2, 20, 3, 1),
(7256, 116, 2, 20, 3, 3),
(7257, 909, 2, 20, 3, 3),
(7258, 486, 2, 20, 3, 1),
(7259, 456, 2, 20, 3, 3),
(7260, 3906, 2, 20, 3, 1),
(7261, 58, 2, 20, 3, 3),
(7262, 87, 2, 20, 3, 3),
(7263, 21, 2, 20, 3, 0),
(7264, 114, 2, 20, 3, 2),
(7265, 3752, 2, 20, 3, 1),
(7266, 1705, 2, 20, 3, 1),
(7267, 3969, 2, 20, 3, 1),
(7268, 46, 2, 20, 3, 1),
(7269, 32, 2, 20, 2, 1),
(7270, 1222, 2, 20, 2, 3),
(7271, 1402, 2, 20, 2, 1),
(7272, 2847, 2, 20, 2, 3),
(7273, 68, 2, 20, 2, 3),
(7274, 3970, 2, 20, 2, 1),
(7275, 365, 2, 20, 2, 3),
(7276, 50, 2, 20, 2, 3),
(7277, 3971, 2, 20, 2, 1),
(7278, 119, 2, 20, 2, 1),
(7279, 3972, 2, 20, 2, 1),
(7280, 3973, 2, 20, 2, 1),
(7281, 3974, 2, 20, 2, 1),
(7282, 246, 2, 20, 2, 3),
(7283, 1399, 2, 20, 2, 1),
(7284, 215, 2, 20, 2, 0),
(7285, 3975, 2, 20, 2, 2),
(7286, 2364, 2, 20, 2, 3),
(7287, 3011, 2, 20, 2, 3),
(7288, 3857, 2, 20, 2, 3),
(7289, 247, 2, 20, 2, 2),
(7290, 153, 2, 20, 2, 1),
(7291, 3976, 2, 20, 2, 2),
(7292, 2397, 2, 20, 2, 1),
(7293, 105, 2, 20, 2, 3),
(7294, 36, 2, 20, 2, 1),
(7295, 23, 2, 20, 2, 2),
(7296, 76, 2, 20, 2, 1),
(7297, 271, 2, 20, 2, 1),
(7298, 3977, 2, 20, 2, 1),
(7299, 3978, 2, 20, 2, 1),
(7300, 801, 2, 20, 2, 3),
(7301, 3979, 2, 20, 2, 3),
(7302, 16, 2, 20, 2, 0),
(7303, 352, 2, 20, 2, 1),
(7304, 3781, 2, 20, 2, 3),
(7305, 932, 2, 20, 2, 3),
(7306, 152, 2, 20, 2, 3),
(7307, 55, 2, 20, 2, 1),
(7308, 90, 2, 20, 2, 1),
(7309, 298, 2, 20, 2, 3),
(7310, 1781, 2, 20, 2, 0),
(7311, 608, 2, 20, 2, 1),
(7312, 1849, 2, 20, 2, 3),
(7313, 1238, 2, 20, 2, 2),
(7314, 3594, 2, 20, 2, 1),
(7315, 3206, 2, 20, 2, 1),
(7316, 883, 2, 20, 2, 1),
(7317, 3980, 2, 20, 2, 1),
(7318, 2245, 2, 20, 2, 3),
(7319, 45, 2, 20, 2, 2),
(7320, 192, 2, 20, 2, 3),
(7321, 310, 2, 20, 2, 2),
(7322, 38, 2, 20, 2, 3),
(7323, 1010, 2, 20, 2, 2),
(7324, 308, 2, 20, 1, 3),
(7325, 3113, 2, 20, 1, 2),
(7326, 884, 2, 20, 1, 3),
(7327, 3981, 2, 20, 1, 2),
(7328, 1278, 2, 20, 1, 3),
(7329, 2143, 2, 20, 1, 3),
(7330, 3982, 2, 20, 1, 1),
(7331, 1113, 2, 20, 1, 3),
(7332, 3983, 2, 20, 1, 1),
(7333, 3918, 2, 20, 1, 1),
(7334, 2211, 2, 20, 1, 1),
(7335, 1235, 2, 20, 1, 3),
(7336, 3984, 2, 20, 1, 2),
(7337, 3985, 2, 20, 1, 1),
(7338, 3986, 2, 20, 1, 3),
(7339, 1618, 2, 20, 1, 3),
(7340, 3987, 2, 20, 1, 1),
(7341, 1269, 2, 20, 1, 3),
(7342, 3988, 2, 20, 1, 1),
(7343, 225, 2, 20, 1, 1),
(7344, 1338, 2, 20, 1, 3),
(7345, 3989, 2, 20, 1, 1),
(7346, 2030, 2, 20, 1, 3),
(7347, 589, 2, 20, 1, 1),
(7348, 871, 2, 20, 1, 1),
(7349, 3990, 2, 20, 1, 1),
(7350, 3339, 2, 20, 1, 3),
(7351, 3991, 2, 20, 1, 2),
(7352, 3992, 2, 20, 1, 2),
(7353, 2028, 2, 20, 1, 1),
(7354, 115, 2, 20, 1, 3),
(7355, 1122, 2, 20, 1, 3),
(7356, 3993, 2, 20, 1, 1),
(7357, 3994, 2, 20, 1, 1),
(7358, 3995, 2, 20, 1, 1),
(7359, 3996, 2, 20, 1, 1),
(7360, 422, 2, 20, 1, 1),
(7361, 3997, 2, 20, 1, 1),
(7362, 732, 2, 20, 1, 3),
(7363, 3998, 2, 20, 1, 1),
(7364, 195, 2, 20, 1, 0),
(7365, 2314, 2, 20, 1, 3),
(7366, 2104, 2, 20, 1, 1),
(7367, 3893, 2, 20, 1, 1),
(7368, 3999, 2, 20, 1, 1),
(7369, 4000, 2, 20, 1, 3),
(7370, 3750, 2, 20, 1, 3),
(7371, 1471, 2, 20, 1, 3),
(7372, 274, 2, 20, 1, 1),
(7373, 3890, 2, 20, 1, 1),
(7374, 2296, 2, 20, 1, 1),
(7375, 1097, 2, 20, 1, 0),
(7376, 4001, 2, 20, 1, 3),
(7377, 4002, 2, 20, 1, 3),
(7378, 4003, 2, 20, 1, 3),
(7379, 4004, 2, 20, 1, 2),
(7380, 223, 2, 20, 1, 3),
(7381, 4005, 2, 20, 1, 1),
(7382, 2114, 2, 20, 1, 0),
(7383, 2909, 2, 20, 1, 1),
(7384, 927, 2, 20, 1, 2),
(7385, 3892, 2, 20, 1, 3),
(7386, 2328, 2, 20, 1, 3),
(7387, 4006, 2, 20, 1, 1),
(7388, 4007, 2, 20, 1, 1),
(7389, 3822, 2, 20, 1, 3),
(7390, 4008, 2, 20, 1, 1),
(7391, 4009, 2, 20, 1, 1),
(7392, 2103, 2, 20, 1, 1),
(7393, 364, 2, 20, 1, 3),
(7394, 3896, 2, 20, 1, 1),
(7395, 1240, 2, 20, 1, 3),
(7396, 74, 2, 20, 1, 0),
(7397, 4010, 2, 20, 1, 1),
(7398, 892, 2, 20, 1, 1),
(7399, 4011, 2, 20, 1, 1),
(7400, 1845, 2, 20, 1, 3),
(7401, 4012, 2, 20, 1, 3),
(7402, 1590, 2, 20, 1, 1),
(7403, 185, 2, 20, 1, 3),
(7404, 3104, 2, 20, 1, 2),
(7405, 4013, 2, 20, 1, 2),
(7406, 3612, 2, 20, 1, 3),
(7407, 4014, 2, 20, 1, 1),
(7408, 62, 2, 20, 1, 1),
(7409, 168, 2, 20, 1, 0),
(7410, 464, 2, 20, 1, 3),
(7411, 888, 2, 20, 1, 3),
(7412, 4015, 2, 20, 1, 1),
(7413, 775, 2, 20, 1, 1),
(7414, 827, 2, 20, 1, 3),
(7415, 3935, 2, 20, 1, 1),
(7416, 452, 2, 20, 1, 1),
(7417, 2317, 2, 20, 1, 1),
(7418, 312, 2, 20, 1, 3),
(7419, 4016, 2, 20, 1, 1),
(7420, 1847, 2, 20, 1, 1),
(7421, 1573, 2, 20, 1, 2),
(7422, 1507, 2, 20, 1, 1),
(7423, 706, 2, 20, 1, 2),
(7424, 4017, 2, 20, 1, 3),
(7425, 82, 2, 20, 1, 2),
(7426, 327, 2, 20, 1, 1),
(7427, 154, 2, 20, 1, 0),
(7428, 4018, 2, 20, 1, 1),
(7429, 390, 2, 20, 1, 0),
(7430, 4019, 2, 20, 1, 1),
(7431, 2088, 2, 20, 1, 2),
(7432, 4020, 2, 20, 1, 3),
(7433, 597, 2, 20, 1, 3),
(7434, 1711, 2, 20, 1, 1),
(7435, 2016, 2, 20, 1, 2),
(7436, 71, 2, 20, 1, 0),
(7437, 1642, 2, 20, 1, 1),
(7438, 2413, 2, 20, 1, 3),
(7439, 1813, 2, 20, 1, 1),
(7440, 4021, 2, 20, 1, 3),
(7441, 30, 2, 20, 1, 2),
(7442, 1470, 2, 20, 1, 3),
(7443, 188, 2, 20, 1, 2),
(7444, 4022, 2, 20, 1, 3),
(7445, 396, 2, 20, 1, 1),
(7446, 121, 2, 20, 1, 2),
(7447, 569, 2, 20, 1, 2),
(7448, 425, 2, 20, 1, 3),
(7449, 2136, 2, 20, 1, 3),
(7450, 4023, 2, 20, 1, 1),
(7451, 985, 2, 20, 1, 2),
(7452, 2049, 2, 20, 1, 0),
(7453, 2109, 2, 20, 1, 2),
(7454, 25, 2, 20, 1, 0),
(7455, 3722, 2, 20, 1, 1),
(7456, 61, 2, 20, 1, 1),
(7457, 4024, 2, 20, 1, 3),
(7458, 2994, 2, 20, 1, 3),
(7459, 2808, 2, 20, 1, 3),
(7460, 193, 2, 20, 1, 1),
(7461, 530, 2, 20, 1, 0),
(7462, 1934, 2, 20, 1, 2),
(7463, 612, 2, 20, 1, 3),
(7464, 1649, 2, 20, 1, 1),
(7465, 1181, 2, 20, 1, 2),
(7466, 2903, 2, 20, 1, 3),
(7467, 2288, 2, 20, 1, 1),
(7468, 3023, 2, 20, 1, 3),
(7469, 249, 2, 20, 1, 1),
(7470, 3863, 2, 20, 1, 1),
(7471, 3907, 2, 20, 1, 1),
(7472, 4025, 2, 20, 1, 1),
(7473, 205, 2, 20, 1, 3),
(7474, 3871, 2, 20, 1, 1),
(7475, 4026, 2, 20, 1, 1),
(7476, 1061, 2, 20, 1, 1),
(7477, 4027, 2, 20, 1, 1),
(7478, 2645, 2, 20, 1, 1),
(7479, 4028, 2, 20, 1, 1),
(7480, 4029, 2, 20, 1, 1),
(7481, 4030, 2, 20, 1, 1),
(7482, 4031, 2, 20, 1, 3),
(7483, 4032, 2, 20, 1, 1),
(7484, 4033, 2, 20, 1, 3),
(7485, 4034, 2, 20, 1, 1),
(7486, 842, 2, 20, 1, 2),
(7487, 1499, 2, 20, 1, 2),
(7488, 2937, 2, 20, 1, 1),
(7489, 4035, 2, 20, 1, 1),
(7490, 3015, 2, 20, 1, 1),
(7491, 4036, 2, 20, 1, 3),
(7492, 1419, 2, 20, 1, 0),
(7493, 4037, 2, 20, 1, 1),
(7494, 181, 2, 20, 1, 3),
(7495, 999, 2, 20, 1, 3),
(7496, 4038, 2, 20, 1, 1),
(7497, 18, 2, 20, 1, 1),
(7498, 1659, 2, 20, 1, 2),
(7499, 3873, 2, 20, 1, 3),
(7500, 4039, 2, 20, 1, 3),
(7501, 4040, 2, 20, 1, 3),
(7502, 679, 2, 20, 1, 2),
(7503, 4041, 2, 20, 1, 2),
(7504, 534, 2, 20, 1, 1),
(7505, 218, 2, 20, 1, 3),
(7506, 202, 2, 20, 1, 0),
(7507, 4042, 2, 20, 1, 2),
(7508, 2021, 2, 20, 1, 3),
(7509, 158, 2, 20, 1, 1),
(7510, 2435, 2, 20, 1, 3),
(7511, 1190, 2, 20, 1, 2),
(7512, 4043, 2, 20, 1, 1),
(7513, 4044, 2, 20, 1, 1),
(7514, 4045, 2, 20, 1, 1),
(7515, 3561, 2, 20, 1, 3),
(7516, 586, 2, 20, 1, 3),
(7517, 3861, 2, 20, 1, 1),
(7518, 162, 2, 20, 1, 1),
(7519, 1149, 2, 20, 1, 1),
(7520, 2197, 2, 20, 1, 1),
(7521, 1584, 2, 20, 1, 1),
(7522, 4046, 2, 20, 1, 1),
(7523, 5, 2, 21, 4, 0),
(7524, 4047, 2, 21, 4, 3),
(7525, 9, 2, 21, 3, 2),
(7526, 789, 2, 21, 3, 3),
(7527, 4048, 2, 21, 2, 1),
(7528, 3249, 2, 21, 2, 1),
(7529, 72, 2, 21, 2, 0),
(7530, 12, 2, 21, 2, 1),
(7531, 82, 2, 21, 2, 2),
(7532, 3781, 2, 21, 2, 3),
(7533, 569, 2, 21, 2, 2),
(7534, 4, 2, 21, 2, 0),
(7535, 185, 2, 21, 2, 3),
(7536, 17, 2, 21, 2, 1),
(7537, 153, 2, 21, 2, 1),
(7538, 35, 2, 21, 2, 1),
(7539, 14, 2, 21, 1, 2),
(7540, 2088, 2, 21, 1, 2),
(7541, 4049, 2, 21, 1, 3),
(7542, 386, 2, 21, 1, 1),
(7543, 168, 2, 21, 1, 0),
(7544, 2083, 2, 21, 1, 1),
(7545, 4050, 2, 21, 1, 1),
(7546, 4051, 2, 21, 1, 3),
(7547, 225, 2, 21, 1, 1),
(7548, 1222, 2, 21, 1, 3),
(7549, 481, 2, 21, 1, 1),
(7550, 4052, 2, 21, 1, 1),
(7551, 3910, 2, 21, 1, 1),
(7552, 206, 2, 21, 1, 3),
(7553, 4053, 2, 21, 1, 3),
(7554, 15, 2, 21, 1, 0),
(7555, 485, 2, 21, 1, 2),
(7556, 38, 2, 21, 1, 3),
(7557, 3253, 2, 21, 1, 1),
(7558, 4054, 2, 21, 1, 3),
(7559, 47, 2, 21, 1, 3),
(7560, 202, 2, 21, 1, 0),
(7561, 7, 2, 21, 1, 0),
(7562, 2796, 2, 21, 1, 3),
(7563, 4055, 2, 21, 1, 1),
(7564, 944, 2, 21, 1, 1),
(7565, 422, 2, 21, 1, 1),
(7566, 4056, 2, 21, 1, 1),
(7567, 1240, 2, 21, 1, 3),
(7568, 33, 2, 21, 1, 3),
(7569, 1978, 2, 21, 1, 1),
(7570, 280, 2, 21, 1, 0),
(7571, 4057, 2, 21, 1, 1),
(7572, 4058, 2, 21, 1, 1),
(7573, 995, 2, 21, 1, 1),
(7574, 143, 2, 21, 1, 1),
(7575, 30, 2, 21, 1, 2),
(7576, 1592, 2, 21, 1, 2),
(7577, 3, 2, 21, 1, 0),
(7578, 624, 2, 21, 1, 2),
(7579, 4019, 2, 21, 1, 1),
(7580, 1896, 2, 21, 1, 2),
(7581, 62, 2, 21, 1, 1),
(7582, 4059, 2, 21, 1, 1),
(7583, 28, 2, 21, 1, 0),
(7584, 999, 2, 21, 1, 3),
(7585, 3832, 2, 21, 1, 1),
(7586, 2136, 2, 21, 1, 3),
(7587, 4060, 2, 21, 1, 2),
(7588, 4061, 2, 21, 1, 1),
(7589, 182, 2, 21, 1, 2),
(7590, 1829, 2, 21, 1, 1),
(7591, 2, 2, 21, 1, 0),
(7592, 29, 2, 21, 1, 2),
(7593, 189, 2, 21, 1, 0),
(7594, 70, 2, 21, 1, 1),
(7595, 1548, 2, 21, 1, 3),
(7596, 58, 2, 21, 1, 3),
(7597, 4062, 2, 21, 1, 2),
(7598, 3603, 2, 21, 1, 3),
(7599, 4063, 2, 21, 1, 3),
(7600, 74, 2, 21, 1, 0),
(7601, 4064, 2, 21, 1, 3),
(7602, 1023, 2, 21, 1, 1),
(7603, 2808, 2, 21, 1, 3),
(7604, 563, 2, 21, 1, 1),
(7605, 99, 2, 21, 1, 2),
(7606, 4065, 2, 21, 1, 2),
(7607, 76, 2, 21, 1, 1),
(7608, 21, 2, 21, 1, 0),
(7609, 493, 2, 21, 1, 3),
(7610, 608, 2, 21, 1, 1),
(7611, 116, 2, 21, 1, 3),
(7612, 1, 2, 21, 1, 0),
(7613, 1010, 2, 21, 1, 2),
(7614, 114, 2, 21, 1, 2),
(7615, 3709, 2, 21, 1, 1),
(7616, 590, 2, 21, 1, 1),
(7617, 4066, 2, 21, 1, 3),
(7618, 79, 2, 21, 1, 0),
(7619, 2378, 2, 21, 1, 3),
(7620, 592, 2, 21, 1, 3),
(7621, 401, 2, 21, 1, 1),
(7622, 3710, 2, 21, 1, 1),
(7623, 65, 2, 21, 1, 0),
(7624, 2443, 2, 21, 1, 3),
(7625, 141, 2, 21, 1, 3),
(7626, 1190, 2, 21, 1, 2),
(7627, 4067, 2, 21, 1, 2),
(7628, 3561, 2, 21, 1, 3),
(7629, 3, 2, 22, 27, 0),
(7630, 1, 2, 22, 25, 0),
(7631, 14, 2, 22, 15, 2),
(7632, 12, 2, 22, 12, 1),
(7633, 214, 2, 22, 12, 3),
(7634, 7, 2, 22, 11, 0),
(7635, 592, 2, 22, 10, 3),
(7636, 2, 2, 22, 10, 0),
(7637, 41, 2, 22, 9, 0),
(7638, 205, 2, 22, 9, 3),
(7639, 25, 2, 22, 8, 0),
(7640, 35, 2, 22, 7, 1),
(7641, 144, 2, 22, 7, 1),
(7642, 9, 2, 22, 7, 2),
(7643, 30, 2, 22, 7, 2),
(7644, 215, 2, 22, 7, 0),
(7645, 3594, 2, 22, 7, 1),
(7646, 23, 2, 22, 7, 2),
(7647, 17, 2, 22, 6, 1),
(7648, 4068, 2, 22, 6, 1),
(7649, 6, 2, 22, 6, 0),
(7650, 909, 2, 22, 6, 3),
(7651, 36, 2, 22, 6, 1),
(7652, 3781, 2, 22, 6, 3),
(7653, 56, 2, 22, 5, 1),
(7654, 16, 2, 22, 5, 0),
(7655, 76, 2, 22, 5, 1),
(7656, 117, 2, 22, 5, 1),
(7657, 550, 2, 22, 5, 3),
(7658, 4069, 2, 22, 5, 1),
(7659, 4070, 2, 22, 5, 1),
(7660, 119, 2, 22, 5, 1),
(7661, 61, 2, 22, 5, 1),
(7662, 37, 2, 22, 5, 3),
(7663, 24, 2, 22, 4, 2),
(7664, 62, 2, 22, 4, 1),
(7665, 310, 2, 22, 4, 2),
(7666, 1381, 2, 22, 4, 3),
(7667, 32, 2, 22, 4, 1),
(7668, 145, 2, 22, 4, 1),
(7669, 79, 2, 22, 4, 0),
(7670, 1097, 2, 22, 4, 0),
(7671, 1705, 2, 22, 4, 1),
(7672, 450, 2, 22, 4, 1),
(7673, 5, 2, 22, 4, 0),
(7674, 883, 2, 22, 4, 1),
(7675, 29, 2, 22, 4, 2),
(7676, 1640, 2, 22, 4, 1),
(7677, 182, 2, 22, 3, 2),
(7678, 3088, 2, 22, 3, 3),
(7679, 1214, 2, 22, 3, 3),
(7680, 101, 2, 22, 3, 2),
(7681, 184, 2, 22, 3, 1),
(7682, 4071, 2, 22, 3, 3),
(7683, 1654, 2, 22, 3, 3),
(7684, 1931, 2, 22, 3, 2),
(7685, 1718, 2, 22, 3, 3),
(7686, 116, 2, 22, 3, 3),
(7687, 1188, 2, 22, 3, 3),
(7688, 4072, 2, 22, 3, 1),
(7689, 452, 2, 22, 3, 1),
(7690, 99, 2, 22, 3, 2),
(7691, 4073, 2, 22, 3, 3),
(7692, 1802, 2, 22, 3, 3),
(7693, 176, 2, 22, 3, 3),
(7694, 15, 2, 22, 3, 0),
(7695, 20, 2, 22, 3, 0),
(7696, 21, 2, 22, 3, 0),
(7697, 696, 2, 22, 3, 2),
(7698, 114, 2, 22, 3, 2),
(7699, 1440, 2, 22, 3, 3),
(7700, 115, 2, 22, 3, 3),
(7701, 152, 2, 22, 3, 3),
(7702, 331, 2, 22, 3, 2),
(7703, 1419, 2, 22, 3, 0),
(7704, 146, 2, 22, 3, 1),
(7705, 70, 2, 22, 3, 1),
(7706, 31, 2, 22, 3, 0),
(7707, 4074, 2, 22, 3, 1),
(7708, 108, 2, 22, 3, 1),
(7709, 384, 2, 22, 3, 2),
(7710, 932, 2, 22, 3, 3),
(7711, 475, 2, 22, 3, 2),
(7712, 493, 2, 22, 3, 3),
(7713, 19, 2, 22, 3, 3),
(7714, 2136, 2, 22, 2, 3),
(7715, 1104, 2, 22, 2, 2),
(7716, 4075, 2, 22, 2, 1),
(7717, 534, 2, 22, 2, 1),
(7718, 46, 2, 22, 2, 1),
(7719, 892, 2, 22, 2, 1),
(7720, 10, 2, 22, 2, 1),
(7721, 1010, 2, 22, 2, 2),
(7722, 4076, 2, 22, 2, 3),
(7723, 693, 2, 22, 2, 3),
(7724, 63, 2, 22, 2, 1),
(7725, 352, 2, 22, 2, 1),
(7726, 3113, 2, 22, 2, 2),
(7727, 4077, 2, 22, 2, 1),
(7728, 1590, 2, 22, 2, 1),
(7729, 271, 2, 22, 2, 1),
(7730, 28, 2, 22, 2, 0),
(7731, 4078, 2, 22, 2, 1),
(7732, 4079, 2, 22, 2, 1),
(7733, 153, 2, 22, 2, 1),
(7734, 4080, 2, 22, 2, 3),
(7735, 3516, 2, 22, 2, 2),
(7736, 666, 2, 22, 2, 3),
(7737, 202, 2, 22, 2, 0),
(7738, 1876, 2, 22, 2, 1),
(7739, 49, 2, 22, 2, 1),
(7740, 2164, 2, 22, 2, 3),
(7741, 686, 2, 22, 2, 2),
(7742, 65, 2, 22, 2, 0),
(7743, 180, 2, 22, 2, 2),
(7744, 4053, 2, 22, 2, 3),
(7745, 871, 2, 22, 2, 1),
(7746, 801, 2, 22, 2, 3),
(7747, 90, 2, 22, 2, 1),
(7748, 4081, 2, 22, 2, 1),
(7749, 401, 2, 22, 2, 1),
(7750, 58, 2, 22, 2, 3),
(7751, 133, 2, 22, 2, 1),
(7752, 3525, 2, 22, 2, 1),
(7753, 1847, 2, 22, 2, 1),
(7754, 1019, 2, 22, 2, 2),
(7755, 4, 2, 22, 2, 0),
(7756, 3425, 2, 22, 2, 2),
(7757, 71, 2, 22, 2, 0),
(7758, 74, 2, 22, 2, 0),
(7759, 1922, 2, 22, 2, 1),
(7760, 345, 2, 22, 2, 3),
(7761, 55, 2, 22, 2, 1),
(7762, 3567, 2, 22, 2, 2),
(7763, 4082, 2, 22, 2, 3),
(7764, 679, 2, 22, 2, 2),
(7765, 92, 2, 22, 2, 3),
(7766, 38, 2, 22, 2, 3),
(7767, 196, 2, 22, 2, 2),
(7768, 1693, 2, 22, 2, 0),
(7769, 77, 2, 22, 2, 1),
(7770, 4083, 2, 22, 2, 1),
(7771, 45, 2, 22, 2, 2),
(7772, 595, 2, 22, 2, 3),
(7773, 39, 2, 22, 2, 3),
(7774, 4084, 2, 22, 2, 3),
(7775, 4085, 2, 22, 2, 3),
(7776, 1574, 2, 22, 2, 3),
(7777, 4086, 2, 22, 2, 1),
(7778, 1592, 2, 22, 1, 2),
(7779, 3789, 2, 22, 1, 2),
(7780, 1564, 2, 22, 1, 0),
(7781, 1348, 2, 22, 1, 2),
(7782, 3695, 2, 22, 1, 1),
(7783, 486, 2, 22, 1, 1),
(7784, 244, 2, 22, 1, 3),
(7785, 477, 2, 22, 1, 3),
(7786, 4087, 2, 22, 1, 1),
(7787, 4088, 2, 22, 1, 3),
(7788, 4089, 2, 22, 1, 1),
(7789, 4090, 2, 22, 1, 1),
(7790, 3702, 2, 22, 1, 1),
(7791, 870, 2, 22, 1, 1),
(7792, 4091, 2, 22, 1, 1),
(7793, 188, 2, 22, 1, 2),
(7794, 3817, 2, 22, 1, 3),
(7795, 1339, 2, 22, 1, 1),
(7796, 458, 2, 22, 1, 2),
(7797, 2173, 2, 22, 1, 1),
(7798, 2293, 2, 22, 1, 1),
(7799, 1897, 2, 22, 1, 3),
(7800, 4092, 2, 22, 1, 1),
(7801, 231, 2, 22, 1, 3),
(7802, 907, 2, 22, 1, 2),
(7803, 3915, 2, 22, 1, 3),
(7804, 44, 2, 22, 1, 3),
(7805, 3888, 2, 22, 1, 2),
(7806, 4093, 2, 22, 1, 1),
(7807, 4094, 2, 22, 1, 1),
(7808, 4095, 2, 22, 1, 3),
(7809, 2152, 2, 22, 1, 2),
(7810, 1473, 2, 22, 1, 1),
(7811, 4096, 2, 22, 1, 1),
(7812, 4097, 2, 22, 1, 3),
(7813, 4098, 2, 22, 1, 1),
(7814, 330, 2, 22, 1, 2),
(7815, 408, 2, 22, 1, 1),
(7816, 4099, 2, 22, 1, 2),
(7817, 4100, 2, 22, 1, 1),
(7818, 397, 2, 22, 1, 2),
(7819, 1020, 2, 22, 1, 3),
(7820, 327, 2, 22, 1, 1),
(7821, 1467, 2, 22, 1, 1),
(7822, 4101, 2, 22, 1, 3),
(7823, 1733, 2, 22, 1, 2),
(7824, 1772, 2, 22, 1, 2),
(7825, 266, 2, 22, 1, 0),
(7826, 3999, 2, 22, 1, 1),
(7827, 1316, 2, 22, 1, 1),
(7828, 4102, 2, 22, 1, 1),
(7829, 2849, 2, 22, 1, 1),
(7830, 4103, 2, 22, 1, 3),
(7831, 4104, 2, 22, 1, 1),
(7832, 246, 2, 22, 1, 3),
(7833, 624, 2, 22, 1, 2),
(7834, 78, 2, 22, 1, 1),
(7835, 2257, 2, 22, 1, 2),
(7836, 40, 2, 22, 1, 3),
(7837, 181, 2, 22, 1, 3),
(7838, 1330, 2, 22, 1, 2),
(7839, 985, 2, 22, 1, 2),
(7840, 3600, 2, 22, 1, 3),
(7841, 2245, 2, 22, 1, 3),
(7842, 706, 2, 22, 1, 2),
(7843, 1199, 2, 22, 1, 3),
(7844, 460, 2, 22, 1, 2),
(7845, 1037, 2, 22, 1, 2),
(7846, 378, 2, 22, 1, 0),
(7847, 124, 2, 22, 1, 2),
(7848, 4105, 2, 22, 1, 1),
(7849, 143, 2, 22, 1, 1),
(7850, 2976, 2, 22, 1, 1),
(7851, 575, 2, 22, 1, 3),
(7852, 2842, 2, 22, 1, 3),
(7853, 34, 2, 22, 1, 0),
(7854, 4106, 2, 22, 1, 3),
(7855, 4107, 2, 22, 1, 3),
(7856, 4108, 2, 22, 1, 1),
(7857, 4109, 2, 22, 1, 1),
(7858, 4110, 2, 22, 1, 1),
(7859, 4111, 2, 22, 1, 1),
(7860, 2350, 2, 22, 1, 1),
(7861, 3969, 2, 22, 1, 1),
(7862, 4112, 2, 22, 1, 1),
(7863, 471, 2, 22, 1, 1),
(7864, 4113, 2, 22, 1, 1),
(7865, 794, 2, 22, 1, 1),
(7866, 1778, 2, 22, 1, 1),
(7867, 2232, 2, 22, 1, 3),
(7868, 2483, 2, 22, 1, 3),
(7869, 4114, 2, 22, 1, 1),
(7870, 3235, 2, 22, 1, 3),
(7871, 670, 2, 22, 1, 1),
(7872, 308, 2, 22, 1, 3),
(7873, 3522, 2, 22, 1, 1),
(7874, 4115, 2, 22, 1, 3),
(7875, 2539, 2, 22, 1, 2),
(7876, 461, 2, 22, 1, 1),
(7877, 4116, 2, 22, 1, 1),
(7878, 4117, 2, 22, 1, 2),
(7879, 4118, 2, 22, 1, 1),
(7880, 4119, 2, 22, 1, 1),
(7881, 1249, 2, 22, 1, 3),
(7882, 3819, 2, 22, 1, 2),
(7883, 230, 2, 22, 1, 2),
(7884, 4120, 2, 22, 1, 1),
(7885, 3750, 2, 22, 1, 3),
(7886, 659, 2, 22, 1, 3),
(7887, 3766, 2, 22, 1, 2),
(7888, 4121, 2, 22, 1, 1),
(7889, 1618, 2, 22, 1, 3),
(7890, 3033, 2, 22, 1, 3),
(7891, 2199, 2, 22, 1, 0),
(7892, 511, 2, 22, 1, 2),
(7893, 4122, 2, 22, 1, 1),
(7894, 72, 2, 22, 1, 0),
(7895, 1334, 2, 22, 1, 2),
(7896, 3165, 2, 22, 1, 3),
(7897, 1217, 2, 22, 1, 3),
(7898, 189, 2, 22, 1, 0),
(7899, 4123, 2, 22, 1, 1),
(7900, 1548, 2, 22, 1, 3),
(7901, 203, 2, 22, 1, 1),
(7902, 2397, 2, 22, 1, 1),
(7903, 4124, 2, 22, 1, 1),
(7904, 4125, 2, 22, 1, 1),
(7905, 364, 2, 22, 1, 3),
(7906, 4126, 2, 22, 1, 1),
(7907, 3512, 2, 22, 1, 2),
(7908, 185, 2, 22, 1, 3),
(7909, 4127, 2, 22, 1, 3),
(7910, 1734, 2, 22, 1, 0),
(7911, 195, 2, 22, 1, 0),
(7912, 4128, 2, 22, 1, 3),
(7913, 4129, 2, 22, 1, 1),
(7914, 1283, 2, 22, 1, 3),
(7915, 4130, 2, 22, 1, 1),
(7916, 4131, 2, 22, 1, 3),
(7917, 773, 2, 22, 1, 1),
(7918, 926, 2, 22, 1, 1),
(7919, 4132, 2, 22, 1, 3),
(7920, 4133, 2, 22, 1, 2),
(7921, 4134, 2, 22, 1, 3),
(7922, 2659, 2, 22, 1, 3),
(7923, 4135, 2, 22, 1, 1),
(7924, 563, 2, 22, 1, 1),
(7925, 4136, 2, 22, 1, 2),
(7926, 1798, 2, 22, 1, 3),
(7927, 4137, 2, 22, 1, 3),
(7928, 8, 2, 22, 1, 3),
(7929, 1496, 2, 22, 1, 3),
(7930, 395, 2, 22, 1, 2),
(7931, 4019, 2, 22, 1, 1),
(7932, 4138, 2, 22, 1, 2),
(7933, 1031, 2, 22, 1, 3),
(7934, 4139, 2, 22, 1, 2),
(7935, 1238, 2, 22, 1, 2),
(7936, 106, 2, 22, 1, 3),
(7937, 528, 2, 22, 1, 1),
(7938, 684, 2, 22, 1, 2),
(7939, 578, 2, 22, 1, 1),
(7940, 1800, 2, 22, 1, 2),
(7941, 2458, 2, 22, 1, 3),
(7942, 4140, 2, 22, 1, 3),
(7943, 1303, 2, 22, 1, 1),
(7944, 4141, 2, 22, 1, 1),
(7945, 388, 2, 22, 1, 3),
(7946, 3504, 2, 22, 1, 1),
(7947, 400, 2, 22, 1, 3),
(7948, 201, 2, 22, 1, 2),
(7949, 168, 2, 22, 1, 0),
(7950, 207, 2, 22, 1, 3),
(7951, 1222, 2, 22, 1, 3),
(7952, 4052, 2, 22, 1, 1),
(7953, 218, 2, 22, 1, 3),
(7954, 4142, 2, 22, 1, 1),
(7955, 4143, 2, 22, 1, 3),
(7956, 1582, 2, 22, 1, 1),
(7957, 1190, 2, 22, 1, 2),
(7958, 4144, 2, 22, 1, 1),
(7959, 4145, 2, 22, 1, 1),
(7960, 4146, 2, 22, 1, 3),
(7961, 4147, 2, 22, 1, 1),
(7962, 2396, 2, 22, 1, 1),
(7963, 2638, 2, 22, 1, 1),
(7964, 4148, 2, 22, 1, 1),
(7965, 1350, 2, 22, 1, 3),
(7966, 366, 2, 22, 1, 1),
(7967, 4149, 2, 22, 1, 1),
(7968, 897, 2, 22, 1, 2),
(7969, 2364, 2, 22, 1, 3),
(7970, 4150, 2, 22, 1, 3),
(7971, 525, 2, 22, 1, 2),
(7972, 4151, 2, 22, 1, 3),
(7973, 856, 2, 22, 1, 2),
(7974, 4152, 2, 22, 1, 3),
(7975, 250, 2, 22, 1, 2),
(7976, 4153, 2, 22, 1, 3),
(7977, 527, 2, 22, 1, 1),
(7978, 4154, 2, 22, 1, 1),
(7979, 2114, 2, 22, 1, 0),
(7980, 2186, 2, 22, 1, 2),
(7981, 2107, 2, 22, 1, 2),
(7982, 608, 2, 22, 1, 1),
(7983, 105, 2, 22, 1, 3),
(7984, 4155, 2, 22, 1, 3),
(7985, 4156, 2, 22, 1, 1),
(7986, 1779, 2, 22, 1, 3),
(7987, 3834, 2, 22, 1, 3),
(7988, 1498, 2, 22, 1, 2),
(7989, 1208, 2, 22, 1, 1),
(7990, 2049, 2, 22, 1, 0),
(7991, 1169, 2, 22, 1, 1),
(7992, 4157, 2, 22, 1, 1),
(7993, 191, 2, 22, 1, 2),
(7994, 3500, 2, 22, 1, 2),
(7995, 448, 2, 22, 1, 1),
(7996, 1425, 2, 22, 1, 1),
(7997, 361, 2, 22, 1, 1),
(7998, 780, 2, 22, 1, 1),
(7999, 1598, 2, 22, 1, 3),
(8000, 357, 2, 22, 1, 1),
(8001, 4158, 2, 22, 1, 1),
(8002, 1951, 2, 22, 1, 1),
(8003, 1519, 2, 22, 1, 3),
(8004, 805, 2, 22, 1, 1),
(8005, 1033, 2, 22, 1, 1),
(8006, 3711, 2, 22, 1, 1),
(8007, 4159, 2, 22, 1, 1),
(8008, 1675, 2, 22, 1, 3),
(8009, 1966, 2, 22, 1, 1),
(8010, 4160, 2, 22, 1, 1),
(8011, 4161, 2, 22, 1, 1),
(8012, 1347, 2, 22, 1, 0),
(8013, 986, 2, 22, 1, 1),
(8014, 2296, 2, 22, 1, 1),
(8015, 2904, 2, 22, 1, 1),
(8016, 3048, 2, 22, 1, 3),
(8017, 1849, 2, 22, 1, 3),
(8018, 4162, 2, 22, 1, 1),
(8019, 830, 2, 22, 1, 3),
(8020, 1, 2, 23, 8, 0),
(8021, 3, 2, 23, 8, 0),
(8022, 4163, 2, 23, 5, 1),
(8023, 214, 2, 23, 4, 3),
(8024, 271, 2, 23, 4, 1),
(8025, 4164, 2, 23, 3, 1),
(8026, 892, 2, 23, 3, 1),
(8027, 144, 2, 23, 3, 1),
(8028, 4165, 2, 23, 3, 1),
(8029, 909, 2, 23, 3, 3),
(8030, 2173, 2, 23, 3, 1),
(8031, 35, 2, 23, 3, 1),
(8032, 4166, 2, 23, 3, 1),
(8033, 11, 2, 23, 3, 1),
(8034, 3819, 2, 23, 3, 2),
(8035, 55, 2, 23, 3, 1),
(8036, 1027, 2, 23, 3, 3),
(8037, 4167, 2, 23, 3, 1),
(8038, 14, 2, 23, 3, 2),
(8039, 181, 2, 23, 3, 3),
(8040, 565, 2, 23, 2, 1),
(8041, 65, 2, 23, 2, 0),
(8042, 312, 2, 23, 2, 3),
(8043, 3594, 2, 23, 2, 1),
(8044, 4168, 2, 23, 2, 3),
(8045, 4169, 2, 23, 2, 2),
(8046, 2937, 2, 23, 2, 1),
(8047, 1705, 2, 23, 2, 1),
(8048, 944, 2, 23, 2, 1),
(8049, 119, 2, 23, 2, 1),
(8050, 882, 2, 23, 2, 0),
(8051, 3928, 2, 23, 2, 1),
(8052, 1095, 2, 23, 2, 2),
(8053, 153, 2, 23, 2, 1),
(8054, 690, 2, 23, 2, 1),
(8055, 215, 2, 23, 2, 0),
(8056, 12, 2, 23, 2, 1),
(8057, 870, 2, 23, 2, 1),
(8058, 152, 2, 23, 2, 3),
(8059, 62, 2, 23, 2, 1),
(8060, 1837, 2, 23, 2, 2),
(8061, 58, 2, 23, 2, 3),
(8062, 1802, 2, 23, 2, 3),
(8063, 3778, 2, 23, 2, 1),
(8064, 17, 2, 23, 2, 1),
(8065, 4170, 2, 23, 2, 1),
(8066, 4171, 2, 23, 2, 1),
(8067, 527, 2, 23, 2, 1),
(8068, 105, 2, 23, 2, 3),
(8069, 773, 2, 23, 2, 1),
(8070, 883, 2, 23, 2, 1),
(8071, 205, 2, 23, 2, 3),
(8072, 4172, 2, 23, 1, 1),
(8073, 88, 2, 23, 1, 1),
(8074, 2312, 2, 23, 1, 1),
(8075, 2980, 2, 23, 1, 3),
(8076, 38, 2, 23, 1, 3),
(8077, 193, 2, 23, 1, 1),
(8078, 5, 2, 23, 1, 0),
(8079, 47, 2, 23, 1, 3),
(8080, 1003, 2, 23, 1, 1),
(8081, 3663, 2, 23, 1, 1),
(8082, 30, 2, 23, 1, 2),
(8083, 25, 2, 23, 1, 0),
(8084, 765, 2, 23, 1, 3),
(8085, 4173, 2, 23, 1, 1),
(8086, 1382, 2, 23, 1, 1),
(8087, 1221, 2, 23, 1, 3),
(8088, 4174, 2, 23, 1, 2),
(8089, 4175, 2, 23, 1, 1),
(8090, 180, 2, 23, 1, 2),
(8091, 52, 2, 23, 1, 1),
(8092, 185, 2, 23, 1, 3),
(8093, 477, 2, 23, 1, 3),
(8094, 137, 2, 23, 1, 1),
(8095, 4176, 2, 23, 1, 1),
(8096, 1122, 2, 23, 1, 3),
(8097, 191, 2, 23, 1, 2),
(8098, 1990, 2, 23, 1, 3),
(8099, 7, 2, 23, 1, 0),
(8100, 4177, 2, 23, 1, 3),
(8101, 63, 2, 23, 1, 1),
(8102, 4076, 2, 23, 1, 3),
(8103, 522, 2, 23, 1, 1),
(8104, 32, 2, 23, 1, 1),
(8105, 2401, 2, 23, 1, 2),
(8106, 1718, 2, 23, 1, 3),
(8107, 907, 2, 23, 1, 2),
(8108, 4178, 2, 23, 1, 3),
(8109, 2372, 2, 23, 1, 3),
(8110, 303, 2, 23, 1, 3),
(8111, 608, 2, 23, 1, 1),
(8112, 4179, 2, 23, 1, 1),
(8113, 2769, 2, 23, 1, 1),
(8114, 4180, 2, 23, 1, 1),
(8115, 4181, 2, 23, 1, 1),
(8116, 3596, 2, 23, 1, 2),
(8117, 4182, 2, 23, 1, 1),
(8118, 4183, 2, 23, 1, 1),
(8119, 4184, 2, 23, 1, 1),
(8120, 4185, 2, 23, 1, 3),
(8121, 801, 2, 23, 1, 3),
(8122, 4186, 2, 23, 1, 1),
(8123, 1274, 2, 23, 1, 1),
(8124, 4187, 2, 23, 1, 1),
(8125, 4188, 2, 23, 1, 1),
(8126, 660, 2, 23, 1, 1),
(8127, 692, 2, 23, 1, 0),
(8128, 4189, 2, 23, 1, 1),
(8129, 2083, 2, 23, 1, 1),
(8130, 4190, 2, 23, 1, 1),
(8131, 77, 2, 23, 1, 1),
(8132, 114, 2, 23, 1, 2),
(8133, 1289, 2, 23, 1, 3),
(8134, 72, 2, 23, 1, 0),
(8135, 3113, 2, 23, 1, 2),
(8136, 2125, 2, 23, 1, 1),
(8137, 378, 2, 23, 1, 0),
(8138, 4191, 2, 23, 1, 2),
(8139, 36, 2, 23, 1, 1),
(8140, 1339, 2, 23, 1, 1),
(8141, 3976, 2, 23, 1, 2),
(8142, 223, 2, 23, 1, 3),
(8143, 3348, 2, 23, 1, 3),
(8144, 3023, 2, 23, 1, 3),
(8145, 15, 2, 23, 1, 0),
(8146, 1214, 2, 23, 1, 3),
(8147, 4192, 2, 23, 1, 1),
(8148, 4193, 2, 23, 1, 1),
(8149, 4154, 2, 23, 1, 1),
(8150, 1733, 2, 23, 1, 2),
(8151, 592, 2, 23, 1, 3),
(8152, 24, 2, 23, 1, 2),
(8153, 4194, 2, 23, 1, 2),
(8154, 249, 2, 23, 1, 1),
(8155, 384, 2, 23, 1, 2),
(8156, 3356, 2, 23, 1, 3),
(8157, 202, 2, 23, 1, 0),
(8158, 2687, 2, 23, 1, 1),
(8159, 679, 2, 23, 1, 2),
(8160, 1425, 2, 23, 1, 1),
(8161, 40, 2, 23, 1, 3),
(8162, 6, 2, 23, 1, 0),
(8163, 4195, 2, 23, 1, 1),
(8164, 4196, 2, 23, 1, 3),
(8165, 4197, 2, 23, 1, 3),
(8166, 4198, 2, 23, 1, 3),
(8167, 364, 2, 23, 1, 3),
(8168, 4199, 2, 23, 1, 3),
(8169, 4200, 2, 23, 1, 1),
(8170, 2361, 2, 23, 1, 3),
(8171, 4201, 2, 23, 1, 1),
(8172, 4202, 2, 23, 1, 1),
(8173, 4203, 2, 23, 1, 1),
(8174, 4204, 2, 23, 1, 1),
(8175, 134, 2, 23, 1, 1),
(8176, 4205, 2, 23, 1, 1),
(8177, 4206, 2, 23, 1, 1),
(8178, 4207, 2, 23, 1, 1),
(8179, 4208, 2, 23, 1, 1),
(8180, 318, 2, 23, 1, 2),
(8181, 3813, 2, 23, 1, 3),
(8182, 3781, 2, 23, 1, 3),
(8183, 274, 2, 23, 1, 1),
(8184, 843, 2, 23, 1, 2),
(8185, 386, 2, 23, 1, 1),
(8186, 1918, 2, 23, 1, 2),
(8187, 3526, 2, 23, 1, 1),
(8188, 188, 2, 23, 1, 2),
(8189, 3695, 2, 23, 1, 1),
(8190, 4209, 2, 23, 1, 1),
(8191, 3724, 2, 23, 1, 1),
(8192, 133, 2, 23, 1, 1),
(8193, 4210, 2, 23, 1, 2),
(8194, 4152, 2, 23, 1, 3),
(8195, 146, 2, 23, 1, 1),
(8196, 4211, 2, 23, 1, 1),
(8197, 4212, 2, 23, 1, 1),
(8198, 1, 2, 24, 14, 0),
(8199, 7, 2, 24, 10, 0),
(8200, 1396, 2, 24, 10, 3),
(8201, 3, 2, 24, 10, 0),
(8202, 4213, 2, 24, 6, 3),
(8203, 1760, 2, 24, 6, 1),
(8204, 9, 2, 24, 6, 2),
(8205, 28, 2, 24, 6, 0),
(8206, 4214, 2, 24, 5, 3),
(8207, 76, 2, 24, 5, 1),
(8208, 58, 2, 24, 5, 3),
(8209, 77, 2, 24, 5, 1),
(8210, 4215, 2, 24, 5, 1),
(8211, 21, 2, 24, 5, 0),
(8212, 5, 2, 24, 5, 0),
(8213, 14, 2, 24, 4, 2),
(8214, 35, 2, 24, 4, 1),
(8215, 17, 2, 24, 4, 1),
(8216, 2, 2, 24, 4, 0),
(8217, 3594, 2, 24, 4, 1),
(8218, 12, 2, 24, 4, 1),
(8219, 2165, 2, 24, 4, 1),
(8220, 4216, 2, 24, 4, 2),
(8221, 401, 2, 24, 4, 1),
(8222, 15, 2, 24, 4, 0),
(8223, 920, 2, 24, 4, 3),
(8224, 2401, 2, 24, 3, 2),
(8225, 192, 2, 24, 3, 3),
(8226, 2199, 2, 24, 3, 0),
(8227, 145, 2, 24, 3, 1),
(8228, 395, 2, 24, 3, 2),
(8229, 6, 2, 24, 3, 0),
(8230, 16, 2, 24, 3, 0),
(8231, 4217, 2, 24, 3, 1),
(8232, 4218, 2, 24, 3, 1),
(8233, 4219, 2, 24, 3, 1),
(8234, 789, 2, 24, 3, 3),
(8235, 99, 2, 24, 3, 2),
(8236, 932, 2, 24, 3, 3),
(8237, 883, 2, 24, 3, 1),
(8238, 1002, 2, 24, 3, 1),
(8239, 91, 2, 24, 3, 1),
(8240, 797, 2, 24, 3, 1),
(8241, 115, 2, 24, 3, 3),
(8242, 98, 2, 24, 3, 1),
(8243, 51, 2, 24, 3, 3),
(8244, 794, 2, 24, 3, 1),
(8245, 944, 2, 24, 3, 1),
(8246, 144, 2, 24, 3, 1),
(8247, 4220, 2, 24, 3, 1),
(8248, 61, 2, 24, 2, 1),
(8249, 1566, 2, 24, 2, 1),
(8250, 49, 2, 24, 2, 1),
(8251, 55, 2, 24, 2, 1),
(8252, 1238, 2, 24, 2, 2),
(8253, 4221, 2, 24, 2, 3),
(8254, 592, 2, 24, 2, 3),
(8255, 1846, 2, 24, 2, 1),
(8256, 2109, 2, 24, 2, 2),
(8257, 2152, 2, 24, 2, 2),
(8258, 3819, 2, 24, 2, 2),
(8259, 2645, 2, 24, 2, 1),
(8260, 2318, 2, 24, 2, 3),
(8261, 897, 2, 24, 2, 2),
(8262, 4222, 2, 24, 2, 1),
(8263, 4223, 2, 24, 2, 1),
(8264, 936, 2, 24, 2, 1),
(8265, 4224, 2, 24, 2, 1),
(8266, 1330, 2, 24, 2, 2),
(8267, 1331, 2, 24, 2, 2),
(8268, 65, 2, 24, 2, 0),
(8269, 23, 2, 24, 2, 2),
(8270, 4225, 2, 24, 2, 3),
(8271, 1338, 2, 24, 2, 3),
(8272, 1278, 2, 24, 2, 3),
(8273, 4226, 2, 24, 2, 1),
(8274, 4227, 2, 24, 2, 1),
(8275, 4228, 2, 24, 2, 3),
(8276, 62, 2, 24, 2, 1),
(8277, 4229, 2, 24, 2, 2),
(8278, 1214, 2, 24, 2, 3),
(8279, 22, 2, 24, 2, 0),
(8280, 4230, 2, 24, 2, 3),
(8281, 1833, 2, 24, 2, 2),
(8282, 4231, 2, 24, 2, 2),
(8283, 3861, 2, 24, 2, 1),
(8284, 153, 2, 24, 2, 1),
(8285, 4232, 2, 24, 2, 1),
(8286, 961, 2, 24, 2, 1),
(8287, 4233, 2, 24, 2, 3),
(8288, 4234, 2, 24, 2, 3),
(8289, 2562, 2, 24, 2, 1),
(8290, 4235, 2, 24, 2, 1),
(8291, 79, 2, 24, 2, 0),
(8292, 4236, 2, 24, 2, 3),
(8293, 4237, 2, 24, 2, 3),
(8294, 74, 2, 24, 2, 0),
(8295, 4199, 2, 24, 2, 3),
(8296, 20, 2, 24, 2, 0),
(8297, 472, 2, 24, 2, 2),
(8298, 2092, 2, 24, 2, 2),
(8299, 1896, 2, 24, 2, 2),
(8300, 25, 2, 24, 2, 0),
(8301, 773, 2, 24, 2, 1),
(8302, 1601, 2, 24, 2, 3),
(8303, 56, 2, 24, 2, 1),
(8304, 116, 2, 24, 2, 3),
(8305, 31, 2, 24, 2, 0),
(8306, 250, 2, 24, 2, 2),
(8307, 154, 2, 24, 2, 0),
(8308, 70, 2, 24, 2, 1),
(8309, 4238, 2, 24, 1, 2),
(8310, 907, 2, 24, 1, 2),
(8311, 4239, 2, 24, 1, 2),
(8312, 4240, 2, 24, 1, 1),
(8313, 4241, 2, 24, 1, 1),
(8314, 4242, 2, 24, 1, 1),
(8315, 4243, 2, 24, 1, 1),
(8316, 2179, 2, 24, 1, 1),
(8317, 325, 2, 24, 1, 3),
(8318, 4244, 2, 24, 1, 1),
(8319, 183, 2, 24, 1, 1),
(8320, 634, 2, 24, 1, 3),
(8321, 4245, 2, 24, 1, 1),
(8322, 4246, 2, 24, 1, 1),
(8323, 4247, 2, 24, 1, 1),
(8324, 4248, 2, 24, 1, 1),
(8325, 1750, 2, 24, 1, 1),
(8326, 4249, 2, 24, 1, 1),
(8327, 152, 2, 24, 1, 3),
(8328, 158, 2, 24, 1, 1),
(8329, 4250, 2, 24, 1, 1),
(8330, 4251, 2, 24, 1, 1),
(8331, 723, 2, 24, 1, 3),
(8332, 182, 2, 24, 1, 2),
(8333, 444, 2, 24, 1, 1),
(8334, 352, 2, 24, 1, 1),
(8335, 274, 2, 24, 1, 1),
(8336, 1027, 2, 24, 1, 3),
(8337, 1039, 2, 24, 1, 2),
(8338, 4252, 2, 24, 1, 3),
(8339, 666, 2, 24, 1, 3),
(8340, 2692, 2, 24, 1, 1),
(8341, 4253, 2, 24, 1, 1),
(8342, 4254, 2, 24, 1, 1),
(8343, 39, 2, 24, 1, 3),
(8344, 4255, 2, 24, 1, 1),
(8345, 531, 2, 24, 1, 2),
(8346, 214, 2, 24, 1, 3),
(8347, 2010, 2, 24, 1, 2),
(8348, 247, 2, 24, 1, 2),
(8349, 923, 2, 24, 1, 3),
(8350, 4256, 2, 24, 1, 3),
(8351, 2300, 2, 24, 1, 3),
(8352, 4257, 2, 24, 1, 1),
(8353, 4258, 2, 24, 1, 1),
(8354, 898, 2, 24, 1, 1),
(8355, 3582, 2, 24, 1, 1),
(8356, 4259, 2, 24, 1, 1),
(8357, 727, 2, 24, 1, 3),
(8358, 4260, 2, 24, 1, 3),
(8359, 4261, 2, 24, 1, 1),
(8360, 4262, 2, 24, 1, 1),
(8361, 4263, 2, 24, 1, 3),
(8362, 899, 2, 24, 1, 3),
(8363, 329, 2, 24, 1, 0),
(8364, 184, 2, 24, 1, 1),
(8365, 1537, 2, 24, 1, 1),
(8366, 4264, 2, 24, 1, 3),
(8367, 2836, 2, 24, 1, 1),
(8368, 590, 2, 24, 1, 1),
(8369, 4265, 2, 24, 1, 1),
(8370, 3724, 2, 24, 1, 1),
(8371, 1019, 2, 24, 1, 2),
(8372, 4266, 2, 24, 1, 3),
(8373, 4267, 2, 24, 1, 1),
(8374, 4268, 2, 24, 1, 1),
(8375, 1354, 2, 24, 1, 1),
(8376, 36, 2, 24, 1, 1),
(8377, 4269, 2, 24, 1, 2),
(8378, 4270, 2, 24, 1, 2),
(8379, 677, 2, 24, 1, 0),
(8380, 1464, 2, 24, 1, 3),
(8381, 1017, 2, 24, 1, 3),
(8382, 4271, 2, 24, 1, 3),
(8383, 4272, 2, 24, 1, 3),
(8384, 1737, 2, 24, 1, 2),
(8385, 996, 2, 24, 1, 1),
(8386, 29, 2, 24, 1, 2),
(8387, 4273, 2, 24, 1, 3),
(8388, 844, 2, 24, 1, 0),
(8389, 4274, 2, 24, 1, 1),
(8390, 4275, 2, 24, 1, 1),
(8391, 4276, 2, 24, 1, 2),
(8392, 2372, 2, 24, 1, 3),
(8393, 4277, 2, 24, 1, 3),
(8394, 4278, 2, 24, 1, 1),
(8395, 2819, 2, 24, 1, 1),
(8396, 4279, 2, 24, 1, 1),
(8397, 652, 2, 24, 1, 3),
(8398, 4280, 2, 24, 1, 1),
(8399, 327, 2, 24, 1, 1),
(8400, 4281, 2, 24, 1, 1),
(8401, 4282, 2, 24, 1, 1),
(8402, 3837, 2, 24, 1, 0),
(8403, 4283, 2, 24, 1, 1),
(8404, 4284, 2, 24, 1, 1),
(8405, 4285, 2, 24, 1, 1),
(8406, 4286, 2, 24, 1, 1),
(8407, 490, 2, 24, 1, 2),
(8408, 4287, 2, 24, 1, 1);
INSERT INTO `indices` (`id`, `word_id`, `table_id`, `table_index`, `rating_reps`, `weight`) VALUES
(8409, 4288, 2, 24, 1, 1),
(8410, 2529, 2, 24, 1, 3),
(8411, 4289, 2, 24, 1, 1),
(8412, 4290, 2, 24, 1, 1),
(8413, 1350, 2, 24, 1, 3),
(8414, 2899, 2, 24, 1, 2),
(8415, 4291, 2, 24, 1, 2),
(8416, 18, 2, 24, 1, 1),
(8417, 1033, 2, 24, 1, 1),
(8418, 1890, 2, 24, 1, 3),
(8419, 4292, 2, 24, 1, 3),
(8420, 3596, 2, 24, 1, 2),
(8421, 3781, 2, 24, 1, 3),
(8422, 4293, 2, 24, 1, 1),
(8423, 1570, 2, 24, 1, 1),
(8424, 2636, 2, 24, 1, 3),
(8425, 1348, 2, 24, 1, 2),
(8426, 2904, 2, 24, 1, 1),
(8427, 3758, 2, 24, 1, 1),
(8428, 1531, 2, 24, 1, 2),
(8429, 550, 2, 24, 1, 3),
(8430, 1371, 2, 24, 1, 1),
(8431, 1582, 2, 24, 1, 1),
(8432, 30, 2, 24, 1, 2),
(8433, 4294, 2, 24, 1, 3),
(8434, 4295, 2, 24, 1, 1),
(8435, 4296, 2, 24, 1, 1),
(8436, 1560, 2, 24, 1, 3),
(8437, 4297, 2, 24, 1, 3),
(8438, 1711, 2, 24, 1, 1),
(8439, 1509, 2, 24, 1, 3),
(8440, 1437, 2, 24, 1, 2),
(8441, 141, 2, 24, 1, 3),
(8442, 783, 2, 24, 1, 3),
(8443, 4086, 2, 24, 1, 1),
(8444, 519, 2, 24, 1, 0),
(8445, 609, 2, 24, 1, 2),
(8446, 4298, 2, 24, 1, 2),
(8447, 4299, 2, 24, 1, 1),
(8448, 4300, 2, 24, 1, 1),
(8449, 4137, 2, 24, 1, 3),
(8450, 419, 2, 24, 1, 2),
(8451, 4301, 2, 24, 1, 1),
(8452, 4302, 2, 24, 1, 3),
(8453, 3034, 2, 24, 1, 2),
(8454, 3882, 2, 24, 1, 3),
(8455, 19, 2, 24, 1, 3),
(8456, 3038, 2, 24, 1, 3),
(8457, 1388, 2, 24, 1, 3),
(8458, 2449, 2, 24, 1, 3),
(8459, 3161, 2, 24, 1, 3),
(8460, 2256, 2, 24, 1, 1),
(8461, 3789, 2, 24, 1, 2),
(8462, 3516, 2, 24, 1, 2),
(8463, 105, 2, 24, 1, 3),
(8464, 4303, 2, 24, 1, 3),
(8465, 3249, 2, 24, 1, 1),
(8466, 1208, 2, 24, 1, 1),
(8467, 1106, 2, 24, 1, 1),
(8468, 3427, 2, 24, 1, 1),
(8469, 4304, 2, 24, 1, 3),
(8470, 38, 2, 24, 1, 3),
(8471, 1202, 2, 24, 1, 3),
(8472, 225, 2, 24, 1, 1),
(8473, 2088, 2, 24, 1, 2),
(8474, 4305, 2, 24, 1, 1),
(8475, 4306, 2, 24, 1, 2),
(8476, 1303, 2, 24, 1, 1),
(8477, 4307, 2, 24, 1, 1),
(8478, 4308, 2, 24, 1, 3),
(8479, 3901, 2, 24, 1, 3),
(8480, 207, 2, 24, 1, 3),
(8481, 4309, 2, 24, 1, 3),
(8482, 1020, 2, 24, 1, 3),
(8483, 4310, 2, 24, 1, 1),
(8484, 4311, 2, 24, 1, 3),
(8485, 4312, 2, 24, 1, 1),
(8486, 4313, 2, 24, 1, 1),
(8487, 4314, 2, 24, 1, 1),
(8488, 4315, 2, 24, 1, 1),
(8489, 4316, 2, 24, 1, 2),
(8490, 396, 2, 24, 1, 1),
(8491, 4317, 2, 24, 1, 3),
(8492, 4318, 2, 24, 1, 3),
(8493, 1802, 2, 24, 1, 3),
(8494, 310, 2, 24, 1, 2),
(8495, 4319, 2, 24, 1, 2),
(8496, 1339, 2, 24, 1, 1),
(8497, 33, 2, 24, 1, 3),
(8498, 4320, 2, 24, 1, 2),
(8499, 132, 2, 24, 1, 1),
(8500, 4321, 2, 24, 1, 1),
(8501, 3920, 2, 24, 1, 3),
(8502, 2663, 2, 24, 1, 1),
(8503, 202, 2, 24, 1, 0),
(8504, 1545, 2, 24, 1, 3),
(8505, 3462, 2, 24, 1, 1),
(8506, 4322, 2, 24, 1, 2),
(8507, 4323, 2, 24, 1, 1),
(8508, 1943, 2, 24, 1, 2),
(8509, 166, 2, 24, 1, 2),
(8510, 262, 2, 24, 1, 1),
(8511, 4324, 2, 24, 1, 3),
(8512, 4325, 2, 24, 1, 3),
(8513, 278, 2, 24, 1, 1),
(8514, 2106, 2, 24, 1, 2),
(8515, 761, 2, 24, 1, 3),
(8516, 4326, 2, 24, 1, 1),
(8517, 4327, 2, 24, 1, 3),
(8518, 63, 2, 24, 1, 1),
(8519, 824, 2, 24, 1, 2),
(8520, 3834, 2, 24, 1, 3),
(8521, 4328, 2, 24, 1, 3),
(8522, 4329, 2, 24, 1, 3),
(8523, 1515, 2, 24, 1, 3),
(8524, 40, 2, 24, 1, 3),
(8525, 181, 2, 24, 1, 3),
(8526, 4330, 2, 24, 1, 3),
(8527, 266, 2, 24, 1, 0),
(8528, 1602, 2, 24, 1, 1),
(8529, 215, 2, 24, 1, 0),
(8530, 2008, 2, 24, 1, 3),
(8531, 2035, 2, 24, 1, 2),
(8532, 4331, 2, 24, 1, 1),
(8533, 4332, 2, 24, 1, 1),
(8534, 4333, 2, 24, 1, 1),
(8535, 4334, 2, 24, 1, 1),
(8536, 101, 2, 24, 1, 2),
(8537, 24, 2, 24, 1, 2),
(8538, 34, 2, 24, 1, 0),
(8539, 608, 2, 24, 1, 1),
(8540, 425, 2, 24, 1, 3),
(8541, 888, 2, 24, 1, 3),
(8542, 4335, 2, 24, 1, 2),
(8543, 4336, 2, 24, 1, 2),
(8544, 4337, 2, 24, 1, 2),
(8545, 1434, 2, 24, 1, 1),
(8546, 7, 2, 25, 7, 0),
(8547, 3, 2, 25, 3, 0),
(8548, 17, 2, 25, 2, 1),
(8549, 3781, 2, 25, 2, 3),
(8550, 72, 2, 25, 2, 0),
(8551, 4338, 2, 25, 2, 3),
(8552, 153, 2, 25, 2, 1),
(8553, 189, 2, 25, 2, 0),
(8554, 41, 2, 25, 2, 0),
(8555, 732, 2, 25, 2, 3),
(8556, 185, 2, 25, 2, 3),
(8557, 3594, 2, 25, 2, 1),
(8558, 121, 2, 25, 1, 2),
(8559, 612, 2, 25, 1, 3),
(8560, 1891, 2, 25, 1, 1),
(8561, 21, 2, 25, 1, 0),
(8562, 4339, 2, 25, 1, 2),
(8563, 4340, 2, 25, 1, 2),
(8564, 1334, 2, 25, 1, 2),
(8565, 77, 2, 25, 1, 1),
(8566, 76, 2, 25, 1, 1),
(8567, 4341, 2, 25, 1, 1),
(8568, 65, 2, 25, 1, 0),
(8569, 4342, 2, 25, 1, 3),
(8570, 797, 2, 25, 1, 1),
(8571, 3953, 2, 25, 1, 1),
(8572, 3141, 2, 25, 1, 3),
(8573, 15, 2, 25, 1, 0),
(8574, 9, 2, 25, 1, 2),
(8575, 395, 2, 25, 1, 2),
(8576, 1887, 2, 25, 1, 3),
(8577, 2278, 2, 25, 1, 1),
(8578, 74, 2, 25, 1, 0),
(8579, 70, 2, 25, 1, 1),
(8580, 1190, 2, 25, 1, 2),
(8581, 46, 2, 25, 1, 1),
(8582, 5, 2, 25, 1, 0),
(8583, 3249, 2, 25, 1, 1),
(8584, 1485, 2, 25, 1, 1),
(8585, 531, 2, 25, 1, 2),
(8586, 331, 2, 25, 1, 2),
(8587, 62, 2, 25, 1, 1),
(8588, 611, 2, 25, 1, 1),
(8589, 604, 2, 25, 1, 2),
(8590, 4343, 2, 25, 1, 2),
(8591, 1574, 2, 25, 1, 3),
(8592, 152, 2, 25, 1, 3),
(8593, 773, 2, 25, 1, 1),
(8594, 451, 2, 25, 1, 3),
(8595, 675, 2, 25, 1, 2),
(8596, 114, 2, 25, 1, 2),
(8597, 563, 2, 25, 1, 1),
(8598, 4344, 2, 25, 1, 3),
(8599, 4345, 2, 25, 1, 3),
(8600, 318, 2, 25, 1, 2),
(8601, 4346, 2, 25, 1, 3),
(8602, 3832, 2, 25, 1, 1),
(8603, 4347, 2, 25, 1, 1),
(8604, 24, 2, 25, 1, 2),
(8605, 1496, 2, 25, 1, 3),
(8606, 4348, 2, 25, 1, 3),
(8607, 202, 2, 25, 1, 0),
(8608, 364, 2, 25, 1, 3),
(8609, 352, 2, 25, 1, 1),
(8610, 1002, 2, 25, 1, 1),
(8611, 12, 2, 25, 1, 1),
(8612, 4349, 2, 25, 1, 3),
(8613, 4350, 2, 25, 1, 1),
(8614, 20, 2, 25, 1, 0),
(8615, 1419, 2, 25, 1, 0),
(8616, 450, 2, 25, 1, 1),
(8617, 4351, 2, 25, 1, 3),
(8618, 999, 2, 25, 1, 3),
(8619, 16, 2, 25, 1, 0),
(8620, 28, 2, 25, 1, 0),
(8621, 396, 2, 25, 1, 1),
(8622, 1784, 2, 25, 1, 3),
(8623, 4352, 2, 25, 1, 3),
(8624, 389, 2, 25, 1, 1),
(8625, 79, 2, 25, 1, 0),
(8626, 602, 2, 25, 1, 3),
(8627, 4353, 2, 25, 1, 1),
(8628, 4354, 2, 25, 1, 2),
(8629, 592, 2, 25, 1, 3),
(8630, 55, 2, 25, 1, 1),
(8631, 1388, 2, 25, 1, 3),
(8632, 907, 2, 25, 1, 2),
(8633, 1849, 2, 25, 1, 3),
(8634, 778, 2, 25, 1, 3),
(8635, 3629, 2, 25, 1, 1),
(8636, 117, 2, 25, 1, 1),
(8637, 7, 2, 26, 7, 0),
(8638, 2, 2, 26, 6, 0),
(8639, 3, 2, 26, 6, 0),
(8640, 1, 2, 26, 6, 0),
(8641, 5, 2, 26, 6, 0),
(8642, 882, 2, 26, 5, 0),
(8643, 3781, 2, 26, 5, 3),
(8644, 189, 2, 26, 4, 0),
(8645, 17, 2, 26, 4, 1),
(8646, 4355, 2, 26, 4, 1),
(8647, 35, 2, 26, 4, 1),
(8648, 4356, 2, 26, 3, 1),
(8649, 592, 2, 26, 3, 3),
(8650, 3594, 2, 26, 3, 1),
(8651, 4357, 2, 26, 3, 1),
(8652, 12, 2, 26, 3, 1),
(8653, 9, 2, 26, 3, 2),
(8654, 41, 2, 26, 3, 0),
(8655, 4358, 2, 26, 3, 1),
(8656, 90, 2, 26, 3, 1),
(8657, 62, 2, 26, 2, 1),
(8658, 116, 2, 26, 2, 3),
(8659, 34, 2, 26, 2, 0),
(8660, 51, 2, 26, 2, 3),
(8661, 692, 2, 26, 2, 0),
(8662, 1009, 2, 26, 2, 3),
(8663, 14, 2, 26, 2, 2),
(8664, 450, 2, 26, 2, 1),
(8665, 310, 2, 26, 2, 2),
(8666, 783, 2, 26, 2, 3),
(8667, 28, 2, 26, 2, 0),
(8668, 1208, 2, 26, 2, 1),
(8669, 3249, 2, 26, 2, 1),
(8670, 56, 2, 26, 2, 1),
(8671, 153, 2, 26, 2, 1),
(8672, 32, 2, 26, 2, 1),
(8673, 759, 2, 26, 2, 2),
(8674, 6, 2, 26, 2, 0),
(8675, 1419, 2, 26, 2, 0),
(8676, 202, 2, 26, 2, 0),
(8677, 184, 2, 26, 2, 1),
(8678, 1010, 2, 26, 2, 2),
(8679, 282, 2, 26, 2, 3),
(8680, 360, 2, 26, 2, 3),
(8681, 70, 2, 26, 2, 1),
(8682, 1896, 2, 26, 2, 2),
(8683, 2401, 2, 26, 2, 2),
(8684, 103, 2, 26, 2, 3),
(8685, 4359, 2, 26, 1, 1),
(8686, 4067, 2, 26, 1, 2),
(8687, 3023, 2, 26, 1, 3),
(8688, 378, 2, 26, 1, 0),
(8689, 182, 2, 26, 1, 2),
(8690, 454, 2, 26, 1, 2),
(8691, 439, 2, 26, 1, 3),
(8692, 183, 2, 26, 1, 1),
(8693, 352, 2, 26, 1, 1),
(8694, 897, 2, 26, 1, 2),
(8695, 3882, 2, 26, 1, 3),
(8696, 1528, 2, 26, 1, 1),
(8697, 4360, 2, 26, 1, 1),
(8698, 693, 2, 26, 1, 3),
(8699, 4361, 2, 26, 1, 3),
(8700, 2642, 2, 26, 1, 2),
(8701, 3561, 2, 26, 1, 3),
(8702, 389, 2, 26, 1, 1),
(8703, 773, 2, 26, 1, 1),
(8704, 3516, 2, 26, 1, 2),
(8705, 1113, 2, 26, 1, 3),
(8706, 24, 2, 26, 1, 2),
(8707, 3038, 2, 26, 1, 3),
(8708, 657, 2, 26, 1, 1),
(8709, 4362, 2, 26, 1, 1),
(8710, 4363, 2, 26, 1, 3),
(8711, 4364, 2, 26, 1, 1),
(8712, 4344, 2, 26, 1, 3),
(8713, 315, 2, 26, 1, 2),
(8714, 4365, 2, 26, 1, 3),
(8715, 18, 2, 26, 1, 1),
(8716, 114, 2, 26, 1, 2),
(8717, 274, 2, 26, 1, 1),
(8718, 4366, 2, 26, 1, 3),
(8719, 3966, 2, 26, 1, 2),
(8720, 16, 2, 26, 1, 0),
(8721, 302, 2, 26, 1, 2),
(8722, 3121, 2, 26, 1, 3),
(8723, 3180, 2, 26, 1, 3),
(8724, 2088, 2, 26, 1, 2),
(8725, 4367, 2, 26, 1, 1),
(8726, 481, 2, 26, 1, 1),
(8727, 3173, 2, 26, 1, 1),
(8728, 471, 2, 26, 1, 1),
(8729, 3819, 2, 26, 1, 2),
(8730, 44, 2, 26, 1, 3),
(8731, 4368, 2, 26, 1, 1),
(8732, 1000, 2, 26, 1, 3),
(8733, 65, 2, 26, 1, 0),
(8734, 4369, 2, 26, 1, 3),
(8735, 21, 2, 26, 1, 0),
(8736, 3356, 2, 26, 1, 3),
(8737, 4370, 2, 26, 1, 1),
(8738, 550, 2, 26, 1, 3),
(8739, 3976, 2, 26, 1, 2),
(8740, 4371, 2, 26, 1, 3),
(8741, 2256, 2, 26, 1, 1),
(8742, 4372, 2, 26, 1, 3),
(8743, 4373, 2, 26, 1, 1),
(8744, 4374, 2, 26, 1, 1),
(8745, 86, 2, 26, 1, 3),
(8746, 4375, 2, 26, 1, 2),
(8747, 77, 2, 26, 1, 1),
(8748, 3113, 2, 26, 1, 2),
(8749, 3028, 2, 26, 1, 1),
(8750, 2092, 2, 26, 1, 2),
(8751, 49, 2, 26, 1, 1),
(8752, 294, 2, 26, 1, 2),
(8753, 172, 2, 26, 1, 1),
(8754, 888, 2, 26, 1, 3),
(8755, 4376, 2, 26, 1, 1),
(8756, 1784, 2, 26, 1, 3),
(8757, 756, 2, 26, 1, 3),
(8758, 1199, 2, 26, 1, 3),
(8759, 76, 2, 26, 1, 1),
(8760, 652, 2, 26, 1, 3),
(8761, 61, 2, 26, 1, 1),
(8762, 79, 2, 26, 1, 0),
(8763, 732, 2, 26, 1, 3),
(8764, 4377, 2, 26, 1, 2),
(8765, 4302, 2, 26, 1, 3),
(8766, 4378, 2, 26, 1, 3),
(8767, 999, 2, 26, 1, 3),
(8768, 765, 2, 26, 1, 3),
(8769, 2143, 2, 26, 1, 3),
(8770, 4350, 2, 26, 1, 1),
(8771, 279, 2, 26, 1, 2),
(8772, 4351, 2, 26, 1, 3),
(8773, 1111, 2, 26, 1, 1),
(8774, 4379, 2, 26, 1, 1),
(8775, 3581, 2, 26, 1, 3),
(8776, 1781, 2, 26, 1, 0),
(8777, 4380, 2, 26, 1, 1),
(8778, 4381, 2, 26, 1, 3),
(8779, 4382, 2, 26, 1, 3),
(8780, 2554, 2, 26, 1, 3),
(8781, 186, 2, 26, 1, 1),
(8782, 1023, 2, 26, 1, 1),
(8783, 2278, 2, 26, 1, 1),
(8784, 1842, 2, 26, 1, 2),
(8785, 19, 2, 26, 1, 3),
(8786, 152, 2, 26, 1, 3),
(8787, 1574, 2, 26, 1, 3),
(8788, 2091, 2, 26, 1, 2),
(8789, 4383, 2, 26, 1, 1),
(8790, 2199, 2, 26, 1, 0),
(8791, 1506, 2, 26, 1, 1),
(8792, 63, 2, 26, 1, 1),
(8793, 4384, 2, 26, 1, 3),
(8794, 428, 2, 26, 1, 1),
(8795, 46, 2, 26, 1, 1),
(8796, 4385, 2, 26, 1, 3),
(8797, 22, 2, 26, 1, 0),
(8798, 1249, 2, 26, 1, 3),
(8799, 31, 2, 26, 1, 0),
(8800, 195, 2, 26, 1, 0),
(8801, 2808, 2, 26, 1, 3),
(8802, 72, 2, 26, 1, 0),
(8803, 3600, 2, 26, 1, 3),
(8804, 146, 2, 26, 1, 1),
(8805, 4386, 2, 26, 1, 3),
(8806, 1473, 2, 26, 1, 1),
(8807, 3492, 2, 26, 1, 2),
(8808, 15, 2, 26, 1, 0),
(8809, 4387, 2, 26, 1, 1),
(8810, 416, 2, 26, 1, 3),
(8811, 1243, 2, 26, 1, 1),
(8812, 4388, 2, 26, 1, 3),
(8813, 1570, 2, 26, 1, 1),
(8814, 207, 2, 26, 1, 3),
(8815, 3391, 2, 26, 1, 2),
(8816, 2319, 2, 26, 1, 1),
(8817, 1, 2, 27, 27, 0),
(8818, 3, 2, 27, 27, 0),
(8819, 25, 2, 27, 15, 0),
(8820, 14, 2, 27, 13, 2),
(8821, 7, 2, 27, 12, 0),
(8822, 17, 2, 27, 11, 1),
(8823, 5, 2, 27, 10, 0),
(8824, 902, 2, 27, 10, 3),
(8825, 214, 2, 27, 9, 3),
(8826, 144, 2, 27, 9, 1),
(8827, 52, 2, 27, 9, 1),
(8828, 18, 2, 27, 9, 1),
(8829, 6, 2, 27, 8, 0),
(8830, 76, 2, 27, 8, 1),
(8831, 1075, 2, 27, 7, 1),
(8832, 4389, 2, 27, 7, 1),
(8833, 3088, 2, 27, 7, 3),
(8834, 2, 2, 27, 7, 0),
(8835, 205, 2, 27, 7, 3),
(8836, 28, 2, 27, 7, 0),
(8837, 19, 2, 27, 7, 3),
(8838, 271, 2, 27, 7, 1),
(8839, 9, 2, 27, 7, 2),
(8840, 56, 2, 27, 6, 1),
(8841, 16, 2, 27, 6, 0),
(8842, 3781, 2, 27, 6, 3),
(8843, 79, 2, 27, 6, 0),
(8844, 23, 2, 27, 6, 2),
(8845, 883, 2, 27, 6, 1),
(8846, 1399, 2, 27, 5, 1),
(8847, 37, 2, 27, 5, 3),
(8848, 592, 2, 27, 5, 3),
(8849, 77, 2, 27, 5, 1),
(8850, 55, 2, 27, 5, 1),
(8851, 4390, 2, 27, 5, 1),
(8852, 4391, 2, 27, 5, 1),
(8853, 4069, 2, 27, 5, 1),
(8854, 4392, 2, 27, 5, 1),
(8855, 36, 2, 27, 5, 1),
(8856, 38, 2, 27, 5, 3),
(8857, 696, 2, 27, 5, 2),
(8858, 115, 2, 27, 4, 3),
(8859, 310, 2, 27, 4, 2),
(8860, 12, 2, 27, 4, 1),
(8861, 732, 2, 27, 4, 3),
(8862, 4152, 2, 27, 4, 3),
(8863, 2173, 2, 27, 4, 1),
(8864, 1705, 2, 27, 4, 1),
(8865, 870, 2, 27, 4, 1),
(8866, 4068, 2, 27, 4, 1),
(8867, 41, 2, 27, 4, 0),
(8868, 215, 2, 27, 4, 0),
(8869, 35, 2, 27, 4, 1),
(8870, 2350, 2, 27, 4, 1),
(8871, 4084, 2, 27, 4, 3),
(8872, 152, 2, 27, 4, 3),
(8873, 4393, 2, 27, 4, 1),
(8874, 4394, 2, 27, 4, 3),
(8875, 4395, 2, 27, 4, 1),
(8876, 3675, 2, 27, 4, 1),
(8877, 449, 2, 27, 3, 3),
(8878, 1545, 2, 27, 3, 3),
(8879, 4396, 2, 27, 3, 1),
(8880, 4397, 2, 27, 3, 1),
(8881, 49, 2, 27, 3, 1),
(8882, 61, 2, 27, 3, 1),
(8883, 999, 2, 27, 3, 3),
(8884, 202, 2, 27, 3, 0),
(8885, 170, 2, 27, 3, 1),
(8886, 4398, 2, 27, 3, 3),
(8887, 1214, 2, 27, 3, 3),
(8888, 1007, 2, 27, 3, 3),
(8889, 24, 2, 27, 3, 2),
(8890, 1274, 2, 27, 3, 1),
(8891, 522, 2, 27, 3, 1),
(8892, 21, 2, 27, 3, 0),
(8893, 4, 2, 27, 3, 0),
(8894, 2142, 2, 27, 3, 1),
(8895, 74, 2, 27, 3, 0),
(8896, 4399, 2, 27, 3, 1),
(8897, 117, 2, 27, 3, 1),
(8898, 3610, 2, 27, 3, 1),
(8899, 401, 2, 27, 3, 1),
(8900, 4400, 2, 27, 3, 1),
(8901, 3915, 2, 27, 3, 3),
(8902, 4158, 2, 27, 3, 1),
(8903, 182, 2, 27, 3, 2),
(8904, 396, 2, 27, 3, 1),
(8905, 116, 2, 27, 3, 3),
(8906, 327, 2, 27, 3, 1),
(8907, 1348, 2, 27, 3, 2),
(8908, 44, 2, 27, 3, 3),
(8909, 30, 2, 27, 3, 2),
(8910, 1576, 2, 27, 3, 3),
(8911, 3594, 2, 27, 3, 1),
(8912, 4074, 2, 27, 2, 1),
(8913, 4072, 2, 27, 2, 1),
(8914, 4401, 2, 27, 2, 1),
(8915, 4402, 2, 27, 2, 1),
(8916, 2638, 2, 27, 2, 1),
(8917, 1102, 2, 27, 2, 1),
(8918, 4403, 2, 27, 2, 1),
(8919, 909, 2, 27, 2, 3),
(8920, 364, 2, 27, 2, 3),
(8921, 4404, 2, 27, 2, 1),
(8922, 1711, 2, 27, 2, 1),
(8923, 72, 2, 27, 2, 0),
(8924, 2143, 2, 27, 2, 3),
(8925, 4075, 2, 27, 2, 1),
(8926, 4405, 2, 27, 2, 1),
(8927, 189, 2, 27, 2, 0),
(8928, 4406, 2, 27, 2, 1),
(8929, 1190, 2, 27, 2, 2),
(8930, 133, 2, 27, 2, 1),
(8931, 1003, 2, 27, 2, 1),
(8932, 70, 2, 27, 2, 1),
(8933, 907, 2, 27, 2, 2),
(8934, 4407, 2, 27, 2, 3),
(8935, 4344, 2, 27, 2, 3),
(8936, 817, 2, 27, 2, 2),
(8937, 2136, 2, 27, 2, 3),
(8938, 3984, 2, 27, 2, 2),
(8939, 450, 2, 27, 2, 1),
(8940, 578, 2, 27, 2, 1),
(8941, 203, 2, 27, 2, 1),
(8942, 3757, 2, 27, 2, 1),
(8943, 4081, 2, 27, 2, 1),
(8944, 11, 2, 27, 2, 1),
(8945, 1718, 2, 27, 2, 3),
(8946, 4079, 2, 27, 2, 1),
(8947, 101, 2, 27, 2, 2),
(8948, 65, 2, 27, 2, 0),
(8949, 153, 2, 27, 2, 1),
(8950, 4408, 2, 27, 2, 1),
(8951, 88, 2, 27, 2, 1),
(8952, 1388, 2, 27, 2, 3),
(8953, 124, 2, 27, 2, 2),
(8954, 944, 2, 27, 2, 1),
(8955, 2245, 2, 27, 2, 3),
(8956, 932, 2, 27, 2, 3),
(8957, 1693, 2, 27, 2, 0),
(8958, 4409, 2, 27, 2, 1),
(8959, 2924, 2, 27, 2, 3),
(8960, 4242, 2, 27, 2, 1),
(8961, 893, 2, 27, 2, 1),
(8962, 1415, 2, 27, 2, 1),
(8963, 4410, 2, 27, 2, 3),
(8964, 889, 2, 27, 2, 1),
(8965, 4411, 2, 27, 2, 1),
(8966, 4412, 2, 27, 2, 1),
(8967, 4413, 2, 27, 2, 1),
(8968, 1876, 2, 27, 2, 1),
(8969, 278, 2, 27, 2, 1),
(8970, 1507, 2, 27, 2, 1),
(8971, 1176, 2, 27, 2, 1),
(8972, 45, 2, 27, 2, 2),
(8973, 4414, 2, 27, 2, 3),
(8974, 90, 2, 27, 2, 1),
(8975, 168, 2, 27, 2, 0),
(8976, 2302, 2, 27, 2, 1),
(8977, 4415, 2, 27, 2, 1),
(8978, 3969, 2, 27, 2, 1),
(8979, 4416, 2, 27, 2, 3),
(8980, 20, 2, 27, 2, 0),
(8981, 146, 2, 27, 2, 1),
(8982, 1229, 2, 27, 2, 3),
(8983, 4111, 2, 27, 2, 1),
(8984, 4417, 2, 27, 2, 1),
(8985, 4418, 2, 27, 2, 1),
(8986, 4419, 2, 27, 2, 1),
(8987, 400, 2, 27, 2, 3),
(8988, 2329, 2, 27, 1, 3),
(8989, 4420, 2, 27, 1, 1),
(8990, 4421, 2, 27, 1, 1),
(8991, 1065, 2, 27, 1, 1),
(8992, 4422, 2, 27, 1, 1),
(8993, 486, 2, 27, 1, 1),
(8994, 4423, 2, 27, 1, 1),
(8995, 1430, 2, 27, 1, 2),
(8996, 1802, 2, 27, 1, 3),
(8997, 4424, 2, 27, 1, 1),
(8998, 4425, 2, 27, 1, 1),
(8999, 4426, 2, 27, 1, 1),
(9000, 4427, 2, 27, 1, 1),
(9001, 4428, 2, 27, 1, 1),
(9002, 4429, 2, 27, 1, 1),
(9003, 1114, 2, 27, 1, 3),
(9004, 4430, 2, 27, 1, 1),
(9005, 755, 2, 27, 1, 1),
(9006, 4431, 2, 27, 1, 1),
(9007, 4432, 2, 27, 1, 1),
(9008, 4433, 2, 27, 1, 1),
(9009, 422, 2, 27, 1, 1),
(9010, 4434, 2, 27, 1, 1),
(9011, 4435, 2, 27, 1, 1),
(9012, 4436, 2, 27, 1, 1),
(9013, 586, 2, 27, 1, 3),
(9014, 4437, 2, 27, 1, 3),
(9015, 4438, 2, 27, 1, 1),
(9016, 4439, 2, 27, 1, 1),
(9017, 4440, 2, 27, 1, 1),
(9018, 184, 2, 27, 1, 1),
(9019, 4441, 2, 27, 1, 1),
(9020, 4442, 2, 27, 1, 1),
(9021, 1051, 2, 27, 1, 1),
(9022, 4443, 2, 27, 1, 1),
(9023, 896, 2, 27, 1, 1),
(9024, 4444, 2, 27, 1, 1),
(9025, 4445, 2, 27, 1, 1),
(9026, 352, 2, 27, 1, 1),
(9027, 4446, 2, 27, 1, 1),
(9028, 4447, 2, 27, 1, 1),
(9029, 4448, 2, 27, 1, 1),
(9030, 805, 2, 27, 1, 1),
(9031, 464, 2, 27, 1, 3),
(9032, 4449, 2, 27, 1, 1),
(9033, 4450, 2, 27, 1, 1),
(9034, 22, 2, 27, 1, 0),
(9035, 1097, 2, 27, 1, 0),
(9036, 563, 2, 27, 1, 1),
(9037, 1238, 2, 27, 1, 2),
(9038, 4451, 2, 27, 1, 1),
(9039, 4452, 2, 27, 1, 1),
(9040, 4453, 2, 27, 1, 1),
(9041, 4454, 2, 27, 1, 1),
(9042, 4455, 2, 27, 1, 1),
(9043, 4456, 2, 27, 1, 1),
(9044, 1969, 2, 27, 1, 3),
(9045, 4457, 2, 27, 1, 1),
(9046, 4458, 2, 27, 1, 1),
(9047, 4459, 2, 27, 1, 1),
(9048, 4460, 2, 27, 1, 1),
(9049, 4461, 2, 27, 1, 1),
(9050, 4462, 2, 27, 1, 1),
(9051, 1686, 2, 27, 1, 0),
(9052, 108, 2, 27, 1, 1),
(9053, 4463, 2, 27, 1, 1),
(9054, 4464, 2, 27, 1, 1),
(9055, 872, 2, 27, 1, 2),
(9056, 1803, 2, 27, 1, 2),
(9057, 4465, 2, 27, 1, 2),
(9058, 4466, 2, 27, 1, 1),
(9059, 4467, 2, 27, 1, 1),
(9060, 4468, 2, 27, 1, 1),
(9061, 4469, 2, 27, 1, 1),
(9062, 2158, 2, 27, 1, 1),
(9063, 4470, 2, 27, 1, 1),
(9064, 2092, 2, 27, 1, 2),
(9065, 2107, 2, 27, 1, 2),
(9066, 923, 2, 27, 1, 3),
(9067, 4471, 2, 27, 1, 1),
(9068, 507, 2, 27, 1, 1),
(9069, 4472, 2, 27, 1, 1),
(9070, 4473, 2, 27, 1, 1),
(9071, 313, 2, 27, 1, 1),
(9072, 4474, 2, 27, 1, 1),
(9073, 4475, 2, 27, 1, 1),
(9074, 4476, 2, 27, 1, 1),
(9075, 1796, 2, 27, 1, 3),
(9076, 4477, 2, 27, 1, 1),
(9077, 2300, 2, 27, 1, 3),
(9078, 4478, 2, 27, 1, 1),
(9079, 4479, 2, 27, 1, 1),
(9080, 490, 2, 27, 1, 2),
(9081, 4480, 2, 27, 1, 1),
(9082, 4086, 2, 27, 1, 1),
(9083, 1376, 2, 27, 1, 3),
(9084, 4481, 2, 27, 1, 2),
(9085, 4482, 2, 27, 1, 1),
(9086, 4483, 2, 27, 1, 1),
(9087, 4484, 2, 27, 1, 1),
(9088, 4485, 2, 27, 1, 1),
(9089, 4486, 2, 27, 1, 1),
(9090, 2849, 2, 27, 1, 1),
(9091, 1113, 2, 27, 1, 3),
(9092, 2304, 2, 27, 1, 3),
(9093, 1122, 2, 27, 1, 3),
(9094, 4487, 2, 27, 1, 3),
(9095, 1010, 2, 27, 1, 2),
(9096, 78, 2, 27, 1, 1),
(9097, 4488, 2, 27, 1, 3),
(9098, 789, 2, 27, 1, 3),
(9099, 4489, 2, 27, 1, 1),
(9100, 4490, 2, 27, 1, 1),
(9101, 3796, 2, 27, 1, 1),
(9102, 4491, 2, 27, 1, 1),
(9103, 4492, 2, 27, 1, 1),
(9104, 4493, 2, 27, 1, 1),
(9105, 2164, 2, 27, 1, 3),
(9106, 308, 2, 27, 1, 3),
(9107, 4494, 2, 27, 1, 3),
(9108, 4495, 2, 27, 1, 1),
(9109, 4496, 2, 27, 1, 1),
(9110, 4497, 2, 27, 1, 1),
(9111, 4498, 2, 27, 1, 1),
(9112, 996, 2, 27, 1, 1),
(9113, 4499, 2, 27, 1, 2),
(9114, 4500, 2, 27, 1, 3),
(9115, 4501, 2, 27, 1, 1),
(9116, 4502, 2, 27, 1, 1),
(9117, 4503, 2, 27, 1, 1),
(9118, 4504, 2, 27, 1, 1),
(9119, 4505, 2, 27, 1, 1),
(9120, 4506, 2, 27, 1, 1),
(9121, 4507, 2, 27, 1, 1),
(9122, 247, 2, 27, 1, 2),
(9123, 4508, 2, 27, 1, 1),
(9124, 1357, 2, 27, 1, 2),
(9125, 4509, 2, 27, 1, 3),
(9126, 15, 2, 27, 1, 0),
(9127, 4510, 2, 27, 1, 1),
(9128, 884, 2, 27, 1, 3),
(9129, 1347, 2, 27, 1, 0),
(9130, 4511, 2, 27, 1, 1),
(9131, 4148, 2, 27, 1, 1),
(9132, 4512, 2, 27, 1, 1),
(9133, 282, 2, 27, 1, 3),
(9134, 2938, 2, 27, 1, 1),
(9135, 4513, 2, 27, 1, 1),
(9136, 3173, 2, 27, 1, 1),
(9137, 1217, 2, 27, 1, 3),
(9138, 742, 2, 27, 1, 3),
(9139, 1470, 2, 27, 1, 3),
(9140, 3747, 2, 27, 1, 3),
(9141, 4514, 2, 27, 1, 1),
(9142, 726, 2, 27, 1, 3),
(9143, 4515, 2, 27, 1, 1),
(9144, 331, 2, 27, 1, 2),
(9145, 1019, 2, 27, 1, 2),
(9146, 2216, 2, 27, 1, 1),
(9147, 459, 2, 27, 1, 2),
(9148, 4516, 2, 27, 1, 1),
(9149, 2174, 2, 27, 1, 3),
(9150, 356, 2, 27, 1, 1),
(9151, 3850, 2, 27, 1, 1),
(9152, 3209, 2, 27, 1, 3),
(9153, 50, 2, 27, 1, 3),
(9154, 1381, 2, 27, 1, 3),
(9155, 3822, 2, 27, 1, 3),
(9156, 4517, 2, 27, 1, 3),
(9157, 2796, 2, 27, 1, 3),
(9158, 4518, 2, 27, 1, 1),
(9159, 3825, 2, 27, 1, 1),
(9160, 4519, 2, 27, 1, 1),
(9161, 4062, 2, 27, 1, 2),
(9162, 761, 2, 27, 1, 3),
(9163, 4520, 2, 27, 1, 1),
(9164, 1675, 2, 27, 1, 3),
(9165, 679, 2, 27, 1, 2),
(9166, 439, 2, 27, 1, 3),
(9167, 2659, 2, 27, 1, 3),
(9168, 4521, 2, 27, 1, 1),
(9169, 3615, 2, 27, 1, 3),
(9170, 1445, 2, 27, 1, 0),
(9171, 3356, 2, 27, 1, 3),
(9172, 141, 2, 27, 1, 3),
(9173, 252, 2, 27, 1, 1),
(9174, 4522, 2, 27, 1, 0),
(9175, 693, 2, 27, 1, 3),
(9176, 3612, 2, 27, 1, 3),
(9177, 34, 2, 27, 1, 0),
(9178, 4070, 2, 27, 1, 1),
(9179, 4125, 2, 27, 1, 1),
(9180, 4523, 2, 27, 1, 3),
(9181, 475, 2, 27, 1, 2),
(9182, 4003, 2, 27, 1, 3),
(9183, 2980, 2, 27, 1, 3),
(9184, 1592, 2, 27, 1, 2),
(9185, 3525, 2, 27, 1, 1),
(9186, 3888, 2, 27, 1, 2),
(9187, 1419, 2, 27, 1, 0),
(9188, 2296, 2, 27, 1, 1),
(9189, 3113, 2, 27, 1, 2),
(9190, 3418, 2, 27, 1, 3),
(9191, 2113, 2, 27, 1, 2),
(9192, 345, 2, 27, 1, 3),
(9193, 574, 2, 27, 1, 2),
(9194, 3011, 2, 27, 1, 3),
(9195, 4524, 2, 27, 1, 1),
(9196, 1303, 2, 27, 1, 1),
(9197, 417, 2, 27, 1, 1),
(9198, 3603, 2, 27, 1, 3),
(9199, 4525, 2, 27, 1, 3),
(9200, 657, 2, 27, 1, 1),
(9201, 435, 2, 27, 1, 2),
(9202, 4526, 2, 27, 1, 2),
(9203, 1737, 2, 27, 1, 2),
(9204, 395, 2, 27, 1, 2),
(9205, 3889, 2, 27, 1, 1),
(9206, 4051, 2, 27, 1, 3),
(9207, 581, 2, 27, 1, 3),
(9208, 389, 2, 27, 1, 1),
(9209, 1872, 2, 27, 1, 2),
(9210, 739, 2, 27, 1, 1),
(9211, 4527, 2, 27, 1, 3),
(9212, 1020, 2, 27, 1, 3),
(9213, 1781, 2, 27, 1, 0),
(9214, 1425, 2, 27, 1, 1),
(9215, 2460, 2, 27, 1, 3),
(9216, 4528, 2, 27, 1, 3),
(9217, 1535, 2, 27, 1, 3),
(9218, 29, 2, 27, 1, 2),
(9219, 4529, 2, 27, 1, 1),
(9220, 502, 2, 27, 1, 1),
(9221, 4530, 2, 27, 1, 1),
(9222, 1285, 2, 27, 1, 3),
(9223, 4373, 2, 27, 1, 1),
(9224, 809, 2, 27, 1, 1),
(9225, 3976, 2, 27, 1, 2),
(9226, 4531, 2, 27, 1, 3),
(9227, 1847, 2, 27, 1, 1),
(9228, 1377, 2, 27, 1, 1),
(9229, 4199, 2, 27, 1, 3),
(9230, 3085, 2, 27, 1, 2),
(9231, 2641, 2, 27, 1, 3),
(9232, 181, 2, 27, 1, 3),
(9233, 31, 2, 27, 1, 0),
(9234, 1002, 2, 27, 1, 1),
(9235, 4532, 2, 27, 1, 1),
(9236, 1339, 2, 27, 1, 1),
(9237, 767, 2, 27, 1, 2),
(9238, 608, 2, 27, 1, 1),
(9239, 4533, 2, 27, 1, 2),
(9240, 3818, 2, 27, 1, 3),
(9241, 4109, 2, 27, 1, 1),
(9242, 4534, 2, 27, 1, 1),
(9243, 4535, 2, 27, 1, 3),
(9244, 1515, 2, 27, 1, 3),
(9245, 2314, 2, 27, 1, 3),
(9246, 4536, 2, 27, 1, 1),
(9247, 3413, 2, 27, 1, 3),
(9248, 4537, 2, 27, 1, 2),
(9249, 165, 2, 27, 1, 0),
(9250, 4538, 2, 27, 1, 1),
(9251, 1104, 2, 27, 1, 2),
(9252, 4539, 2, 27, 1, 1),
(9253, 3980, 2, 27, 1, 1),
(9254, 4540, 2, 27, 1, 1),
(9255, 4541, 2, 27, 1, 1),
(9256, 33, 2, 27, 1, 3),
(9257, 1574, 2, 27, 1, 3),
(9258, 4542, 2, 27, 1, 1),
(9259, 1548, 2, 27, 1, 3),
(9260, 154, 2, 27, 1, 0),
(9261, 4123, 2, 27, 1, 1),
(9262, 4543, 2, 27, 1, 1),
(9263, 4544, 2, 27, 1, 1),
(9264, 246, 2, 27, 1, 3),
(9265, 4545, 2, 27, 1, 1),
(9266, 3629, 2, 27, 1, 1),
(9267, 179, 2, 27, 1, 2),
(9268, 888, 2, 27, 1, 3),
(9269, 46, 2, 27, 1, 1),
(9270, 4546, 2, 27, 1, 1),
(9271, 145, 2, 27, 1, 1),
(9272, 4547, 2, 27, 1, 1),
(9273, 4548, 2, 27, 1, 3),
(9274, 4549, 2, 27, 1, 1),
(9275, 4550, 2, 27, 1, 0),
(9276, 899, 2, 27, 1, 3),
(9277, 4551, 2, 27, 1, 3),
(9278, 4552, 2, 27, 1, 3),
(9279, 4553, 2, 27, 1, 1),
(9280, 84, 2, 27, 1, 3),
(9281, 4554, 2, 27, 1, 3),
(9282, 416, 2, 27, 1, 3),
(9283, 2615, 2, 27, 1, 1),
(9284, 192, 2, 27, 1, 3),
(9285, 4555, 2, 27, 1, 1),
(9286, 4556, 2, 27, 1, 1),
(9287, 509, 2, 27, 1, 2),
(9288, 2981, 2, 27, 1, 2),
(9289, 2105, 2, 27, 1, 3),
(9290, 4557, 2, 27, 1, 2),
(9291, 856, 2, 27, 1, 2),
(9292, 550, 2, 27, 1, 3),
(9293, 231, 2, 27, 1, 3),
(9294, 4087, 2, 27, 1, 1),
(9295, 4558, 2, 27, 1, 1),
(9296, 4559, 2, 27, 1, 1),
(9297, 2081, 2, 27, 1, 1),
(9298, 655, 2, 27, 1, 3),
(9299, 354, 2, 27, 1, 0),
(9300, 4095, 2, 27, 1, 3),
(9301, 988, 2, 27, 1, 3),
(9302, 4560, 2, 27, 1, 1),
(9303, 794, 2, 27, 1, 1),
(9304, 3500, 2, 27, 1, 2),
(9305, 4561, 2, 27, 1, 2),
(9306, 801, 2, 27, 1, 3),
(9307, 119, 2, 27, 1, 1),
(9308, 4562, 2, 27, 1, 1),
(9309, 4563, 2, 27, 1, 1),
(9310, 4564, 2, 27, 1, 1),
(9311, 4565, 2, 27, 1, 1),
(9312, 4566, 2, 27, 1, 1),
(9313, 4567, 2, 27, 1, 1),
(9314, 4568, 2, 27, 1, 1),
(9315, 4569, 2, 27, 1, 1),
(9316, 53, 2, 27, 1, 3),
(9317, 873, 2, 27, 1, 3),
(9318, 4570, 2, 27, 1, 1),
(9319, 4571, 2, 27, 1, 1),
(9320, 4572, 2, 27, 1, 1),
(9321, 1443, 2, 27, 1, 1),
(9322, 4573, 2, 27, 1, 3),
(9323, 686, 2, 27, 1, 2),
(9324, 2022, 2, 27, 1, 1),
(9325, 4574, 2, 27, 1, 1),
(9326, 4575, 2, 27, 1, 3),
(9327, 280, 2, 27, 1, 0),
(9328, 1694, 2, 27, 1, 3),
(9329, 3794, 2, 27, 1, 3),
(9330, 814, 2, 27, 1, 2),
(9331, 4576, 2, 27, 1, 3),
(9332, 4366, 2, 27, 1, 3),
(9333, 274, 2, 27, 1, 1),
(9334, 1, 2, 28, 39, 0),
(9335, 3, 2, 28, 35, 0),
(9336, 12, 2, 28, 17, 1),
(9337, 9, 2, 28, 17, 2),
(9338, 6, 2, 28, 15, 0),
(9339, 23, 2, 28, 13, 2),
(9340, 2, 2, 28, 13, 0),
(9341, 14, 2, 28, 13, 2),
(9342, 7, 2, 28, 12, 0),
(9343, 5, 2, 28, 11, 0),
(9344, 77, 2, 28, 10, 1),
(9345, 35, 2, 28, 10, 1),
(9346, 3781, 2, 28, 10, 3),
(9347, 56, 2, 28, 9, 1),
(9348, 15, 2, 28, 8, 0),
(9349, 76, 2, 28, 8, 1),
(9350, 182, 2, 28, 8, 2),
(9351, 17, 2, 28, 7, 1),
(9352, 55, 2, 28, 7, 1),
(9353, 105, 2, 28, 6, 3),
(9354, 3594, 2, 28, 6, 1),
(9355, 79, 2, 28, 6, 0),
(9356, 106, 2, 28, 6, 3),
(9357, 37, 2, 28, 6, 3),
(9358, 144, 2, 28, 6, 1),
(9359, 592, 2, 28, 6, 3),
(9360, 1737, 2, 28, 6, 2),
(9361, 1348, 2, 28, 6, 2),
(9362, 21, 2, 28, 6, 0),
(9363, 3249, 2, 28, 6, 1),
(9364, 1388, 2, 28, 5, 3),
(9365, 22, 2, 28, 5, 0),
(9366, 31, 2, 28, 5, 0),
(9367, 30, 2, 28, 5, 2),
(9368, 28, 2, 28, 5, 0),
(9369, 214, 2, 28, 5, 3),
(9370, 1847, 2, 28, 5, 1),
(9371, 4158, 2, 28, 5, 1),
(9372, 882, 2, 28, 5, 0),
(9373, 185, 2, 28, 5, 3),
(9374, 16, 2, 28, 5, 0),
(9375, 1103, 2, 28, 5, 3),
(9376, 460, 2, 28, 4, 2),
(9377, 20, 2, 28, 4, 0),
(9378, 71, 2, 28, 4, 0),
(9379, 4577, 2, 28, 4, 1),
(9380, 146, 2, 28, 4, 1),
(9381, 181, 2, 28, 4, 3),
(9382, 3038, 2, 28, 4, 3),
(9383, 33, 2, 28, 4, 3),
(9384, 18, 2, 28, 4, 1),
(9385, 4, 2, 28, 4, 0),
(9386, 70, 2, 28, 4, 1),
(9387, 215, 2, 28, 4, 0),
(9388, 364, 2, 28, 4, 3),
(9389, 3819, 2, 28, 4, 2),
(9390, 1506, 2, 28, 4, 1),
(9391, 65, 2, 28, 4, 0),
(9392, 1718, 2, 28, 3, 3),
(9393, 2107, 2, 28, 3, 2),
(9394, 1381, 2, 28, 3, 3),
(9395, 34, 2, 28, 3, 0),
(9396, 4199, 2, 28, 3, 3),
(9397, 115, 2, 28, 3, 3),
(9398, 801, 2, 28, 3, 3),
(9399, 184, 2, 28, 3, 1),
(9400, 396, 2, 28, 3, 1),
(9401, 44, 2, 28, 3, 3),
(9402, 331, 2, 28, 3, 2),
(9403, 1199, 2, 28, 3, 3),
(9404, 395, 2, 28, 3, 2),
(9405, 119, 2, 28, 3, 1),
(9406, 205, 2, 28, 3, 3),
(9407, 897, 2, 28, 3, 2),
(9408, 46, 2, 28, 3, 1),
(9409, 190, 2, 28, 3, 1),
(9410, 932, 2, 28, 3, 3),
(9411, 74, 2, 28, 3, 0),
(9412, 41, 2, 28, 3, 0),
(9413, 90, 2, 28, 3, 1),
(9414, 4578, 2, 28, 3, 1),
(9415, 2413, 2, 28, 3, 3),
(9416, 62, 2, 28, 3, 1),
(9417, 883, 2, 28, 3, 1),
(9418, 54, 2, 28, 3, 3),
(9419, 888, 2, 28, 3, 3),
(9420, 608, 2, 28, 2, 1),
(9421, 789, 2, 28, 2, 3),
(9422, 1357, 2, 28, 2, 2),
(9423, 365, 2, 28, 2, 3),
(9424, 1338, 2, 28, 2, 3),
(9425, 2092, 2, 28, 2, 2),
(9426, 856, 2, 28, 2, 2),
(9427, 1743, 2, 28, 2, 2),
(9428, 4579, 2, 28, 2, 1),
(9429, 4075, 2, 28, 2, 1),
(9430, 1565, 2, 28, 2, 3),
(9431, 249, 2, 28, 2, 1),
(9432, 4580, 2, 28, 2, 1),
(9433, 722, 2, 28, 2, 3),
(9434, 1010, 2, 28, 2, 2),
(9435, 4581, 2, 28, 2, 1),
(9436, 2318, 2, 28, 2, 3),
(9437, 1531, 2, 28, 2, 2),
(9438, 2245, 2, 28, 2, 3),
(9439, 145, 2, 28, 2, 1),
(9440, 247, 2, 28, 2, 2),
(9441, 1496, 2, 28, 2, 3),
(9442, 153, 2, 28, 2, 1),
(9443, 3906, 2, 28, 2, 1),
(9444, 3462, 2, 28, 2, 1),
(9445, 435, 2, 28, 2, 2),
(9446, 45, 2, 28, 2, 2),
(9447, 4582, 2, 28, 2, 1),
(9448, 1113, 2, 28, 2, 3),
(9449, 1564, 2, 28, 2, 0),
(9450, 398, 2, 28, 2, 2),
(9451, 1410, 2, 28, 2, 1),
(9452, 99, 2, 28, 2, 2),
(9453, 1104, 2, 28, 2, 2),
(9454, 4583, 2, 28, 2, 1),
(9455, 3789, 2, 28, 2, 2),
(9456, 450, 2, 28, 2, 1),
(9457, 63, 2, 28, 2, 1),
(9458, 923, 2, 28, 2, 3),
(9459, 814, 2, 28, 2, 2),
(9460, 202, 2, 28, 2, 0),
(9461, 117, 2, 28, 2, 1),
(9462, 2401, 2, 28, 2, 2),
(9463, 550, 2, 28, 2, 3),
(9464, 424, 2, 28, 2, 1),
(9465, 2293, 2, 28, 2, 1),
(9466, 3969, 2, 28, 2, 1),
(9467, 449, 2, 28, 2, 3),
(9468, 401, 2, 28, 2, 1),
(9469, 4584, 2, 28, 2, 3),
(9470, 416, 2, 28, 2, 3),
(9471, 780, 2, 28, 2, 1),
(9472, 1419, 2, 28, 2, 0),
(9473, 345, 2, 28, 2, 3),
(9474, 1020, 2, 28, 2, 3),
(9475, 3976, 2, 28, 2, 2),
(9476, 1923, 2, 28, 2, 1),
(9477, 756, 2, 28, 2, 3),
(9478, 1382, 2, 28, 2, 1),
(9479, 4585, 2, 28, 2, 2),
(9480, 749, 2, 28, 2, 2),
(9481, 101, 2, 28, 2, 2),
(9482, 3603, 2, 28, 2, 3),
(9483, 179, 2, 28, 2, 2),
(9484, 4370, 2, 28, 2, 1),
(9485, 4368, 2, 28, 2, 1),
(9486, 1788, 2, 28, 2, 2),
(9487, 1705, 2, 28, 2, 1),
(9488, 61, 2, 28, 2, 1),
(9489, 1781, 2, 28, 2, 0),
(9490, 3888, 2, 28, 2, 2),
(9491, 612, 2, 28, 2, 3),
(9492, 4586, 2, 28, 2, 2),
(9493, 354, 2, 28, 2, 0),
(9494, 3028, 2, 28, 2, 1),
(9495, 4587, 2, 28, 1, 3),
(9496, 4588, 2, 28, 1, 1),
(9497, 2360, 2, 28, 1, 3),
(9498, 1395, 2, 28, 1, 1),
(9499, 3820, 2, 28, 1, 2),
(9500, 4589, 2, 28, 1, 1),
(9501, 4379, 2, 28, 1, 1),
(9502, 675, 2, 28, 1, 2),
(9503, 446, 2, 28, 1, 2),
(9504, 4590, 2, 28, 1, 3),
(9505, 92, 2, 28, 1, 3),
(9506, 2550, 2, 28, 1, 1),
(9507, 4591, 2, 28, 1, 3),
(9508, 1515, 2, 28, 1, 3),
(9509, 1181, 2, 28, 1, 2),
(9510, 4592, 2, 28, 1, 3),
(9511, 4593, 2, 28, 1, 1),
(9512, 4594, 2, 28, 1, 3),
(9513, 318, 2, 28, 1, 2),
(9514, 250, 2, 28, 1, 2),
(9515, 3600, 2, 28, 1, 3),
(9516, 1650, 2, 28, 1, 3),
(9517, 1499, 2, 28, 1, 2),
(9518, 4373, 2, 28, 1, 1),
(9519, 24, 2, 28, 1, 2),
(9520, 4595, 2, 28, 1, 3),
(9521, 4596, 2, 28, 1, 1),
(9522, 4597, 2, 28, 1, 1),
(9523, 1371, 2, 28, 1, 1),
(9524, 1591, 2, 28, 1, 3),
(9525, 4598, 2, 28, 1, 1),
(9526, 1686, 2, 28, 1, 0),
(9527, 4599, 2, 28, 1, 3),
(9528, 4600, 2, 28, 1, 1),
(9529, 36, 2, 28, 1, 1),
(9530, 563, 2, 28, 1, 1),
(9531, 2136, 2, 28, 1, 3),
(9532, 984, 2, 28, 1, 2),
(9533, 4601, 2, 28, 1, 1),
(9534, 220, 2, 28, 1, 0),
(9535, 2458, 2, 28, 1, 3),
(9536, 4602, 2, 28, 1, 1),
(9537, 152, 2, 28, 1, 3),
(9538, 134, 2, 28, 1, 1),
(9539, 2695, 2, 28, 1, 2),
(9540, 1400, 2, 28, 1, 2),
(9541, 78, 2, 28, 1, 1),
(9542, 494, 2, 28, 1, 1),
(9543, 4499, 2, 28, 1, 2),
(9544, 471, 2, 28, 1, 1),
(9545, 576, 2, 28, 1, 2),
(9546, 189, 2, 28, 1, 0),
(9547, 2100, 2, 28, 1, 1),
(9548, 1002, 2, 28, 1, 1),
(9549, 755, 2, 28, 1, 1),
(9550, 4603, 2, 28, 1, 2),
(9551, 4416, 2, 28, 1, 3),
(9552, 589, 2, 28, 1, 1),
(9553, 726, 2, 28, 1, 3),
(9554, 3427, 2, 28, 1, 1),
(9555, 4604, 2, 28, 1, 2),
(9556, 1524, 2, 28, 1, 2),
(9557, 4605, 2, 28, 1, 2),
(9558, 4606, 2, 28, 1, 1),
(9559, 4607, 2, 28, 1, 2),
(9560, 4608, 2, 28, 1, 1),
(9561, 4609, 2, 28, 1, 1),
(9562, 274, 2, 28, 1, 1),
(9563, 2641, 2, 28, 1, 3),
(9564, 996, 2, 28, 1, 1),
(9565, 4610, 2, 28, 1, 1),
(9566, 1535, 2, 28, 1, 3),
(9567, 4611, 2, 28, 1, 1),
(9568, 4612, 2, 28, 1, 1),
(9569, 2383, 2, 28, 1, 3),
(9570, 4613, 2, 28, 1, 3),
(9571, 4614, 2, 28, 1, 3),
(9572, 4615, 2, 28, 1, 3),
(9573, 1102, 2, 28, 1, 1),
(9574, 4616, 2, 28, 1, 3),
(9575, 2742, 2, 28, 1, 1),
(9576, 1933, 2, 28, 1, 1),
(9577, 4617, 2, 28, 1, 1),
(9578, 4542, 2, 28, 1, 1),
(9579, 2761, 2, 28, 1, 1),
(9580, 3837, 2, 28, 1, 0),
(9581, 634, 2, 28, 1, 3),
(9582, 154, 2, 28, 1, 0),
(9583, 660, 2, 28, 1, 1),
(9584, 1602, 2, 28, 1, 1),
(9585, 3567, 2, 28, 1, 2),
(9586, 3145, 2, 28, 1, 3),
(9587, 2110, 2, 28, 1, 0),
(9588, 1711, 2, 28, 1, 1),
(9589, 4135, 2, 28, 1, 1),
(9590, 4618, 2, 28, 1, 3),
(9591, 4619, 2, 28, 1, 1),
(9592, 1802, 2, 28, 1, 3),
(9593, 4620, 2, 28, 1, 1),
(9594, 843, 2, 28, 1, 2),
(9595, 4621, 2, 28, 1, 2),
(9596, 578, 2, 28, 1, 1),
(9597, 4622, 2, 28, 1, 3),
(9598, 1293, 2, 28, 1, 1),
(9599, 733, 2, 28, 1, 3),
(9600, 4623, 2, 28, 1, 2),
(9601, 4624, 2, 28, 1, 3),
(9602, 4625, 2, 28, 1, 1),
(9603, 3522, 2, 28, 1, 1),
(9604, 1334, 2, 28, 1, 2),
(9605, 2197, 2, 28, 1, 1),
(9606, 3350, 2, 28, 1, 2),
(9607, 1241, 2, 28, 1, 3),
(9608, 4626, 2, 28, 1, 0),
(9609, 1707, 2, 28, 1, 1),
(9610, 3842, 2, 28, 1, 1),
(9611, 4627, 2, 28, 1, 3),
(9612, 4084, 2, 28, 1, 3),
(9613, 1798, 2, 28, 1, 3),
(9614, 1221, 2, 28, 1, 3),
(9615, 4185, 2, 28, 1, 3),
(9616, 4628, 2, 28, 1, 2),
(9617, 1122, 2, 28, 1, 3),
(9618, 136, 2, 28, 1, 1),
(9619, 4629, 2, 28, 1, 3),
(9620, 4630, 2, 28, 1, 2),
(9621, 2897, 2, 28, 1, 2),
(9622, 4631, 2, 28, 1, 3),
(9623, 4442, 2, 28, 1, 1),
(9624, 4106, 2, 28, 1, 3),
(9625, 1507, 2, 28, 1, 1),
(9626, 4632, 2, 28, 1, 1),
(9627, 1339, 2, 28, 1, 1),
(9628, 4633, 2, 28, 1, 2),
(9629, 4634, 2, 28, 1, 2),
(9630, 423, 2, 28, 1, 3),
(9631, 4635, 2, 28, 1, 1),
(9632, 4636, 2, 28, 1, 3),
(9633, 4637, 2, 28, 1, 1),
(9634, 3005, 2, 28, 1, 1),
(9635, 4638, 2, 28, 1, 3),
(9636, 180, 2, 28, 1, 2),
(9637, 4210, 2, 28, 1, 2),
(9638, 534, 2, 28, 1, 1),
(9639, 4639, 2, 28, 1, 2),
(9640, 2526, 2, 28, 1, 1),
(9641, 4173, 2, 28, 1, 1),
(9642, 4640, 2, 28, 1, 1),
(9643, 1576, 2, 28, 1, 3),
(9644, 4123, 2, 28, 1, 1),
(9645, 4641, 2, 28, 1, 3),
(9646, 330, 2, 28, 1, 2),
(9647, 324, 2, 28, 1, 2),
(9648, 3629, 2, 28, 1, 1),
(9649, 3512, 2, 28, 1, 2),
(9650, 1468, 2, 28, 1, 1),
(9651, 2529, 2, 28, 1, 3),
(9652, 3852, 2, 28, 1, 1),
(9653, 4642, 2, 28, 1, 1),
(9654, 217, 2, 28, 1, 3),
(9655, 4643, 2, 28, 1, 1),
(9656, 1289, 2, 28, 1, 3),
(9657, 19, 2, 28, 1, 3),
(9658, 4644, 2, 28, 1, 2),
(9659, 3355, 2, 28, 1, 1),
(9660, 3745, 2, 28, 1, 1),
(9661, 3461, 2, 28, 1, 2),
(9662, 308, 2, 28, 1, 3),
(9663, 621, 2, 28, 1, 3),
(9664, 3478, 2, 28, 1, 2),
(9665, 95, 2, 28, 1, 3),
(9666, 4645, 2, 28, 1, 3),
(9667, 4646, 2, 28, 1, 3),
(9668, 454, 2, 28, 1, 2),
(9669, 4647, 2, 28, 1, 1),
(9670, 1730, 2, 28, 1, 2),
(9671, 4648, 2, 28, 1, 1),
(9672, 1720, 2, 28, 1, 1),
(9673, 1451, 2, 28, 1, 3),
(9674, 2395, 2, 28, 1, 1),
(9675, 4649, 2, 28, 1, 3),
(9676, 4650, 2, 28, 1, 1),
(9677, 1416, 2, 28, 1, 3),
(9678, 1464, 2, 28, 1, 3),
(9679, 1717, 2, 28, 1, 2),
(9680, 2796, 2, 28, 1, 3),
(9681, 917, 2, 28, 1, 3),
(9682, 4651, 2, 28, 1, 1),
(9683, 3219, 2, 28, 1, 3),
(9684, 1842, 2, 28, 1, 2),
(9685, 4652, 2, 28, 1, 1),
(9686, 4653, 2, 28, 1, 1),
(9687, 2095, 2, 28, 1, 1),
(9688, 2422, 2, 28, 1, 3),
(9689, 4327, 2, 28, 1, 3),
(9690, 4654, 2, 28, 1, 1),
(9691, 3422, 2, 28, 1, 2),
(9692, 1217, 2, 28, 1, 3),
(9693, 1990, 2, 28, 1, 3),
(9694, 3596, 2, 28, 1, 2),
(9695, 3743, 2, 28, 1, 1),
(9696, 4655, 2, 28, 1, 3),
(9697, 2899, 2, 28, 1, 2),
(9698, 88, 2, 28, 1, 1),
(9699, 985, 2, 28, 1, 2),
(9700, 3180, 2, 28, 1, 3),
(9701, 4242, 2, 28, 1, 1),
(9702, 2143, 2, 28, 1, 3),
(9703, 3710, 2, 28, 1, 1),
(9704, 4656, 2, 28, 1, 3),
(9705, 4657, 2, 28, 1, 3),
(9706, 4658, 2, 28, 1, 1),
(9707, 51, 2, 28, 1, 3),
(9708, 485, 2, 28, 1, 2),
(9709, 4659, 2, 28, 1, 2),
(9710, 3966, 2, 28, 1, 2),
(9711, 986, 2, 28, 1, 1),
(9712, 4660, 2, 28, 1, 3),
(9713, 4661, 2, 28, 1, 2),
(9714, 2483, 2, 28, 1, 3),
(9715, 38, 2, 28, 1, 3),
(9716, 4662, 2, 28, 1, 2),
(9717, 403, 2, 28, 1, 2),
(9718, 4663, 2, 28, 1, 1),
(9719, 3757, 2, 28, 1, 1),
(9720, 3113, 2, 28, 1, 2),
(9721, 3356, 2, 28, 1, 3),
(9722, 3623, 2, 28, 1, 1),
(9723, 2860, 2, 28, 1, 1),
(9724, 178, 2, 28, 1, 1),
(9725, 4664, 2, 28, 1, 3),
(9726, 4665, 2, 28, 1, 2),
(9727, 1435, 2, 28, 1, 2),
(9728, 3612, 2, 28, 1, 3),
(9729, 613, 2, 28, 1, 3),
(9730, 4666, 2, 28, 1, 1),
(9731, 4667, 2, 28, 1, 1),
(9732, 4271, 2, 28, 1, 3),
(9733, 4668, 2, 28, 1, 3),
(9734, 378, 2, 28, 1, 0),
(9735, 2300, 2, 28, 1, 3),
(9736, 797, 2, 28, 1, 1),
(9737, 1017, 2, 28, 1, 3),
(9738, 648, 2, 28, 1, 0),
(9739, 3235, 2, 28, 1, 3),
(9740, 1934, 2, 28, 1, 2),
(9741, 2848, 2, 28, 1, 3),
(9742, 2782, 2, 28, 1, 3),
(9743, 481, 2, 28, 1, 1),
(9744, 352, 2, 28, 1, 1),
(9745, 4669, 2, 28, 1, 0),
(9746, 4670, 2, 28, 1, 1),
(9747, 4671, 2, 28, 1, 3),
(9748, 4672, 2, 28, 1, 1),
(9749, 1208, 2, 28, 1, 1),
(9750, 4673, 2, 28, 1, 1),
(9751, 1434, 2, 28, 1, 1),
(9752, 2079, 2, 28, 1, 3),
(9753, 4674, 2, 28, 1, 3),
(9754, 3516, 2, 28, 1, 2),
(9755, 627, 2, 28, 1, 3),
(9756, 4675, 2, 28, 1, 1),
(9757, 266, 2, 28, 1, 0),
(9758, 2091, 2, 28, 1, 2),
(9759, 2109, 2, 28, 1, 2),
(9760, 4676, 2, 28, 1, 1),
(9761, 2687, 2, 28, 1, 1),
(9762, 4367, 2, 28, 1, 1),
(9763, 4677, 2, 28, 1, 1),
(9764, 4678, 2, 28, 1, 1),
(9765, 4679, 2, 28, 1, 1),
(9766, 4680, 2, 28, 1, 3),
(9767, 4681, 2, 28, 1, 1),
(9768, 1603, 2, 28, 1, 1),
(9769, 4682, 2, 28, 1, 1),
(9770, 389, 2, 28, 1, 1),
(9771, 4683, 2, 28, 1, 1),
(9772, 3424, 2, 28, 1, 2),
(9773, 4684, 2, 28, 1, 1),
(9774, 2846, 2, 28, 1, 1),
(9775, 191, 2, 28, 1, 2),
(9776, 282, 2, 28, 1, 3),
(9777, 124, 2, 28, 1, 2),
(9778, 936, 2, 28, 1, 1),
(9779, 788, 2, 28, 1, 1),
(9780, 4685, 2, 28, 1, 1),
(9781, 4686, 2, 28, 1, 1),
(9782, 4687, 2, 28, 1, 3),
(9783, 595, 2, 28, 1, 3),
(9784, 1796, 2, 28, 1, 3),
(9785, 4688, 2, 28, 1, 2),
(9786, 4689, 2, 28, 1, 1),
(9787, 1845, 2, 28, 1, 3),
(9788, 473, 2, 28, 1, 1);

--
-- Триггеры `indices`
--
DROP TRIGGER IF EXISTS `set_word_weight`;
DELIMITER //
CREATE TRIGGER `set_word_weight` AFTER INSERT ON `indices`
 FOR EACH ROW UPDATE `words` SET `weight`=(
    SELECT count(*) 
    FROM `indices`
    WHERE `word_id`=NEW.word_id
)
WHERE `id`=NEW.word_id
//
DELIMITER ;
DROP TRIGGER IF EXISTS `update_word_weight`;
DELIMITER //
CREATE TRIGGER `update_word_weight` AFTER DELETE ON `indices`
 FOR EACH ROW UPDATE `words` SET `weight`=(
    SELECT count(*) 
    FROM `indices`
    WHERE `word_id`=OLD.word_id
)
WHERE `id`=OLD.word_id
//
DELIMITER ;

-- --------------------------------------------------------

--
-- Структура таблицы `pages`
--

CREATE TABLE IF NOT EXISTS `pages` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content` text NOT NULL,
  `title` varchar(255) NOT NULL,
  `datetime` datetime NOT NULL,
  `url` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=29 ;

--
-- Дамп данных таблицы `pages`
--

INSERT INTO `pages` (`id`, `content`, `title`, `datetime`, `url`) VALUES
(1, '     	Добрый день, хаброжители,\r\n  \r\n  Статьи посвящены тому, как я справляюсь с поддержкой приложений, которые прошли не через одну версии, писались в разное время и разными людьми. Надеюсь, они помогут и другим iOS разработчикам.\r\n  \r\n    Облегчаем поддержку iOS приложения. Часть 1 — не отрываясь от Xcode  Облегчаем поддержку iOS приложения. Часть 2 — локация и сеть  Облегчаем поддержку iOS приложения. Часть 3 — падение и логи  \r\n  В первой статье я поделился своим опытом работы с трудно воспроизводимыми багами. В этой статье я расскажу, как можно поступить с багами, которые связаны с сетью или локацией. Тех, кого интересует эта тема, прошу под кат.\r\n  \r\n  Внимательный читатель первой статьи мог догадаться, что долгое время я проработал в аутсорсе(не надо ставить на мне крест). И поэтому мои статьи описывают ситуации, где есть заказчик, который далеко от вас. \r\n  \r\n  Подвид второй — невероятные условия локации«Вот у меня тут, в Париже, данные не так отображаются»Бывает, что многое в приложении завязано на локацию, и у вас все отлично, а вот у клиента данные не так отображаются и он в Париже… ну хорошо ему, что еще могу сказать. А я в Сибири, и у меня все ОК с данными, каждому свое. Что же делать? Симулировать локацию. И так, рассмотрим наши варианты:\r\n  1) Это простая подмена локации в симуляторе. Как нечего делать — он поставит вас в нужную точку. «iOS Simulator»→Debug→Location.\r\n  2) Если точки мало, можно начать симулировать путь, есть файлы pgx, добавляются в xcode через правый значок\r\n  \r\n  И локации будут перемещать вас по пути, но… Если мне не изменяет память, это можно делать, только присоединив приложение к Xcode, и нельзя настроить время между прыжками. Что делать тестировщикам? Сидеть у маков? Хорошая компания, если всем купили MAC. И всегда подключив приложение Xcode? А если нужны задержки большие, больше, чем сделает Xcode?\r\n  3) Вот тут на помощь неожиданно приходят волшебные методы runtime, о них много написано, к примеру тут, но вот реально зачем оно такое может пригодиться… бывает не совсем понятно. Однако, вот вам вариант, который поможет нам решить проблему с подменой локации или даже навигации. FakeGPSUtility строго не судить, несколько раз он пригодился и сыграл важную роль, но это тот еще велосипед, и тут он больше чтобы не быть голословным и показать вам направление. Свою цель этот проект выполняет — вы можете подменять локацию и прыжки межу ними не фиксированы. Это может делать кто угодно, даже клиент, не нужен Xcode и главное для меня (для кого-то вторичное) мы не меняем ничего в коде проекта, все подменяется в момент запуска приложения. То есть, вы присоединяете его к проекту, код проекта остается прежний, фиксаете баг/тестируете и удаляете, или выставляете нужные #define. Вуаля, полезная тулза под рукой, и никогда этот код не попадет в Release, исключительно для тестов.\r\n  С iOS 8, карты начали получать локацию (реальную локацию девайса), даже при симуляции, так что если дойдут руки — допилю тулзу. \r\n  А пока она может вот такое сделать с картой. Красная булавка это то, что прилетает в методе делегата NSLocationManager, остальное — нативное поведение карты. Симуляция шла — карта велась.\r\n  \r\n  Подвид третий — проблемы с http request — При edge соединении приложение плохо работает\r\n   — Именно поэтому я и тестирую его на WiFi, зачем же себя мучить-то!\r\n  Рассмотрим еще один случай — проблема проявилась из-за плохой сети. Вообще, полезно просто симулировать плохое соединение с интернетом и посмотреть, как работает приложение, потому что, пока вы на WiFi, а может и сервис на localhost, не поймешь как оно ведет себя на 3g (а, не дай Бог, еще и на edge). Так что, ради интереса, идем на устройстве в Settings→DeveloperNetwork Link Conditioner→Enable и выбираем, насколько плохое соединение мы хотим. После этого вы можете резко поменять точку зрения о быстродействии приложения.\r\n  И так, вы можете сделать интернет медленнее, но что если вам надо сломать какой-то один определенный response, чтобы получилась та же проблема, что и у клиента/тестировщика? Тогда придется делать еще один велосипед (дзынь-дзынь).\r\n  Как и с FakeGPSUtility, я против допиливать что-то внутри наших рабочих классов для тестирования и баговоспроизведения, код добавляется исключительно вокруг проекта. NSURProtocol нам в помощь. Как по мне, 3 наиболее вероятных места, где может понадобится сломать request — это NSURLSessionTask, UIWebView и WKWebView. Есть и другие соединения по сети, но тут я вам не помогу — ничего хорошего не посоветую, только сидеть и портить код проекта ради тестов.\r\n  NSURLSessionTaskЧтобы сломать его response, надо, чтобы наш протокол попал во все NSURLSessionConfiguration, для этого переопределим - (NSArray *)protocolClassesИ просто возвращаем массив с нашим MyURLProtocol. Если ваше приложение использует иные протоколы — добавьте их тоже (чтобы не тащить хидеры, можно использовать NSClassFromString). Если же у вас еще более сложная логика и протоколы не везде и не всегда используются, то… сами виноваты — допиливайте велосипед по своему образу и подобию.шутка, вот кодstatic char kAssociatedObjectKey;  - (NSArray *)protocolClasses {   NSMutableArray *result = objc_getAssociatedObject(self, &kAssociatedObjectKey);   if (result == nil) {     result = [self customeProtocolsArray];     objc_setAssociatedObject(self, &kAssociatedObjectKey, result, OBJC_ASSOCIATION_RETAIN_NONATOMIC);   }    return result; }  - (void)setProtocolClasses:(NSArray *)protocolClasses {    NSMutableArray *result = [self customeProtocolsArray];   if (protocolClasses.count &gt; 0) {     [result addObjectsFromArray:protocolClasses];   }    objc_setAssociatedObject(self, &kAssociatedObjectKey, result, OBJC_ASSOCIATION_RETAIN_NONATOMIC); }  - (NSMutableArray *)customeProtocolsArray {   return [NSMutableArray arrayWithObject:[MyURLProtocol class]]; } Но, для bacgkound session это не сработает. пруф\r\n  \r\n  UIWebViewТут все еще проще — просто зарегистрируйте класс. Например так:- (BOOL)application:(UIApplication *)application willFinishLaunchingWithOptions:(NSDictionary *)launchOptions  {     [NSURLProtocol registerClass:[MyURLProtocol class]];     return YES; }\r\n  \r\n  WKWebView А вот тут все плохо, не получится подменять извне, придется все-таки втыкать костыли для этого в код проекта.\r\n  \r\n  А вот, собственно, и сам протокол@implementation MyURLProtocol  + (BOOL)canInitWithRequest:(NSURLRequest *)request { #if !defined(STAGE_SERVER) || !STAGE_SERVER   return NO; #endif   NSString *urlString = [[request URL] absoluteString];    NSRange randge = [urlString rangeOfString:@&quot;http://yandex.ru&quot;];   if (randge.location == 0) {     return YES;   }    return NO; }  + (NSURLRequest *)canonicalRequestForRequest:(NSURLRequest *)request {   return request; }  + (BOOL)requestIsCacheEquivalent:(NSURLRequest *)a toRequest:(NSURLRequest *)b {   return NO; }  - (void)startLoading {   dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(2 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{     NSError *error = [NSError errorWithDomain:@&quot;MyErrorDomain&quot;                                          code:42                                      userInfo:@{ NSLocalizedDescriptionKey: @&quot;We fail it!&quot;}];     [self.client URLProtocol:self didFailWithError:error];   }); }  - (void)stopLoading {   // stop request if you can } @end\r\n  \r\n  Подвид четвертый — для тестов нужен специфический/устаревший responseНам сообщают, что вчера было воспроизведено некорректное поведение, а сегодня уже не получается, от сервиса не выходит получить тот же ответ. Сказать, что теперь все работает, неправильно, так как по закону жанра эта ситуация повторится в первый же день релиза. И повлиять на server-side team вы не можете по целому ряду причин: они в другом городе, вы их не знаете, они в отпуске.\r\n  В этой ситуации NSURLProtocol снова спешит вам на помощь. Нам надо лишь поменять + (BOOL)canInitWithRequest:(NSURLRequest *)request, чтобы при нужном запросе мы возвращали нужные данные.\r\n  Вот так может выглядеть наш MyURLProtocol, чтобы просимулировать нужный response\r\n  MyURLProtocol@implementation MyURLProtocol  + (BOOL)canInitWithRequest:(NSURLRequest *)request {   NSString *urlString = [[request URL] absoluteString];    NSRange randge = [urlString rangeOfString:@&quot;http://localhost:1984/oldresponse&quot;];   if (randge.location == 0) {     return YES;   }    return NO; }  + (NSURLRequest *)canonicalRequestForRequest:(NSURLRequest *)request {   return request; }  + (BOOL)requestIsCacheEquivalent:(NSURLRequest *)a toRequest:(NSURLRequest *)b {   return NO; }  - (void)startLoading {   NSString *path = [[NSBundle mainBundle] pathForResource:@&quot;unexistd_response&quot; ofType:@&quot;json&quot;];   NSData *data = [NSData dataWithContentsOfFile:path];   [self.client URLProtocol:self didLoadData:data];    [self.client URLProtocol:self didFailWithError:nil]; }  - (void)stopLoading {   // stop request if you can } @end\r\n  \r\n  Тут мы с файловой системы читаем unexistd_response.json, но никто не запрещает сделать редирект на рабочую машину, поднять на ней небольшой сервис и с него получить ответ. Это отличный вариант, если есть время и не хочется складывать странные файлы в проект, даже если они только на время и для тестов.\r\n  Лично я часто создаю NSURLProtocol для работы на первых порах над проектом, потому что зачастую сервис есть только в планах и ТЗ, а реально у вас его нет. Но уже хочется писать, как будто приложение работает как надо, получает данные, и, в зависимости от них, показывает содержимое пользователю. Я делаю себе #define STAGE_SERVER 1 и, пока мне не дадут рабочий сервис, я работаю с локальными файлами. Они же меня потом спасают, когда разработчик, уходя домой, выключит компьютер, который по совместительству был developer server (до боли смешная ситуация, которая повторялась несколько раз).\r\n  \r\n  Заключение\r\n  Сегодня мы рассмотрели случаи, когда проблемы очень тесно связаны с http запросами или локациями. NSURLProtocol и FakeGPSUtility герои сегодняшней статьи, они очень сильно упростят тестирование и воспроизведение некорректного поведения приложения.     	   	', 'Облегчаем поддержку iOS приложения. Часть 2 — локация и сеть ', '2015-04-05 11:39:23', 'http://habrahabr.ru/post/254891/'),
(2, '     	\r\n  \r\n  Оригинальные технические решения прошлого зачастую вызывают сегодня умиление и восторг, а если не имеют прямого современного аналога, то вполне могут продолжать свое существование — так рождается дикий микс из компонентов, разница в возрасте которых составляет десятки лет.\r\n  \r\n  В прошлый раз я с подобным чувством сооружал чиптюновый модуль на AY-3-8912. Результатом остался чрезвычайно доволен, но отмечу, что законченным изделием он не является. Как и герой данного материала, блок газоразрядных индикаторов ИН-12.\r\n  \r\n  Часики на ИНках на Хабре фигурировали не раз (например 1, 2, 3), поэтому поста в стиле «Yet another Nixie clock» не будет. Сосредоточусь на том, чтобы кратко и емко изложить идею блока индикации и особенности реализации.\r\n  \r\n  \r\n  Принцип действия\r\n  \r\n  Индикаторы ИН представляют собой стеклянную колбу с ножками, заполненную инертным газом. В ней находится пакет электродов (катодов), выполненных в форме символов (в большинстве ИН это цифры). При приложении к выбранному катоду и общему аноду (сетка перед пакетом) напряжения в пару сотен вольт зажигается тлеющий разряд, визуальное проявление — красно-оранжевое свечение вблизи катода, повторяющее его форму.\r\n  \r\n  Управление\r\n  \r\n  Чтобы управлять индикаторами серии ИН, нужно коммутировать высокое напряжение (ток — единицы миллиампер). Жизнь сильно облегчает существование в любимой 155-й серии дешифраторов ИД1 — они непосредственно и предназначены для работы с индикаторами ИН. Можно использовать и обычные дешифраторы, но тогда на их выходы придется ставить транзисторные ключи. Вполне вариант, но имеет смысл только при недоступности К155ИД1.\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  То есть, на каждый индикатор ставим по микросхеме. В моем случае получается 4 штуки. Это будет статическая индикация. Для упрощения схемотехники нередко применяется индикация динамическая — когда в каждый момент времени выводится одна цифра, но смена происходит быстро, и за счет инерции человеческого зрения, незаметно. Но такой подход идет вразрез с моей идеей универсального модуля, с минимальными затратами подключаемого к «голове» (микроконтроллер, компьютер, «малинка» какая-нибудь).\r\n  \r\n  Итерация первая, 16 ножек.\r\n  \r\n  Решаем проблему в лоб. 4 индикатора ИН-12. На каждый из них приходится по одному дешифратору. Аноды через ограничивающие резисторы (50 КОм 0.5 Вт) подключены к источнику высокого напряжения. В моем случае — маленький бесхозный анодно-накальный трансформатор с диодным мостом.\r\n  \r\n  Разведена плата, с применением фоторезиста изготовлена, компоненты установлены, можно пользоваться. 16 входов подключаются к GPIO Raspberry PI, пишется простенькая программка, отображающая время. \r\n  \r\n  Только вот не слишком ли жирно, отдавать такое количество ножек на отображение четырех цифр? Я уж не говорю о том, что кому-то захочется показать секунды, и GPIO «малинки» просто не хватит. И вообще, причем тут Raspberry, если для минимальных часов нам понадобятся восьминогая ATtiny и DS1307?\r\n  \r\n  Итерация вторая, 2 ножки.\r\n  \r\n  Так что, разводим еще одну маленькую платку, которая будет «вторым этажом». На ней располагаются еще две микросхемы — восьмиразрядные сдвиговые регистры 155ИР8. Они у нас будут преобразователем последовательного интерфейса в параллельный. \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  Сдвиговый регистр работает следующим образом: по фронту импульса на тактовом входе (CLK) происходит запись в регистр бита на информационном входе (A) с одновременным сдвигом уже имеющихся битов. Восемь выходов регистра отражают его содержимое — они отправляются на входы двух дешифраторов. Два регистра объединяются в один 16-разрядный путем соединения последнего выхода одного со входом другого. Так что, от устройства, управляющего модулем индикации, требуется выдавать 16 бит (по 4 бита на разряд индикации), не забывая каждый зафиксировать тактовым импульсом.\r\n  \r\n  И что?\r\n  \r\n  И все. Есть базовая часть модуля индикации, которую можно использовать, если вам не жалко 16 пинов. Есть дополнительная плата, которая сокращает необходимое число управляющих пинов до двух. Питание — 5 вольт и что-то в районе 180-220 (по 2 мА на индикатор). Можно использовать трансформатор, можно — импульсный преобразователь. Можно — от сетевого напряжения через диод, как это рекомендуется в древних мануалах. Последнего варианта я убоялся, т.к. не люблю, когда у меня по плате свободно гуляет никак не развязанная «сеть».\r\n  \r\n  Ближе к готовому устройству\r\n  \r\n  Все наработки публикуются на Github. В настоящий момент там можно лицезреть готовые разводки плат (Sprint Layout 6), схемы (Eagle) и программу (Python) для Raspberry Pi. Последняя находится в процессе пиления. На момент публикации реализован вывод времени, эффект рандомной прокрутки цифр (надо периодически зажигать все катоды ИНки во избежание т.н. «отравления»), начата работа над будильником. Ведь я не просто так делал модуль на AY-3-8912, он здесь тоже поучаствует. Питоний код в рамках данного материала я описывать не буду, это для третьей части, посвященной сборке в один мегадевайс Raspberry Pi, Nixie-индикатора и чиптюнового модуля.\r\n  \r\n  Гитхаб (основной проект) \r\n  Гитхаб (чиптюн)\r\n  Индикатор ИН-12\r\n  Дешифратор ИД1 \r\n  Сдвиговый регистр ИР8     	   	', 'Универсальный Nixie-модуль на ИН-12 ', '2015-04-05 11:39:29', 'http://habrahabr.ru/post/254901/'),
(3, '     	Вместо введения\r\n  Спасибо моему анонимному хабрадедуморозу за подарочек (pro mini). Долго колебался, что с ней делать. Махнул рукой и заказал в дополнение китайскую посылочку…\r\n  Спустя месяцок настало и моё время “помигать светодиодом” ;).\r\n  Идея\r\n  Пока ехала посылка, думал что бы такого сделать. В итоге принято решение сделать что-нибудь чуть больше, чем помигать светодиодом.\r\n  Идея заключается в следующем — отобразить прогресс просмотра видео, используя какой-нибудь индикатор.\r\n  \r\n  Задача\r\n    вытащить статистику по запущенному фильму;  обработать и передать в arduino данные;  отобразить прогресс на индикаторе.  \r\n  Для нетерпеливых сразу результат\r\n  \r\n  \r\n  Реализация\r\n  1. MPC\r\n  Сколько себя помню, на ПК у меня всегда установлен Media PLayer Classic. Оказывается MPC умеет отдавать статистику по, скажем так, текущей сессии в виде html-странички со следующим содержанием:\r\n  HTML&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt;     &lt;head&gt;         &lt;meta charset=&quot;utf-8&quot;&gt;         &lt;title&gt;MPC-HC WebServer - Variables&lt;/title&gt;         &lt;link rel=&quot;stylesheet&quot; href=&quot;default.css&quot;&gt;         &lt;link rel=&quot;icon&quot; href=&quot;favicon.ico&quot;&gt;     &lt;/head&gt;     &lt;body&gt;         &lt;!--[if lt IE 8]&gt;             &lt;div class=&quot;browser-warning&quot;&gt;&lt;strong&gt;Warning!&lt;/strong&gt; You are using an &lt;strong&gt;outdated&lt;/strong&gt; browser. Please &lt;a href=&quot;http://browsehappy.com/&quot;&gt;upgrade your browser&lt;/a&gt; to improve your experience.&lt;/div&gt;         &lt;![endif]--&gt;         &lt;p id=&quot;filepatharg&quot;&gt;D:%5cFILMS%5cIts.Always.Sunny.in.Philadelphia.S10E10.720p.WEB.rus.LostFilm.TV.mp4&lt;/p&gt;         &lt;p id=&quot;filepath&quot;&gt;D:\\FILMS\\Its.Always.Sunny.in.Philadelphia.S10E10.720p.WEB.rus.LostFilm.TV.mp4&lt;/p&gt;         &lt;p id=&quot;filedirarg&quot;&gt;D:%5cFILMS&lt;/p&gt;         &lt;p id=&quot;filedir&quot;&gt;D:\\FILMS&lt;/p&gt;         &lt;p id=&quot;state&quot;&gt;1&lt;/p&gt;         &lt;p id=&quot;statestring&quot;&gt;Пауза&lt;/p&gt;         &lt;p id=&quot;position&quot;&gt;1069384&lt;/p&gt;         &lt;p id=&quot;positionstring&quot;&gt;00:17:49&lt;/p&gt;         &lt;p id=&quot;duration&quot;&gt;1255210&lt;/p&gt;         &lt;p id=&quot;durationstring&quot;&gt;00:20:55&lt;/p&gt;         &lt;p id=&quot;volumelevel&quot;&gt;75&lt;/p&gt;         &lt;p id=&quot;muted&quot;&gt;0&lt;/p&gt;         &lt;p id=&quot;playbackrate&quot;&gt;1&lt;/p&gt;         &lt;p id=&quot;reloadtime&quot;&gt;0&lt;/p&gt;     &lt;/body&gt; &lt;/html&gt; \r\n  \r\n  Что бы добиться от него такого функционала, нужно проставить галочку &quot;Слушать порт&quot; в настройках\r\n  Настройки\r\n  \r\n  Всё самое важное содержится в тегах \r\n  &lt;p id=&quot;параметр&quot;&gt;значение&lt;/p&gt;\r\n  Остаётся только разобрать их и выбрать нужное.\r\n  2. NodeJS\r\n  Разбирать страничку будем при помощи NodeJS. Кстати, страница доступна по адресу localhost:13580/variables.html (порт из настроек).\r\n  Всю логику можно разделить на 3 блока:\r\n    модуль работы с MPC web-сервером;  модуль обработки данных;  модуль работы с arduino.  \r\n  Далее основные моменты. Весь проект вместе с кодом можно глянуть на github\r\n  Немного jsПри помощи родного http.get и обещаний обращаюсь к нашей странице\r\n  main.prototype.get = function(){ 	var that = this 	return new Promise(function(done){ 		http.get(that.mpc_uri, function(res) { 		  res.on(''data'', function (chunk) { 			that.mpc_obj.parse(chunk) 			done(that.mpc_obj.get()); 		  }); 		}).on(''error'', function(e) { 			done(e.message); 		}); 	}) } \r\n  Методом parse объекта mpc_obj разбираю полученные данные\r\n  MPC_obj.prototype.parse = function(data){ 	var obj = {} 	data.toString().split(''\\n'').forEach(function(line){ 		// отбираем параграфы, так как параметры только в них 		if (match=/\\&lt;p/.test(line)){ 			var name2 = line.match(/id\\=\\&quot;(\\w+)\\&quot;/)[1] 			if (!obj.hasOwnProperty(name2)) 				 obj[name2]=line.substring(line.indexOf(''&gt;'')+1,line.lastIndexOf(''&lt;'')) 		} 	}) 	this.settings=obj; } \r\n  На выходе имеем вот такой объект\r\n  { filepatharg: ''D:%5cmbrr555.avi'',   filepath: ''D:\\\\mbrr555.avi'',   filedirarg: ''D:%5c'',   filedir: ''D:\\\\'',   state: ''1'',   statestring: ''Пауза'',   position: ''1023'',   positionstring: ''00:00:01'',   duration: ''114906'',   durationstring: ''00:01:54'',   volumelevel: ''77'',   muted: ''0'',   playbackrate: ''1'',   reloadtime: ''0'' } \r\n  Подготавливаем данные для arduino\r\n  // Возвращает прогресс просмотренного MPC_obj.prototype.getProgress = function(){ 	return (this.settings[&quot;position&quot;]/this.settings[&quot;duration&quot;]).toFixed(5) } // Возвращает прогресс для ШИМ (PWM) 	1,0 -&gt; 255 MPC_obj.prototype.PWM = function(){ 	return (this.getProgress()*255).toFixed(0) } \r\n  Общение с arduino происходит путём обмена данными на com-порту. Для работы с com выбрал библиотеку node-serialport \r\n  Подключаемся с её помощью к порту com5 и устанавливаем скорость \r\n  var SerialPort = require(''serialport'').SerialPort; var serialPort = new SerialPort(&quot;COM5&quot;, {   baudrate: 57600 }, false); \r\n  Открываем порт и посылаем в ответ arduino наш прогресс каждый раз, когда она попросит\r\n  serialPort.open(function (error) { 	if ( error ) { 		console.log(''failed to open: ''+error);    } else { 	console.log(''open''); 	//получил данные от arduino 	serialPort.on(''data'', function(data) { 		main.init(function(a){ 			//послал в ответ прогресс фильма 			serialPort.write(a); 		}); 	 }); 	} }); \r\n  \r\n  3. Arduino\r\n  Теперь железо. Данные для arduino мы подготовили, теперь определимся с той самой индикацией. Для отображения прогресса я выбрал вот такой очень дешёвый модуль вольтметра и немного его «подкрасил»\r\n  \r\n  Чуть подробнейОказывается, крышка держалась на… липкой ленте и легко снималась\r\n  \r\n  Ну а далее размеры и пара новых панелек\r\n  \r\n  \r\n  В arduino мы посылаем данные о прогрессе фильма и пропорционально изменяем напряжение на одной из ног микроконтроллера. Принципиальная схема (наличие светодиода для того, что бы им помигать в конце сеанса ;))\r\n  \r\n  Теперь запрограммируем наш микроконтроллер.\r\n  В переменную inByte будем считывать данные, полученные по com-порту. Вешаем на 3й пин светодиод, а на 9й — вольтметр. Устанавливаем точно такую же скорость как и раньше. loop — наш бесконечный цикл. Каждые 100мс отправляем в порт абстрактные данные Serial.print(''A''). Ждём наличие ответа Serial.available() &gt; 0. Если на ПК запущен MPC и nodeJS-приложение, которое возвращает прогресс, то чуть подсветим светодиод на 3м пине analogWrite(3, 5) и передадим на 9й пин вольтметра значение прогресса analogWrite(9, inByte). Функция analogWrite передаёт значения от 0 до 255, что в нашем случае соответствует от 0В до 5В. Тут нужно почитать про ШИМ (PWM)  — это всё благодаря ему.\r\n  Когда мы просмотрели половину фильма, в этот момент на 9й пин будет передано 255/2 = analogWrite(9, 127), что соответствует 2,5В на вольтметре. Как только фильм закончен — бодренько мигаем светодиодом ;)\r\n  int inByte = 0;   void setup()  {   pinMode(9, OUTPUT);   pinMode(3, OUTPUT);   analogWrite(3, 0);   analogWrite(9, 0);   Serial.begin(57600); }  void loop()  {   Serial.print(''A'');   delay(100);     if (Serial.available() &gt; 0) {     analogWrite(3, 5);     inByte = Serial.parseInt();     analogWrite(9, inByte);     if (inByte==255)     analogWrite(3, 255);   } } \r\n  Вот так это всё выглядит в живую на макетке\r\n  \r\n  да ещё и на видео ;)\r\n  \r\n  Кстати в этом проекте использован как раз подарочек от того самого хабрадедамороза.\r\n  PS. \r\n  Рядом лежит Attiny13, как время будет — попробую перенести всё на неё.\r\n  Ссылки:\r\n    подарочек от хабрадедамороза;  Media PLayer Classic;  Весь проект на github;  модуль для работы с com-портом node-serialport;  про ШИМ (PWM) ;  свеженький NodeJS;  Arduino IDE.  \r\n  Если где-то написал полную ерунду или ошибся — подсказывайте, подправлю ;). Спасибо за внимание.     	   	', 'MPCMeter — индикация прогресса просмотра видео. Arduino + JavaScript ', '2015-04-05 11:39:33', 'http://habrahabr.ru/post/254911/'),
(4, ' 			В первую голову проблема касается продуктовых софтостроителей, хотя и в проектном тоже не все гладко.\r\n  \r\n  Начнем с недавней истории. Технология COM (и другие, но суть та же) дала возможность разработчикам компонентов простым образом отделить интерфейсы от реализации. Для прикладных разработчиков это означало, например, что при обновлении компонентов старые интерфейсы продолжали бы работать. В теории, конечно. Но и на практике это выглядело гораздо лучше, чем «ад динамических библиотек», имеющих всегда версию «текущая».\r\n  \r\n  Каков механизм? Он очень прост. \r\n  \r\n  Объявляет программист компонента интерфейс\r\n  \r\n  [uuid(a03d1421-b1ec-11d0-8c3a-00c04fc31d2f)] interface ICoolPrinting {   void Print(const string fileName); } \r\n  Потом программист этот интерфейс реализует. Скомпилированная программа устанавливается на устройстве пользователя, где в некотором реестре означенному UUID ставится в соответствие исполняемый модуль. Например, в Program Files\\CoolPrinting1_0\\cool.exe.\r\n  \r\n  В сторонней прикладной программе, использующей этот интерфейс, у того же «реестра» по UUID запрашивается интерфейс и вызывается нужная функция.\r\n  \r\n  ICoolPrinting printing = GetInterface(...); printing.Print(&quot;c:\\myfile.pdf&quot;); \r\n  Что происходит, если разработчик компонента меняет функционал?\r\n  \r\n  В простом варианте расширяется интерфейс. Это означает что разработчик добровольно обязан (ощутите это прекрасное сочетание слов):\r\n    создать новый интерфейс ICoolPrinting2 с новым UUID, возможно, унаследовав его от прежнего;  реализовать его, не ломая старую реализацию.  \r\n  [uuid(d26d1421-g1ec-12d0-8c3a-12c84ef31d2f)] interface ICoolPrinting2 : ICoolPrinting {   bool SetupPrinter(); } \r\n  Теперь даже установленная вместо старой, новая версия продолжает работать по-прежнему. Прикладному программисту, использующему компонент, ничего переделывать не надо. То есть, совсем ничего. Круто, да?\r\n  \r\n  В более сложном варианте разработчик выпускает новую версию, не поддерживающую старый интерфейс. Но при этом он опять же добровольно обязан предусмотреть возможность одновременной установки новой версии рядом со старой, куда-нибудь в Program Files\\CoolPrinting2_0.\r\n  \r\n  И в этом случае прикладному программисту тоже ничего переделывать не надо.\r\n  \r\n  Однако вышеописанное происходит только в мире, где программисты хотя бы примерно представляют, что они производят. А их приказчики знают дело, которым руководят. Такое тоже бывает.\r\n  \r\n  Чаще происходит наоборот.\r\n  \r\n  В наиболее гуманном варианте программист не создает новый интерфейс, а просто правит старый, меняя, заодно, его UUID. Менять UUID надо обязательно, иначе невозможно будет отличить новый интерфейс от старого. Новая версия устанавливается вместо старой.\r\n  \r\n  Программа, использующая компонент, сразу перестает работать. Потому что ссылка по прежнему UUID ведет в пустоту. Но обойти эту проблему достаточно просто, поскольку интерфейс можно:\r\n    запросить по имени, а не по UUID;  использовать динамические вызовы функций (на стадии исполнения).  \r\n  OleVariant printing = GetInterface(&quot;ICoolPrinting&quot;); printing.Print(&quot;c:\\myfile.pdf&quot;); \r\n  Такая «хитрая» техника будет работать до тех пор, пока программист компонента не удалит старые методы и интерфейсы. Тогда при попытке использовать функционал в вашей прикладной программе произойдет ошибка.\r\n  \r\n  Положение усугубляется тем, что установить две версии компонента на одном и том же устройстве чаще всего оказывается невозможно. Потому что если разработчик не сумел обеспечить совместимость на уровне интерфейсов, то чтобы обеспечить бесконфликтную работу разных версий компонента, мозгов у него тем более не хватит.\r\n  \r\n  Шайба переходит к прикладному программисту. Доброжелатели с форума шепчут: «Паттерн адаптер». А то и «стратегия». А чему удивляться? Основное назначение шаблонов так называемого проектирования — создание костылей и подпорок.\r\n  \r\n  И вот простая и ясная прикладная программа из двух строчек — получение ссылки на компонент и вызов метода, превращается в кашу из сотен строк «шаблонного» кода и нескольких классов, сообразно числу версий компонента. Разумеется, я не буду их тут приводить.\r\n  \r\n  Примеры? Пожалуйста. Компонент PdfCreator, развиваясь с версии 0.х до нынешней 2.х, разрабатывался именно так. Вначале правкой старых интерфейсов с заменой UUID, а потом созданием новых, несовместимых со старыми, но уже удалёнными. Две разные версии на одном компьютере устанавливать нельзя.\r\n  \r\n  Можно возразить, что PdfCreator — бесплатная утилита с открытым кодом. Но что это меняет? Разве нерадивость разработчиков можно компенсировать пословицей «Дареному коню в зубы не смотрят»? Есть и другие примеры вполне коммерческих компонентов, не обеспечивающих совместимость между версиями.\r\n  \r\n  Мораль. Правило «Сделано не здесь» (not invented here) имеет под собой веские основания. Как минимум, иметь под рукой исходники будет нелишним. 			     ', 'Про интерфейсы ', '2015-04-05 11:40:18', 'http://habrahabr.ru/post/254803/');
INSERT INTO `pages` (`id`, `content`, `title`, `datetime`, `url`) VALUES
(5, ' 			Предыстория\r\n  Совсем недавно у нас случилась ситуация, когда «потерялись» все YouTube и Vimeo ссылки на ролики, количество просмотров которых нам необходимо выводить на сайте. Это нужно, чтобы потенциальные инвесторы и партнеры видели, какие текущие показатели у наших сериальных проектов. Скрипт обновляет данные раз в сутки, хотя я неоднократно просил сделать обновление показателей в реальном времени. Я много лет не программирую, ушел в совершенно иной вид деятельности и в настоящий момент возглавляю анимационную студию. Конечно же, я был обескуражен возникшей ситуацией с потерей данных, устроил разнос и прочее, но это к делу отношения не имеет. \r\n  \r\n  Ссылки были восстановлены, но вот счетчик меня смутил. Пока шло восстановление, цифры я большими группами собирал вручную, а теперь после того, как их обошел скрипт и выдал результат, они катастрофически не бились. На мои претензии программистам я получал ответ, что всё ок, хоть упроверяйся. Не желая сильно заморачиваться, я решил пойти по весьма странному пути: сделать обход ссылок при помощи Google.Sheets и посмотреть на результаты, а заодно проверить, действительно ли это столь мучительный процесс: обход нескольких сотен ссылок и получение данных о просмотрах. Потратил на свой эксперимент я несколько часов, выяснил, что дело это не хитрое, собрать данные в реальном времени достаточно просто, а скрипт на нашем сайте, действительно, работает криво и данные собирает неточно, теряя по дороге миллионы просмотров.\r\n  \r\n  ImportXML и Vimeo\r\n  Помятуя, что как-то делал себе вывод актуального курса доллара и евро, нашел старый документ и подглядел в нем удобную функцию Google.Sheets — это ImportXML (в Google есть 4 функций удобно утягивающих данные из сети: ImportXML, ImportDATA, ImportHTML, ImportFEED). В ячейке таблицы просто пишем &quot;=ImportXML&quot; и Google дает подсказку, как правильно вынимать необходимые данные. Я полез на сайт Vimeo и нашел странницу с API и описанием, где получить XML с данными ролика. Всё банально:\r\n  \r\n  http://vimeo.com/api/v2/video/00000000.xml\r\n  где 00000000 — это id ролика (берется из адресной строки на Vimeo)\r\n  \r\n  Открыв XML, я увидел, что всё, что мне нужно. В контейнере третьего порядка &lt;stats_number_of_plays&gt; лежали данные о просмотре. Таким образом получить в Google.Sheets данные о просмотре например вот этого ролика, можно просто указав в ячейке следующее значение:\r\n  =IMPORTXML(&quot;http://vimeo.com/api/v2/video/17589726.xml&quot;, &quot;//videos/video/stats_number_of_plays&quot;)\r\n  В первых кавычках ссылка на XML, во вторых кавычках указываем XPath к нужному контейнеру. Подробнее о синтаксисе XPath можно прочитать здесь.\r\n  \r\n  ImportJSON и YouTube\r\n  Чуть сложнее оказалось с YouTube. Да, они дают данные о ролике, но в контейнерах JSON. Найти сводный файл оказалось не сложнее, чем на Vimeo. Всё также не сложно:\r\n  \r\n  http://gdata.youtube.com/feeds/api/videos/00000000?v=1&alt=json\r\n  где 00000000 — это id ролика (берется из адресной строки на YouTube)\r\n  \r\n  Но вот сам JSON для меня лично — история новая. Я попробовал к нему обращаться и так, и сяк, в результате подумал, что стоит поискать нечто вроде «ImportJSON» и не ошибся. Нашел скрипт, чтобы добавить такую фичу в Google.Sheet, добавил и сразу с JSON сдружился. Сам текст скрипта лежит здесь по ссылке.\r\n  \r\n  Устанавливать скрипт в Google.Sheets надо так:\r\n  1. Создаете новый Google Spreadsheet.\r\n  2. Жмете на Tools -&gt; Script Editor.\r\n  3. Жмете на Create script for Spreadsheet.\r\n  4. Удаляете заготовку нового скрипта и вставляете текст нашего скрипта.\r\n  5. Переименовываете его в ImportJSON.gs и сохраняете.\r\n  6. Возвращаетесь в свой документ, где уже работает новая функция “=ImportJSON()” в полном объеме.\r\n  \r\n  Открыв JSON от YouTube, мы можем найти все необходимые нам данные о ролике. В контейнере &lt;yt$statistics&gt; есть атрибут viewCount, который нам и нужен. Таким образом получить в Google.Sheets данные о просмотре например вот этого ролика, можно просто указав в ячейке следующее значение:\r\n  =ImportJSON(&quot;http://gdata.youtube.com/feeds/api/videos/GRNZ0wwNOTc?v=2&alt=json&quot;, &quot;/entry/yt$statistics/viewCount&quot;, &quot;noHeaders&quot;)\r\n  Вот и всё. Кстати, в итоге получилось, что Google.Sheets считает данные сотен роликов за… меньше, чем за одну минуту. Я был прав. Программисты просто водили меня вокруг пальца. Получить данные из контейнеров XML и JSON при помощи РНР задача еще менее хитрая, чем та, которую я перед собой поставил. Мало того, и YouTube, и Vimeo предлагают готовые РНР решения для разработчиков.\r\n  \r\n  Всем удачи! Надеюсь, эта короткая статья будет полезна. 			     ', 'Импорт данных из YouTube и Vimeo в Google.Docs ', '2015-04-05 11:40:19', 'http://habrahabr.ru/post/254805/'),
(6, ' 			\r\n  \r\n  Всякий, знакомый с проблематикой кодирования информации, периодически сталкивался с идеями алгоритмов «суперсжатия» данных без потерь. Зачастую предлагается использование хеш-сумм, генераторов случайных чисел (зачем?), или просто различных комбинаций повторного сжатия данных при помощи архиваторов. После очередного бурного обсуждения, как правило, эксперты в очередной раз советуют первооткрывателям ознакомиться с азами теории информации. Особо упертым предлагают просто написать программу сжатия данных на один бит файла со случайными данными. После этого доселе бурно проходящее обсуждение «революционной технологии» постепенно сходит на нет. \r\n  \r\n  \r\n  Проблематика завлекает\r\n  \r\n  Много лет назад, в ходе работы над программой анализа текстов, я также заинтересовался этой темой. В результате изучения фундаментальных основ современной теории информации, стало понятно, об какие камни спотыкались многочисленные первопроходцы, пытавшиеся с наскока решить эту проблему.\r\n  \r\n  Первоосновы…\r\n  \r\n  Все дело в структуре данных\r\n  \r\n  Сжатие данных базируется на энтропийной кодировании, основанном на усреднении частот появления элементов в закодированной последовательности. То есть, только если символы некоторой последовательности данных встречаются в ней с различной вероятностью, тогда можно осуществить сокращение данных без потери информации. При этом, после такого сжатия в получившейся последовательности, частóты, с которыми появляются отдельные знаки, практически одинаковы (энтропия достигает своего максимального значения).\r\n  \r\n  \r\n  В глазах у Шеннона вселенская грусть — у сжатия данных есть свой предел\r\n  \r\n  Согласно обратной теореме Шеннона об источнике кодирования, максимальная степень сжатия с помощью кодирования без потерь ограничивается энтропией источника. То есть, простыми словами — нельзя сжать данные больше, чем позволяет их энтропия, которая в свою очередь вычисляется по формуле:\r\n  \r\n  \r\n  \r\n  Из вышесказанного следует, что если логарифм вероятности появления того или иного элемента в данных, равен длине этого элемента, получить выигрыш от кодирования не удастся. При этом, после сколько-нибудь существенного сжатия данных без потерь, частóты распределений символов в получившейся последовательности стремятся к равномерному распределению, а стало быть, степень повторного сжатия этих данных стремится к нулю. \r\n  \r\n  Не обязательно быть знакомым с основами теории информации, чтобы проверить верность этого утверждения. Достаточно взять любую программу для сжатия данных будь-то zip или rar, и попробовать повторно сжать уже заархивированный файл. Либо степень сжатия такого файла будет ничтожно мала, либо, что более всего вероятнее, повторное сжатие файла приведет к его увеличению (поскольку программа сжатия добавит к уже имеющемуся объему данных некоторую служебную информацию). То же самое произойдет и с другими программами для сжатия данных без потерь информации, даже с самыми эффективными.\r\n  \r\n  Информационный взрыв\r\n  Как видим, существующие технологии кодирования информации бессильны перед существующим фундаментальным теоретическим пределом сжатия данных. При этом необходимо учитывать, что по одной оценке только в 2008 году было создано 487 миллиардов гигабайт цифровых данных. В 2011 году сгенерировано 1,8 трлн. гигабайт данных. А в 2012 создано уже в 5 раз больше цифровой информации, чем в 2008 году. При этом надо понимать, что речь в данном случае идет только о сохраненных данных — вся остальная информация, судя по всему, была для нас бесследно утеряна из-за банальной нехватки места для ее хранения. К настоящему моменту на планете Земля насчитывается более триллиона мобильных устройств. Только за один день создается более 2,5 млрд. гигабайт данных. То есть 500 млн. компакт-дисков данных ежедневно, которые можно выставить туда и обратно в два ряда от Солнца до планеты Плутон (пользователи написали, что возможно расчеты неверны — авт.).\r\n  \r\n  \r\n  \r\n  В итоге, для хранения всей этой информации информационные компании постоянно увеличивают количество дата-центров. И этим гигантским сооружениям постепенно уже становится мало места на суше — данные переправляются в мировой океан, на плавучие дата-центры. И, увы, вся эта колоссальная масса электроники непрерывно потребляет огромное количество энергии и выделяет соответствующее ей количество тепла в атмосферу Земли.\r\n  \r\n  \r\n  Один из дата-центров. Матрица отдыхает...\r\n  \r\n  Пытаемся обуздать хаос\r\n  \r\n  Некоторые хаос почему-то представляют так...\r\n  \r\n  Однако, при всей насущной потребности прорыва в технологиях сжатия данных, мы заходим в тупик фундаментальных основ теории информации. Поэтому, прекратив попытки пробить головой стену энтропийного предела сжатия данных, я решил более пристально изучить из чего, собственно, состоит эта стена. А состоит она из данных, энтропия которых стремится к максимальной, то есть, попросту говоря из хаоса.\r\n  \r\n  \r\n  Хотя он выглядит примерно так...\r\n  \r\n  Именно хаос мы увидим, рассматривая данные сжатого файла. Возможно, это и не самый идеальный источник случайных данных, но в плоскости практического применения в сфере сжатия данных вполне подходит. Ведь достаточно найти хотя бы одну закономерность в этом хаосе, и ее будет можно использовать для дальнейшего сжатия данных.\r\n  \r\n  Находим бреши в коде Вселенной\r\n  \r\n  \r\n  Казалось бы, нет более противоположных понятий, чем закономерность и хаос. Но, как оказалось, они тем не менее есть… На солнце есть пятна, а в хаосе есть свои закономерности.\r\n  \r\n  Как уже было сказано ранее, если логарифм вероятности появления какого-либо элемента в данных не соответствует его длине, это дает возможность, согласно теореме о кодировании, сжать такие данные. Но существуют ли такие элементы в данных, энтропия которых максимальна?\r\n  \r\n  \r\n  Внимательно посмотри и найди 10 закономерностей (шутка)\r\n  \r\n  Да, такие элементы имеют место быть в любых данных, энтропия которых близка к максимальной настолько, что их дальнейшее сжатие невозможно (в рамках существующих теоретических основ). В своих исследованиях я продвигался от более сложных структур данных к наиболее простым, так сказать, неким первоосновам или «атомам» хаоса.\r\n  \r\n  Интересно? Следуй за белым кроликом просто за мной…\r\n  \r\n  Что внутри кроличьей норы\r\n  Рассмотрим бинарный (двоичный) код сжатых данных, которые не поддаются дальнейшему сжатию никакой из существующих программ сжатия данных.\r\n  \r\n  Возьмем, и последовательно слева направо заменяем все сочетания из трех знаков, из которых два знака одного вида находятся по бокам, а один знак другого вида находится посредине (проще говоря, сочетание «010» или «101») — активное кодовое слово (АКС) на новый знак, например, знак «2».\r\n  \r\n  Например, во фрагменте «111000110101000010111» мы найдем два сочетания «101»: «1110001&lt;101&gt;010000&lt;101&gt;11» (знаки &quot;&lt;&quot; и &quot;&gt;&quot; приведены только для выделения АКС). После замены их на «2», фрагмент выглядит так: «11100012010000211». В результате такой замены, например, в 20 миллионах бит кода будет примерно 2001550 всех знаков «2».\r\n  \r\n  Казалось бы, это означает, что данное сочетание появляется в коде с вероятностью 2001550:20000000=0.1000775, что дает ее двоичный логарифм в 3.320810439 бит. Однако это совсем не так. Тут не все так просто…\r\n  \r\n  Допустим, мы убрали из кода все эти знаки «2». После этого мы опять обнаружим в нем эти же АКС “101”. Откуда они там взялись? А взялись они из сочетаний наподобие “110101,” которые мы заменили сначала на “1201”, а убрав “2” получили опять то же АКС “101”. \r\n  \r\n  Например, после изъятия их из вышесказанного фрагмента, он выглядит так: «111000&lt;101&gt;000011». Сочетание «101» появилось после изъятия двойки из отрезка фрагмента «1201». Стало быть, в полученном фрагменте для восстановления первоначального состояния нужна информация только о расположении одного знака “2”, т. к. очевидно, что другая двойка обязательно должна будет расположена после первого знака в сочетании «101» — «1201» («1110001201000011»). Все двойки, которые располагались в подобных местах, можно не указывать в данных о расположении двоек. Значит для восстановления первоначальных данных, нам необходимы сведения только о расположении не 2001550, а 2001550-234200=1767350 двоек (где 234200 – это количество вновь появившихся АКС после того как мы убрали все 2001550 двоек из 20 000 000 бит кода с энтропией близкой к максимальной (ЭБМ)).\r\n  \r\n  Кроме этого, необходимо учитывать, что двойка никогда не может располагаться после сочетания «10» (вот так — «102»), поскольку в результате предыдущих замен “101” на “2” отрезок «10101» превратился бы в «201», а не в «102» (т. к. замена идет слева направо), а затем (уже после изъятия двоек) останется «01». Поэтому все места после сочетаний «10» (после замены АКС на двойки) определяют как запретную зону (ЗЗ) для вставки новых двоек. Например, во фрагменте до изъятия двоек «11100012010000211» обнаружилось две таких ЗЗ — «1110*0012010*000211» (отмечены звездочками), что уменьшает число вариантов расположения АКС (двоек) — среди фрагмента«111H01201H00211» (где знаком «H» заменили «00»). \r\n  \r\n  С учетом вышеизложенного, код расположения (КР) двоек для этого фрагмента можно записать в виде строки «00000000000200», и уже теперь убирать все двойки из фрагмента, который можно записать в виде строки “111H0101H0011”. Заменив знак H опять на «00», получаем «111000101000011». \r\n  \r\n  Если проделать все эти замены в бинарном коде с ЭБМ, то вероятность появления двойки в КР получаем примерно 0.128-0.1285, что дает нам отрицательный двоичный логарифм в пределах 2.965-2.96, что, как мы видим, меньше битовой длины АКС. При этом уникальность ситуации заключается в том, что эта закономерность соблюдается вне зависимости от того, какого типа, структуры, вида файл был сжат. Главное, чтобы получившиеся в результате сжатия данные, имели ЭБМ, или проще говоря, их нельзя было сжать повторно.\r\n  \r\n  Код хаоса взломан — что дальше?\r\n  \r\n  \r\n  Что делают хакеры, взломав код банка? Похищают деньги! Мы тоже будем похищать, но не деньги, а энтропию, внося во вселенский хаос упорядоченность и спасая вселенную от ее энтропийной (или тепловой) смерти.\r\n  \r\n  Для 20 000 000 бит данных с ЭБМ в результате вышеуказанных манипуляций, мы получим не сжатый КР длиной примерно 13757030 бит (1767350 двоек среди 11989680 остальных знаков, которые мы обозначаем нулями). Код по формуле вычисления энтропии можно сжать до 7610719.618 бит. Логарифм (по основанию 2) отношения количества двоек к количеству всех знаков в этом примере равен 2.960509361 бит.\r\n  \r\n  Что теперь делать? Записываем полученный КР 7610719.618 бит на бумажку в машинную память, а вместо него вставляем в оставшиеся знаки двойки так, чтобы вероятность их появления была равна 0.125 (логарифм вероятности соответственно 3 бита). Где взять этот код и что это нам даст?\r\n  \r\n  Давайте посмотрим: нам нужно взять КР 1712811 знаков среди остальных 11989680 знаков (такой КР сжимается по формуле энтропии до 7448185.838 бит), что и даст нам требующуюся вероятность 0.125. Найти такой код проще простого — подобрать по нужному количеству один из знаков в восьмеричных данных с ЭБМ (3-битный восьмеричный алфавит), и перенести его КР в виде нового расположения двоек, которое будет соответствовать расположению изъятого знака из 8-ричных данных.\r\n  \r\n  Каков выигрыш в сжатии данных от этих действий? Заменив одно количество АКС на другое, мы уменьшили общую длину сжимаемых данных на 54539 АКС (каждое длиной в три бита), т. е. уменьшили объем данных на 163617 бит. При этом, благодаря изъятию двоек среди остальных знаков, первоначальный код расположения 7610719.618 бит необходимо было сохранить для дальнейшего его восстановления. Зато вместо него размещением АКС в новом расположении, среди оставшихся, после удаления первоначального количества АКС, знаков, был записан другой код расположения АКС имеющий объем 7448185.838 бит (на который был уменьшен объем данных в восьмеричных данных с ЭБМ, которые мы превратили в 7-ричные, получив тот самый выигрыш примерно в 7448185 бит), что дало в разности увеличение кода на 7610719.618-7448185.838=162533.7798 бит. Однако общее уменьшение данных составило 162533.7798-163617=-1083.220189, т. е., округляя, 1083 бит.\r\n  \r\n  «Бесконечное сжатие» для бесконечных данных\r\n  \r\n  \r\n  Конечно, можно возразить, что столь малая степень сжатия (20 миллионов бит мы сокращаем только на 1083 бит) является весьма небольшой. Однако нужно отметить, что в случае применения данного кодирования данных для их сжатия, такое сжатие можно повторить вновь и вновь.\r\n  \r\n  В связи с этим необходимо разъяснить суть выражения «бесконечное сжатие». Естественно, что сжатие некоторых конечных данных возможно до определенного предела, который обусловлен конкретным видом кодирования, подобному вышеописанному. То есть, мы можем уплотнить какое угодно количество данных до определенного минимума (например, в вышеуказанном примере осуществления «бесконечного сжатия», возможно, например, уплотнить 20 гигабайт данных с ЭБМ до, например, 20 мегабайт, но, пока, отнюдь не до 200 байт). При этом, в дальнейшем, такой полученный несжимаемый минимум данных можно будет соединить с другими полученными минимумами данных и опять сжать уже объединенные таким образом данные вышеуказанным способом. Поэтому, именно для неограниченного объема данных существует возможность неограниченного уплотнения. Ограниченный объем данных уплотняется до некоторого определенного минимального предела.\r\n  \r\n  «Прочитал, допустим, это правда. В чем подвох?»\r\n  Да, действительно, подвох, или скорее нюанс, действительно имеется. Суть этого нюанса заключается в том, что на этапе сжатия данных КР АКС в арифметическом кодировании необходимо применять более длинную арифметику, чем имеется в известных мне программах сжатия данных. Обычно при арифметическом кодировании более длинная арифметика не дает ничего в практическом плане, давая выигрыш в сжатии в ничтожно малые доли процентов, весьма существенно замедляя при этом время сжатия. Однако, в данном случае, эти ничтожно малые доли процентов являются критичными в ходе каждого цикла сжатия.\r\n  \r\n  \r\n  Пока Гарольд под прикрытием сеет доброе вечное, молодой гений пишет на листочке код программы суперсжатия… (Person of Interest S02E11 (С)\r\n  \r\n  Так что, обращаюсь ко всем толковым программистам с предложением написать модуль арифметического кодирования с более длинной арифметикой на более быстром языке программирования, нежели BASIC. Чуть позже выложу файл с КР АКС, чтобы предметно было видно, с чем придется иметь дело при сжатии.\r\n  \r\n  \r\n  Стартап это еще тот адреналин. Ведь на самом деле всё только начинается...(Silicon Valley (С)\r\n  \r\n  Все авторские права и прочая интеллектуальная собственность принадлежат их законным правообладателям (в том числе мне ;). Все изображения приведены только в качестве учебных иллюстраций и принадлежат их законным правообладателям. Patents pending.\r\n  \r\n  ==========\r\n  \r\n  В связи с критическими замечаниями, которые возникли в ходе обсуждения данной статьи, добавляю краткий FAQ:\r\n  \r\n  Вопрос. Как можно всерьез обсуждать сжатие случайных данных? Вот доказательство невозможности этого: www.compression.ru/arctest/descript/comp-hist.htm «Таким образом, этот мысленный эксперимент доказывает, что программы, которая сжимала бы каждый файл… не существует».\r\n  Ответ. В данном доказательстве речь идет о «взаимооднозначном сопоставлении», которое имеет место быть в статистическом и комбинаторном сжатии. В данном случае рассматривается третий подход к сжатию данных — алгоритмический. Его общее описание и строгий математический анализ здесь: compression.ru/download/articles/ti/kolmogorov_1965_three_way_pdf.rar (А.Н.Колмогоров. Три подхода к определению понятия «Количество информации» см. §3 Алгоритмический подход)\r\n  Возьмите, например, 3 миллиона двоичных знаков числа π и попробуйте сжать любой существующей программой сжатия. Получить результат меньше трех миллионов бит (или 375000 байт) у Вас не получится. Гораздо короче просто сохранить программу, которая воспроизводит путем вычисления эти три миллиона (или хоть 3 миллиарда) двоичных знаков.\r\n  \r\n  В. Но алгоритмов (программ) меньшей длины опять-таки меньше, чем вариантов исходных данных.\r\n  О. Нет, Колмогоров в вышеуказанной статье математически доказал обратное в рамках инструментария теории алгоритмов. Другими словами для любых данных, некоторой достаточно большой длины, всегда найдется программа точно воспроизводящая эти данные, запись которой будет меньше, чем длинна этих данных.\r\n  При этом Колмогоров вводит понятие «колмогоровская сложность» — сложность создания алгоритма, который воспроизводит конкретные данные.\r\n  \r\n  В. Значит, нужны колоссальные вычислительные мощности?\r\n  O. Не нужны. Справляюсь на обычном компьютере :)\r\n  \r\n  В. У меня есть два байта — сможете сжать до одного бита?\r\n  O. Технические ограничения данного алгоритма позволяют сжимать блок случайных данных с размером не менее 100 килобайт.\r\n  \r\n  В. Означает ли это что можно сжимать любое количество данных до этого минимального размера?\r\n  О. Теоретически да. За один проход данные сжимаются с коэффициентом около 0.99995. Поэтому необходимо учитывать, что чем больше данных, тем больше это займет времени.\r\n  \r\n  В. Честно признаю, текст не осилил. Если кто-то дочитал, можете, пожалуйста, вкратце пересказать идею автора?\r\n  О. Статья в кратком изложении: \r\n  Автор проводил исследования хаотически расположенных данных, у которых мера хаоса (энтропия) максимальна. В этом хаосе автор нашел некоторые структуры данных, которые более упорядочены (менее хаотичны) чем другие. Вместо того чтобы писать статьи в научные журналы и получать нобелевку :) по шее, автор решил использовать открытие в корыстных для человечества целях: помочь в создании программ, которые могут сжимать данные (видео, музыку, книги, картинки) в разы лучше, чем те, что уже есть сейчас. Тем самым автор хочет на порядки повысить скорость интернета, увеличить электронные устройства памяти практически до бесконечности и сделать информацию максимально доступной в любом уголке мира. Как всегда человечество (во всяком случае — наиболее просвещенная его часть в русскоязычном сегменте) ответило, в основном, глухим недовольством на вероломные попытки подорвать стабильность и нарушить привычный ход вещей.\r\n  \r\n  В. Ваш алгоритм я не проверял, но он все равно не работает.\r\n  О. Человеку, знакомому с азами программирования, элементарно в течение часа удостовериться в результатах расчетов, приведенных в статье.\r\n  \r\n  В. Зачем мне тратить свое драгоценное время на это, если я могу его потратить на написание разгромных (хоть и бездоказательных) комментариев? Зачем автор заранее раскрыл содержание алгоритма, пытаясь ввергнуть ни в чём не повинных людей в болезненный процесс мышления, вместо того, чтобы его засекретить и просто продавать программу дата-центрам?\r\n  О. По первому вопросу: Мозги без использования застаиваются :) По второму вопросу: автор погрузился в размышления… ;)\r\n  \r\n  Литература• Шеннон К. Работы по теории информации и кибернетике. — М.: Изд-во иностранной литературы, 1963. — 830 с.\r\n  • А.Н.Колмогоров. Три подхода к определению понятия «Количество информации» см. §3 Алгоритмический подход (http://compression.ru/download/articles/ti/kolmogorov_1965_three_way_pdf.rar)\r\n  • Малинецкий Г. Г. Хаос. Структуры. Вычислительный эксперимент. Введение в нелинейную динамику. 3-е изд. М.: УРСС, 2001. \r\n  \r\n   			     ', 'Путь к бесконечному сжатию данных ', '2015-04-05 11:40:24', 'http://habrahabr.ru/post/254809/');
INSERT INTO `pages` (`id`, `content`, `title`, `datetime`, `url`) VALUES
(7, ' 			Разрабатывая приложение для проведения соревнований, я столкнулся с проблемой хранения базы данных. Проблема состояла в том, как мне определить внешнюю карту памяти. В целом поиск в сети точного ответа не дал. Поэтому, объединив все найденные результаты, я собрал свой класс. Если кому интересно, смотрим под катом.\r\n  \r\n  Итак, начнем с теории. \r\n  \r\n  Терминология\r\n  Гугл нам говорит, что есть следующие понятия:\r\n    Внутренняя (internal) память — это часть встроенной в телефон карты памяти. При ее использовании по умолчанию папка приложения защищена от доступа других приложений (Using the Internal Storage).  Внешняя (external) память — это общее «внешнее хранилище», т.е. это может быть как часть встроенной памяти, так и удаляемое устройство. Обычно это часть встроенной памяти, как удаляемое устройство я видел в последний раз на андройде 2.2, где встроенная память была около 2Гб, и подключаемая память становилась внешней (Using the External Storage).  Удаляемая (removable) память — все хранилища, которые могут быть удалены из устройства без «хирургических» вмешательств.  \r\n  \r\n  До версии KitKat 4.4 API не предоставляло функционала для получения путей к внешней памяти. Начиная с этой версии (API 19) появилась функция public abstract File[] getExternalFilesDirs (String type), которая возвращает массив строк с путями к внутренней и внешней памяти. Но как же быть с нашей SD Card, которая вставлена в слот? Путь к ней мы опять не можем получить.\r\n  \r\n  Результаты поиска\r\n  Чтобы ответить на поставленный вопрос я обратился к всезнающему гуглу. Но и он мне не дал четкого ответа. Было рассмотрено множество вариантов определения от использования стандартных функций, которые ведут к внешней памяти, но ничего общего с удаляемыми устройствами хранения данных они не имеют, до обработки правил монтирования устройств (Android же на ядре Linux работает). В последних случаях были использованы «зашитые» пути к папке с примонтироваными устройствами (в различных версиях эта директория разная). Не стоит забывать, что от версии к версии правила монтирования меняются.\r\n  \r\n  В конечном итоге я решил объединить все полученные знания и написал свой класс, который может нам вернуть пути к внешним и удаляемым устройствам.\r\n  \r\n  Описание кода\r\n  Был создан класс MountDevice, который содержит в себе путь к устройству, тип устройства и некий хэш.\r\n  Типов устройств выделено два (внутреннюю память я не стал трогать, так как к ней доступ можно получить через API системы).\r\n  \r\n  public enum MountDeviceType {     EXTERNAL_SD_CARD, REMOVABLE_SD_CARD } \r\n  И был создан класс StorageHelper, который и осуществляет поиск доступных карт памяти.\r\n  \r\n  В классе StorageHelper реализовано два способа поиска — через системное окружение (Environment) и с использованием утилиты Linux mount, а точнее результата ее выполнения.\r\n  \r\n  Способ первый — Environment\r\n  При работе с окружением я использую стандартную функцию getExternalStorageDirectory() для получения информации о внешней памяти. Чтобы получить информацию о удаляемой памяти, я использую переменную окружения &quot;SECONDARY_STORAGE&quot;. \r\n  \r\n  Внешняя память всегда одна и обычно всегда есть, поэтому проверяем ее на читаемость, вычисляем хэш и запоминаем. Удаляемой памяти может быть много, поэтому необходимо полученную строку разбить по разделителю и проверять каждое значение.\r\n  \r\n  Функция fillDevicesEnvirementString path = android.os.Environment.getExternalStorageDirectory() 		.getAbsolutePath(); if (!path.trim().isEmpty() 		&& android.os.Environment.getExternalStorageState().equals( 				android.os.Environment.MEDIA_MOUNTED)) { 	testAndAdd(path, MountDeviceType.EXTERNAL_SD_CARD); }  // Получаем ремувабл String rawSecondaryStoragesStr = System.getenv(&quot;SECONDARY_STORAGE&quot;); if (rawSecondaryStoragesStr != null 		&& !rawSecondaryStoragesStr.isEmpty()) { 	// All Secondary SD-CARDs splited into array 	final String[] rawSecondaryStorages = rawSecondaryStoragesStr 			.split(File.pathSeparator); 	for (String rawSecondaryStorage : rawSecondaryStorages) { 		testAndAdd(rawSecondaryStorage, 				MountDeviceType.REMOVABLE_SD_CARD); 	} } \r\n  \r\n  Вариант решения взят со stackoverflow. Ответ где-то там внизу.\r\n  \r\n  Способ второй — mount\r\n  Так как у меня долго не получалось заставить систему мне сказать путь к удаляемой памяти, я решил искать в сторону примонтированных устройств. В системе есть файлы конфигурации, в которых описаны правила монтирования внешних устройств. Все бы хорошо, но на Android версии 4.* к этому файлу простым смертным доступа нет, поэтому рассматривать этот способ не буду.\r\n  \r\n  Вернемся к утилите mount. При запуске без параметров команда возвращает список смонтированных файловых систем. Удаляемые устройства имеют обычно формат файловой системы FAT, то будем выделять строки, в которых есть характеристика &quot;fat&quot;. Внешняя память будет характеризоваться параметром &quot;fuse&quot;. \r\n  \r\n  Примечание: при использовании такого способа не всегда корректно (скорее всего я что-то не учел) определяются типы смотнтированных устройств. Разницу замечал на разных версиях Android. Поэтому этот способ можно использовать как дополнительный.\r\n  \r\n  Функция fillDevicesProcesstry { 	Runtime runtime = Runtime.getRuntime(); 	proc = runtime.exec(&quot;mount&quot;); 	try { 		is = proc.getInputStream(); 		isr = new InputStreamReader(is); 		br = new BufferedReader(isr); 		while ((line = br.readLine()) != null) { 			if (line.contains(&quot;secure&quot;)) 				continue;  			if (line.contains(&quot;asec&quot;)) 				continue;  			if (line.contains(&quot;fat&quot;)) {// TF card 				String columns[] = line.split(&quot; &quot;); 				if (columns != null && columns.length &gt; 1) { 					testAndAdd(columns[1], 							MountDeviceType.REMOVABLE_SD_CARD); 				} 			} else if (line.contains(&quot;fuse&quot;)) {// internal(External) 												// storage 				String columns[] = line.split(&quot; &quot;); 				if (columns != null && columns.length &gt; 1) { 					// mount = mount.concat(columns[1] + &quot;\\n&quot;); 					testAndAdd(columns[1], 							MountDeviceType.EXTERNAL_SD_CARD); 				} 			} 		} 	} finally { 		... 	} } catch (Exception e) { 	... }  \r\n  \r\n  \r\n  Вариант решения взят со stackoverflow. Ответов там несколько примерно одинаковых.\r\n  \r\n  Про дублирование\r\n  Многие замечали в директории монтирования устройств такую картину:\r\n  \r\n  /storage/sdcard0/ /storage/emulated/0/ /storage/emulated/legacy/ \r\n  И что самое интересно, все это одна и та же внешняя карта памяти. Такое дробление начинается с версии Jelly Bean и сделано это для поддержки многопользовательского режима работы системы. Более подробно тут. И вот, чтобы не получать одну и туже карту памяти как различные устройства, необходим способ определения идентичности. Если бы был доступ к конфигурации монтирования, то и вопросов не было. Но доступа нет. Поэтому я тут подсмотрел решение с расчетом хэша для каждого устройства: \r\n    создаем StringBuilder  записываем в него общий размер устройства и размер используемого пространства устройства  обходим содержимое корня устройства  записываем имя каталога  записываем имя файла и размер  вычисляем hash  \r\n  \r\n  Своя функция расчета хэша calcHashprivate int calcHash(File dir) { 	StringBuilder tmpHash = new StringBuilder();  	tmpHash.append(dir.getTotalSpace()); 	tmpHash.append(dir.getUsableSpace());  	File[] list = dir.listFiles(); 	for (File file : list) { 		tmpHash.append(file.getName()); 		if (file.isFile()) { 			tmpHash.append(file.length()); 		} 	}  	return tmpHash.toString().hashCode();  } \r\n  \r\n  Пример использования\r\n  /* Получаем базовый путь */ if (!mPreferences.contains(PREFS_BASEBATH)) { 	// Если еще не сохранялся в настройках, то пытаемся найти карты 	// памяти 	ArrayList&lt;MountDevice&gt; storages = StorageHelper.getInstance() 			.getRemovableMountedDevices(); 	// проверяем съемные карты памяти 	if (storages.size() != 0) { 		setBasePath(storages.get(0).getPath() + mAppPath); 	} else if ((storages = StorageHelper.getInstance() // Проверяем 														// внутреннюю 														// память 			.getExternalMountedDevices()).size() != 0) { 		setBasePath(storages.get(0).getPath() + mAppPath); 	} } else { 	// Вытаскиваем из сохранненых настроек 	mBasePath = mPreferences.getString(PREFS_BASEBATH, context 			.getFilesDir().getParent()); } \r\n  Заключение\r\n  Подробные рассуждения по этому вопросу понимания памяти в Android, некоторые советы можно прочитать тут.\r\n  \r\n  Исходный код всего класса расположен еще нигде не расположен. На днях постараюсь разместить на gitHub.\r\n  \r\n  Кто еще какими способами пользуется?\r\n  \r\n  UPD1: Исходный код класса на bitbucket 			     ', 'Получение пути к карте памяти SD Card на Android ', '2015-04-05 11:40:26', 'http://habrahabr.ru/post/254813/');
INSERT INTO `pages` (`id`, `content`, `title`, `datetime`, `url`) VALUES
(8, ' 			\r\n  Современные компиляторы очень хорошо умеют оптимизировать код. Они удаляют никогда не выполняющиеся условные переходы, вычисляют константные выражения, избавляются от бессмысленных арифметических действий (умножение на 1, сложение с 0). Они оперируют данными, известными на момент компиляции.\r\n  В момент выполнения информации об обрабатываемых данных гораздо больше. На её основании можно выполнить дополнительные оптимизации и ускорить работу программы.\r\n  Оптимизированный для частного случая алгоритм всегда работает быстрее универсального (по крайней мере, не медленнее).\r\n  Что если для каждого набора входных данных генерировать оптимальный для обработки этих данных алгоритм?\r\n  Очевидно, часть времени выполнения уйдёт на оптимизацию, но если оптимизированный код выполняется часто, затраты окупятся с лихвой. \r\n  Как же технически это сделать? Довольно просто — в программу включается мини-компилятор, генерирующий необходимый код. Идея не нова, технология называется “компиляция времени исполнения” или JIT-компиляция. Ключевую роль JIT-компиляция играет в виртуальных машинах и интерпретаторах языков программирования. Часто используемые участки кода (или байт-кода) преобразуются в машинные команды, что позволяет сильно повысить производительность.\r\n  Java, Python, C#, JavaScript, Flash ActionScript — неполный (совсем неполный) список языков, в которых это используется. Я предлагаю решить конкретную задачу с использованием этой технологии и посмотреть, что получится.\r\n  \r\n  Задача\r\n  Задачей возьмём реализацию интерпретатора математических выражений. На входе у нас строка вида\r\n  \r\n  \r\n  \r\n  и число — значение x. На выходе должны получить число — значение выражения при этом значении x. Для простоты будем обрабатывать только четыре оператора — ‘+’, ‘-‘, ‘*’, ‘/’.\r\n  \r\n  На данном этапе ещё не понятно, как вообще можно скомпилировать это выражение, ведь строка — не самый удобный для работы способ представления. Для анализа и вычислений лучше подойдёт дерево разбора, в нашем случае — бинарное дерево. \r\n  Для исходного выражения оно будет выглядеть так:\r\n  \r\n  \r\n  \r\n  Каждый узел дерева представляет собой оператор, его дети — операнды. В листьях дерева оказываются константы и переменные.\r\n  \r\n  Самым простым алгоритмом построения такого дерева является рекурсивный спуск — на каждом этапе мы находим оператор с наименьшим приоритетом, разбиваем выражение на две части — до этого оператора и после, и рекурсивно вызываем для этих частей операцию построения. Пошаговая иллюстрация работы алгоритма:\r\n  \r\n  \r\n  \r\n  Реализацию алгоритма я тут приводить не буду по простой причине — он весьма объёмен, да и статья не про это. \r\n  Дерево состоит из узлов, каждый из которых будет представлен структурой TreeNode\r\n  \r\n  &nbsp;&nbsp;&nbsp;&nbsp;typedef&nbsp;struct&nbsp;TreeNode&nbsp;TreeNode;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;struct&nbsp;TreeNode\r\n  &nbsp;&nbsp;&nbsp;&nbsp;{\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TreeNodeType&nbsp;type;&nbsp;//тип&nbsp;узла\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TreeNode*&nbsp;left;&nbsp;&nbsp;&nbsp;&nbsp;//ссылка&nbsp;на&nbsp;левого&nbsp;потомка\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TreeNode*&nbsp;right;&nbsp;&nbsp;&nbsp;//ссылка&nbsp;для&nbsp;правого&nbsp;потомка\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float&nbsp;value;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//значение&nbsp;(для&nbsp;узла-константы)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;};\r\n  \r\n  Вот все возможные типы узлов:\r\n  typedef&nbsp;enum\r\n  {\r\n  &nbsp;&nbsp;&nbsp;&nbsp;OperatorPlus,&nbsp;&nbsp;//Оператор&nbsp;плюс\r\n  &nbsp;&nbsp;&nbsp;&nbsp;OperatorMinus,&nbsp;//Оператор&nbsp;минус\r\n  &nbsp;&nbsp;&nbsp;&nbsp;OperatorMul,&nbsp;&nbsp;&nbsp;//Оператор&nbsp;умножить\r\n  &nbsp;&nbsp;&nbsp;&nbsp;OperatorDiv,&nbsp;&nbsp;&nbsp;//Оператор&nbsp;разделить\r\n  &nbsp;&nbsp;&nbsp;&nbsp;OperandConst,&nbsp;&nbsp;//Операнд&nbsp;-&nbsp;константа\r\n  &nbsp;&nbsp;&nbsp;&nbsp;OperandVar,&nbsp;&nbsp;&nbsp;&nbsp;//Операнд&nbsp;-&nbsp;переменная\r\n  &nbsp;&nbsp;&nbsp;&nbsp;OperandNegVar,&nbsp;//Операнд&nbsp;-&nbsp;переменная,&nbsp;взятая&nbsp;с&nbsp;минусом&nbsp;(для&nbsp;обработки&nbsp;унарного&nbsp;минуса)\r\n  }&nbsp;TreeNodeType;\r\n  Значение выражения при заданном x вычисляется очень просто — с помощью обхода в глубину.\r\n  Это тоже реализуется с помощью рекурсии.float&nbsp;calcTreeFromRoot(TreeNode*&nbsp;root,&nbsp;float&nbsp;x)\r\n  {\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;if(root-&gt;type&nbsp;==&nbsp;OperandVar)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;x;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;if(root-&gt;type&nbsp;==&nbsp;OperandNegVar)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;-x;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;if(root-&gt;type&nbsp;==&nbsp;OperandConst)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;root-&gt;value;\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;switch(root-&gt;type)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;{\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;OperatorPlus:\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;calcTreeFromRoot(root-&gt;left,&nbsp;x)&nbsp;+&nbsp;calcTreeFromRoot(root-&gt;right,&nbsp;x);\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;OperatorMinus:\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;calcTreeFromRoot(root-&gt;left,&nbsp;x)&nbsp;-&nbsp;calcTreeFromRoot(root-&gt;right,&nbsp;x);\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;OperatorMul:\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;calcTreeFromRoot(root-&gt;left,&nbsp;x)&nbsp;*&nbsp;calcTreeFromRoot(root-&gt;right,&nbsp;x);\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;OperatorDiv:\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;calcTreeFromRoot(root-&gt;left,&nbsp;x)&nbsp;/&nbsp;calcTreeFromRoot(root-&gt;right,&nbsp;x);\r\n  &nbsp;&nbsp;&nbsp;&nbsp;}\r\n  }\r\n  \r\n  Что на текущий момент?\r\n    Для выражения генерируется дерево  При необходимости вычислить значение выражения вызывается рекурсивная функция calcTreeFromRoot  \r\n  \r\n  Как бы выглядел код, если бы мы знали выражение ещё на этапе сборки?\r\n  float&nbsp;calcExpression(float&nbsp;x)\r\n  {\r\n  &nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;x&nbsp;*&nbsp;x&nbsp;+&nbsp;5&nbsp;*&nbsp;x&nbsp;-&nbsp;2;\r\n  }\r\n  \r\n  Вычисление значения выражения в таком случае сводится к вызову одной очень простой функции — в разы быстрее, чем рекурсивный обход дерева.\r\n  \r\n  Время компиляции!\r\n  Хочу заметить, что я буду генерировать код для платформы x86 ориентируясь на процессоры архитектуры, схожей с IA32. Кроме того, я приму размер float равным 4 байтам, размер int равным 4 байтам.\r\n  \r\n  Теория\r\n  Итак, наша задача получить обычную функцию языка C, которую можно будет вызывать при необходимости. \r\n  Для начала, определим её прототип:\r\n  typedef&nbsp;float&nbsp;_cdecl&nbsp;(*Func)(float);\r\n  \r\n  Теперь тип данных Func представляет собой указатель на функцию, возвращающую значение типа float и принимающую один аргумент, тоже типа float. \r\n  _cdecl указывает на то, что используется соглашение о вызове C-declaration. \r\n  Это стандартное соглашение о вызове для языка C: \r\n   — аргументы передаются через стек справа на лево (при вызове на вершине стека должен оказаться первый аргумент) \r\n   — целочисленные значения возвращаются через регистр EAX \r\n   — значения с плавающей точкой возвращаются через регистр st0 \r\n   — за сохранность регистров eax, edx, ecx отвечает вызывающая функция \r\n   — остальные регистры должна восстанавливать вызываемая функция\r\n  \r\n  Вызов функции выглядит примерно так:\r\n  push&nbsp;ebp&nbsp;//Сохраняем&nbsp;указатель&nbsp;стекового&nbsp;фрейма\r\n  push&nbsp;arg3&nbsp;//Кладём&nbsp;в&nbsp;стек&nbsp;аргументы&nbsp;в&nbsp;порядке&nbsp;справа&nbsp;на&nbsp;лево&nbsp;(первый&nbsp;аргумент&nbsp;в&nbsp;конце)\r\n  push&nbsp;arg2\r\n  push&nbsp;arg1\r\n  call&nbsp;func&nbsp;//Сам&nbsp;вызов\r\n  add&nbsp;esp,&nbsp;0xC&nbsp;//Восстанавливаем&nbsp;указатель&nbsp;на&nbsp;стек&nbsp;(3&nbsp;аргумента&nbsp;по&nbsp;4&nbsp;байта&nbsp;как&nbsp;раз&nbsp;займут&nbsp;0xC&nbsp;байт)\r\n  pop&nbsp;ebp&nbsp;//Восстанавливаем&nbsp;указатель&nbsp;стекового&nbsp;фрейма\r\n  Состояние стека в момент вызова:\r\n  \r\n  \r\n  Как мы будем генерировать код, вычисляющий выражение? Время вспомнить, что есть такая штука как стековый калькулятор. Как он работает? На вход подаются числа и операторы. Алгоритм работы элементарен: \r\n   — Встретили константу или переменную — положили в стек \r\n   — Встретили оператор — сняли со стека 2 операнда, произвели операцию, положили результат в стек\r\n  \r\n  Но кормить стековый калькулятор надо определённым образом — он работает с выражениями, представленными в обратной польской нотации. Её особенность заключается в том, что в записи сперва идут операнды, потом оператор. Таким образом наше исходное выражение предстанет в следующем виде:\r\n  \r\n  \r\n  \r\n  Программа для стекового калькулятора соответствующая выражению:\r\n  push&nbsp;x\r\n  push&nbsp;x\r\n  mul\r\n  push&nbsp;5\r\n  push&nbsp;x\r\n  mul\r\n  add\r\n  push&nbsp;2\r\n  sub\r\n  Очень напоминает программу на ассемблере, не так ли? \r\n  \r\n  Получается, достаточно перевести выражение в обратную польскую нотацию и создавать код следуя элементарным правилам. \r\n  Перевод выполнить очень просто — у нас уже есть построенное дерево разбора, надо только выполнить обход в глубину и при выходе из вершины генерировать соответствующее ей действие — получится последовательность команд в нужном нам порядке.\r\n  \r\n  Псевдокод этого действа:static&nbsp;void&nbsp;generateCodeR(TreeNode*&nbsp;root,&nbsp;ByteArray*&nbsp;code)\r\n  {\r\n  &nbsp;&nbsp;&nbsp;&nbsp;if(root-&gt;left&nbsp;&amp;amp;&amp;amp;&nbsp;root-&gt;right)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;{\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generateCodeR(root-&gt;right,&nbsp;code);&nbsp;//Сначала&nbsp;должен&nbsp;сгенерироваться\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generateCodeR(root-&gt;left,&nbsp;code);&nbsp;//код&nbsp;вычисления&nbsp;дочерних&nbsp;элементов\r\n  &nbsp;&nbsp;&nbsp;&nbsp;}\r\n  &nbsp;&nbsp;&nbsp;&nbsp;//Генерируем&nbsp;код&nbsp;для&nbsp;родительского&nbsp;элемента\r\n  &nbsp;&nbsp;&nbsp;&nbsp;if(root-&gt;type&nbsp;==&nbsp;OperandVar)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;{\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;code&nbsp;+=&nbsp;&quot;push&nbsp;x&quot;;&nbsp;//Кладём&nbsp;в&nbsp;стек&nbsp;значение&nbsp;аргумента&nbsp;(переменной)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;}\r\n  &nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if(root-&gt;type&nbsp;==&nbsp;OperandNegVar)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;{\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;code&nbsp;+=&nbsp;&quot;push&nbsp;-x&quot;;&nbsp;//Кладём&nbsp;в&nbsp;стек&nbsp;значение&nbsp;аргумента&nbsp;со&nbsp;сменой&nbsp;знака\r\n  &nbsp;&nbsp;&nbsp;&nbsp;}\r\n  &nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if(root-&gt;type&nbsp;==&nbsp;OperandConst)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;{\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;code&nbsp;+=&nbsp;&quot;push&nbsp;&quot;&nbsp;+&nbsp;root-&gt;value;&nbsp;//Кладём&nbsp;в&nbsp;стек&nbsp;константу\r\n  &nbsp;&nbsp;&nbsp;&nbsp;}\r\n  &nbsp;&nbsp;&nbsp;&nbsp;else\r\n  &nbsp;&nbsp;&nbsp;&nbsp;{\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;code&nbsp;+=&nbsp;&quot;pop&quot;;&nbsp;//Снимаем&nbsp;со&nbsp;стека\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;code&nbsp;+=&nbsp;&quot;pop&quot;;&nbsp;//два&nbsp;значения\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch(root-&gt;type)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;OperatorPlus:\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;code&nbsp;+=&nbsp;&quot;add&quot;;&nbsp;//Выполняем&nbsp;сложение\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;OperatorMinus:\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;code&nbsp;+=&nbsp;&quot;sub&quot;;&nbsp;//Выполняем&nbsp;вычитание\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;OperatorMul:\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;code&nbsp;+=&nbsp;&quot;mul&quot;;&nbsp;//Выполняем&nbsp;умножение\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;OperatorDiv:\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;code&nbsp;+=&nbsp;&quot;div&quot;;&nbsp;//Выполняем&nbsp;деление\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;code&nbsp;+=&nbsp;&quot;push&nbsp;result&quot;&nbsp;//Сохраняем&nbsp;в&nbsp;стек&nbsp;результат&nbsp;математической&nbsp;операции\r\n  &nbsp;&nbsp;&nbsp;&nbsp;}\r\n  }\r\n  \r\n  Реализация\r\n  Для начала определимся со стеком: с ним всё просто — регистр esp содержит указатель на вершину. Чтобы положить что-нибудь туда, достаточно выполнить команду\r\n  push&nbsp;{значение}\r\n  или вычесть из ESP число 4 и записать по полученному адресу нужное значение\r\n  sub&nbsp;esp,&nbsp;4\r\n  &nbsp;mov&nbsp;[esp],&nbsp;{значение}\r\n  Снятие со стека выполняет команда pop или прибавление к esp число 4.\r\n  Раньше я упомянул соглашение о вызове. Благодаря ему мы можем точно знать, где будет находиться единственный аргумент функции. По адресу esp (на вершине) будет находиться адрес возврата, а по адресу esp — 4 как раз будет находиться значение аргумента. Так как обращение к нему будет происходить сравнительно часто можно поместить его в регистр eax:\r\n  mov&nbsp;eax,&nbsp;[esp&nbsp;-&nbsp;4];\r\n  Теперь, немного про работу с числами с плавающей запятой. Мы будем использовать набор инструкций x87 FPU. \r\n  FPU имеет 8 регистров, образующих стек. Каждый из них вмещает 80 бит. Обращение к вершине этого стека происходит через регистр st0. Соответственно, регистр st1 адресует следующее за вершиной значение в этом стеке, st2 — следующее и так далее до st7. \r\n  Стек FPU:\r\n  \r\n  Чтобы загрузить на вершину значение используется команда fld. Операндом этой команды может быть только хранящееся в памяти значение.\r\n  fld&nbsp;[esp]&nbsp;//Загрузить&nbsp;в&nbsp;st0&nbsp;значение,&nbsp;хранящееся&nbsp;по&nbsp;адресу,&nbsp;содержащемуся&nbsp;в&nbsp;esp\r\n  Команды для выполнения арифметических операций очень просты: fadd, fsub, fmul, fdiv. У них может быть много разных комбинаций аргументов, но мы будем использовать их только так:\r\n  fadd&nbsp;dword&nbsp;ptr&nbsp;[esp]\r\n  fsub&nbsp;dword&nbsp;ptr&nbsp;[esp]\r\n  fmul&nbsp;dword&nbsp;ptr&nbsp;[esp]\r\n  fdiv&nbsp;dword&nbsp;ptr&nbsp;[esp]\r\n  \r\n  Во всех этих случаях загружается значение из [esp], выполняется необходимая операция, результат сохраняется в st0.\r\n  Снять значение со стека тоже просто:\r\n  fstp&nbsp;[esp]&nbsp;//Удалить&nbsp;значение&nbsp;с&nbsp;верхушки&nbsp;FPU&nbsp;стека&nbsp;и&nbsp;сохранить&nbsp;его&nbsp;в&nbsp;ячейку&nbsp;памяти&nbsp;по&nbsp;адресу,&nbsp;лежащему&nbsp;в&nbsp;esp\r\n  Вспомним, что в выражении может встретиться переменная x с унарным минусом. Для её обработки надо сменить знак. Для этого гам пригодиться команда FCHS — она инвертирует бит знака регистра st0\r\n  \r\n  Для каждой из этих команд определим по функции, генерирующей необходимые опкоды:\r\n  void&nbsp;genPUSH_imm32(ByteArray*&nbsp;code,&nbsp;int32_t*&nbsp;pValue);\r\n  void&nbsp;genADD_ESP_4(ByteArray*&nbsp;code);\r\n  void&nbsp;genMOV_EAX_PTR_ESP_4(ByteArray*&nbsp;code);\r\n  &nbsp;\r\n  void&nbsp;genFSTP(ByteArray*&nbsp;code,&nbsp;void*&nbsp;dstAddress);\r\n  void&nbsp;genFLD_DWORD_PTR_ESP(ByteArray*&nbsp;code);\r\n  void&nbsp;genFADD_DWORD_PTR_ESP(ByteArray*&nbsp;code);\r\n  void&nbsp;genFSUB_DWORD_PTR_ESP(ByteArray*&nbsp;code);\r\n  void&nbsp;genFMUL_DWORD_PTR_ESP(ByteArray*&nbsp;code);\r\n  void&nbsp;genFCHS(ByteArray*&nbsp;code);\r\n  Чтобы код-вычислитель нормально отработал и вернул значение надо добавить перед ним и после него соответствующие инструкции. Всё это дело вместе собирает функция-обёртка generateCode:\r\n  void&nbsp;generateCode(Tree*&nbsp;tree,&nbsp;ByteArray*&nbsp;resultCode)\r\n  {\r\n  &nbsp;&nbsp;&nbsp;&nbsp;ByteArray*&nbsp;code&nbsp;=&nbsp;resultCode;\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;genMOV_EAX_ESP_4(code);&nbsp;//Помещаем&nbsp;в&nbsp;eax&nbsp;значение&nbsp;аргумента\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;generateCodeR(tree-&gt;root,&nbsp;code);&nbsp;//Генерируем&nbsp;код-вычислитель\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;genFLD_DWORD_PTR_ESP(code);\r\n  &nbsp;&nbsp;&nbsp;&nbsp;genADD_ESP_4(code);&nbsp;//Снимаем&nbsp;лишнее&nbsp;двойное&nbsp;слово&nbsp;со&nbsp;стека\r\n  &nbsp;&nbsp;&nbsp;&nbsp;genRET(code);&nbsp;//Выходим&nbsp;из&nbsp;функции\r\n  }\r\n  Конечный вид функции генерации кода, вычисляющего значение выражения:void&nbsp;generateCodeR(TreeNode*&nbsp;root,&nbsp;ByteArray*&nbsp;resultCode)\r\n  {\r\n  &nbsp;&nbsp;&nbsp;&nbsp;ByteArray*&nbsp;code&nbsp;=&nbsp;resultCode;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;if(root-&gt;left&nbsp;&amp;amp;&amp;amp;&nbsp;root-&gt;right)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;{\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generateCodeR(root-&gt;right,&nbsp;code);\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generateCodeR(root-&gt;left,&nbsp;code);\r\n  &nbsp;&nbsp;&nbsp;&nbsp;}\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;if(root-&gt;type&nbsp;==&nbsp;OperandVar)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;{\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genPUSH_EAX(code);&nbsp;//В&nbsp;eax&nbsp;лежт&nbsp;аргумент&nbsp;функции\r\n  &nbsp;&nbsp;&nbsp;&nbsp;}\r\n  &nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if(root-&gt;type&nbsp;==&nbsp;OperandNegVar)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;{\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genPUSH_EAX(code);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Загружаем&nbsp;в&nbsp;стек\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genFLD_DWORD_PTR_ESP(code);&nbsp;//Меняем\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genFCHS(code);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//знак\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genFSTP_DWORD_PTR_ESP(code);//Возвращаем&nbsp;в&nbsp;стек\r\n  &nbsp;&nbsp;&nbsp;&nbsp;}\r\n  &nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if(root-&gt;type&nbsp;==&nbsp;OperandConst)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;{\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genPUSH_imm32(code,&nbsp;(int32_t*)&amp;amp;root-&gt;value);\r\n  &nbsp;&nbsp;&nbsp;&nbsp;}\r\n  &nbsp;&nbsp;&nbsp;&nbsp;else\r\n  &nbsp;&nbsp;&nbsp;&nbsp;{\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genFLD_DWORD_PTR_ESP(code);//Загружаем&nbsp;в&nbsp;FPU&nbsp;левый&nbsp;операнд..\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genADD_ESP_4(code);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//… и&nbsp;снимаем&nbsp;его&nbsp;со&nbsp;стека\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch(root-&gt;type)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;OperatorPlus:\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genFADD_DWORD_PTR_ESP(code);&nbsp;//Выполняем&nbsp;сложение&nbsp;(результат&nbsp;сохраниться&nbsp;в&nbsp;st0)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;OperatorMinus:\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genFSUB_DWORD_PTR_ESP(code);&nbsp;//Выполняем&nbsp;вычитание&nbsp;(результат&nbsp;сохраниться&nbsp;в&nbsp;st0)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;OperatorMul:\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genFMUL_DWORD_PTR_ESP(code);&nbsp;//Выполняем&nbsp;умножение&nbsp;(результат&nbsp;сохраниться&nbsp;в&nbsp;st0)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;OperatorDiv:\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genFDIV_DWORD_PTR_ESP(code);&nbsp;//Выполняем&nbsp;деление&nbsp;(результат&nbsp;сохраниться&nbsp;в&nbsp;st0)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genFSTP_DWORD_PTR_ESP(code);//Сохраняем&nbsp;результат&nbsp;в&nbsp;стек&nbsp;(st0&nbsp;-&amp;gt;&nbsp;[esp])\r\n  &nbsp;&nbsp;&nbsp;&nbsp;}\r\n  }\r\n  \r\n  Кстати, о буфере для хранения кода. Для этих целей я создал тип-контейнер ByteArray:\r\n  typedef&nbsp;struct\r\n  {\r\n  &nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;size;&nbsp;//Размер&nbsp;выделенной&nbsp;памяти\r\n  &nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;dataSize;&nbsp;//Фактический&nbsp;размер&nbsp;хранящихся&nbsp;данных\r\n  &nbsp;&nbsp;&nbsp;&nbsp;char*&nbsp;data;&nbsp;//Указатель&nbsp;на&nbsp;данные\r\n  }&nbsp;ByteArray;\r\n  &nbsp;\r\n  ByteArray*&nbsp;byteArrayCreate(int&nbsp;initialSize);\r\n  void&nbsp;byteArrayFree(ByteArray*&nbsp;array);\r\n  void&nbsp;byteArrayAppendData(ByteArray*&nbsp;array,&nbsp;const&nbsp;char*&nbsp;data,&nbsp;int&nbsp;dataSize);\r\n  Он позволяет добавлять в конец данные и не задумываться о выделении памяти — эдакий динамический массив.\r\n  \r\n  Если сгенерировать код с помощью generateCode() и передать ему управление, скорее всего программа рухнет. Причина проста — отсутствие разрешения на исполнение. Я пишу под Windows, поэтому мне тут поможет WinAPI функция VirtualProtect, позволяющая задать права для области памяти (вернее для страниц памяти).\r\n  В MSD она описана так:\r\n  BOOL&nbsp;WINAPI&nbsp;VirtualProtect(\r\n  &nbsp;&nbsp;_In_&nbsp;&nbsp;&nbsp;LPVOID&nbsp;lpAddress,&nbsp;//Адрес&nbsp;начала&nbsp;региона&nbsp;в&nbsp;памяти\r\n  &nbsp;&nbsp;_In_&nbsp;&nbsp;&nbsp;SIZE_T&nbsp;dwSize,&nbsp;//Размер&nbsp;региона&nbsp;в&nbsp;памяти\r\n  &nbsp;&nbsp;_In_&nbsp;&nbsp;&nbsp;DWORD&nbsp;flNewProtect,&nbsp;//Новые&nbsp;параметры&nbsp;доступа&nbsp;для&nbsp;страниц&nbsp;в&nbsp;регионе\r\n  &nbsp;&nbsp;_Out_&nbsp;&nbsp;PDWORD&nbsp;lpflOldProtect&nbsp;//Указатель&nbsp;на&nbsp;переменную,&nbsp;куда&nbsp;сохранить&nbsp;старые&nbsp;параметры&nbsp;доступа\r\n  );\r\n  Она используется в основной функции-компиляторе:\r\n  CompiledFunc&nbsp;compileTree(Tree*&nbsp;tree)\r\n  {\r\n  &nbsp;&nbsp;&nbsp;&nbsp;CompiledFunc&nbsp;result;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;DWORD&nbsp;oldP;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;ByteArray*&nbsp;code;\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;code&nbsp;=&nbsp;byteArrayCreate(2);&nbsp;//Начальный&nbsp;размер&nbsp;контейнера&nbsp;-&nbsp;2&nbsp;байта\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;generateCode(tree,&nbsp;code);&nbsp;//Генерируем&nbsp;код\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;VirtualProtect(code-&gt;data,&nbsp;code-&gt;dataSize,&nbsp;PAGE_EXECUTE_READWRITE,&nbsp;&amp;oldP);&nbsp;//Даём&nbsp;права&nbsp;на&nbsp;исполнение\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;result.code&nbsp;=&nbsp;code;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;result.run&nbsp;=&nbsp;(Func)result.code-&gt;data;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result;\r\n  }\r\n  CompiledFunc — структура, для удобного хранения кода и указателя на функцию:\r\n  typedef&nbsp;struct\r\n  {\r\n  &nbsp;&nbsp;&nbsp;&nbsp;ByteArray*&nbsp;code;&nbsp;//Контейнер&nbsp;с&nbsp;кодом\r\n  &nbsp;&nbsp;&nbsp;&nbsp;Func&nbsp;run;&nbsp;//Указатель&nbsp;на&nbsp;функцию\r\n  }&nbsp;CompiledFunc;\r\n  Компилятор написан и использовать его очень просто:\r\n  Tree*&nbsp;tree;\r\n  CompiledFunc&nbsp;f;\r\n  float&nbsp;result;\r\n  &nbsp;\r\n  tree&nbsp;=&nbsp;buildTreeForExpression(&quot;x+5&quot;);\r\n  f&nbsp;=&nbsp;compileTree(tree);\r\n  result&nbsp;=&nbsp;f.run(5);&nbsp;//result&nbsp;=&nbsp;10\r\n  Осталось только провести тестирование на скорость.\r\n  \r\n  Тестирование\r\n  При тестировании я буду сравнивать время работы скомпилированного кода и рекурсивного алгоритма вычисления на основе дерева. Замерять время будем с помощью функции clock() из стандартной библиотеки. Чтобы вычислить время работы участка кода достаточно сохранить результат её вызова до и после профилируемой части. Если найти разность этих значений поделить на константу CLOCKS_PER_SEC можно получить время работы кода в секундах. Конечно, это не очень точный способ замеров, но мне точнее и не требовалось.\r\n  Во избежание сильного влияния погрешностей будем замерять время многократного вызова функций. \r\n  Код для тестирования:\r\n  double&nbsp;measureTimeJIT(Tree*&nbsp;tree,&nbsp;int&nbsp;iters)\r\n  {\r\n  &nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;result;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;clock_t&nbsp;start,&nbsp;end;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;CompiledFunc&nbsp;f;\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;start&nbsp;=&nbsp;clock();\r\n  &nbsp;&nbsp;&nbsp;&nbsp;f&nbsp;=&nbsp;compileTree(tree);\r\n  &nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&amp;lt;&nbsp;iters;&nbsp;i++)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;{\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.run((float)&nbsp;(i&nbsp;%&nbsp;1000));\r\n  &nbsp;&nbsp;&nbsp;&nbsp;}\r\n  &nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;=&nbsp;clock();\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;(end&nbsp;-&nbsp;start)&nbsp;/&nbsp;(double)CLOCKS_PER_SEC;\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;compiledFuncFree(f);\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result;\r\n  }\r\n  &nbsp;\r\n  double&nbsp;measureTimeNormal(Tree*&nbsp;tree,&nbsp;int&nbsp;iters)\r\n  {\r\n  &nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;clock_t&nbsp;start,&nbsp;end;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;result;\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;start&nbsp;=&nbsp;clock();\r\n  &nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&amp;lt;&nbsp;iters;&nbsp;i++)\r\n  &nbsp;&nbsp;&nbsp;&nbsp;{\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;calcTree(tree,&nbsp;(float)&nbsp;(i&nbsp;%&nbsp;1000));\r\n  &nbsp;&nbsp;&nbsp;&nbsp;}\r\n  &nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;=&nbsp;clock();\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;(end&nbsp;-&nbsp;start)&nbsp;/&nbsp;(double)CLOCKS_PER_SEC;\r\n  &nbsp;\r\n  &nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result;\r\n  }\r\n  Код самого тестера можно посмотреть в репозитории. Всё что он делает — последовательно увеличивает размер входных данных в регулируемых пределах, вызывает указанные выше функции тестирования и записывает результаты в файл.\r\n  По этим данным я построил график зависимости времени исполнения от размера входных данных (длины выражения). В качестве числа итераций для замера я взял 1 миллион. Просто так. Длина строки последовательно возрастала от 0 до 2000.\r\n   \r\n  \r\n  \r\n  Синий график — зависимость времени исполнения компилированного кода от размера задачи. \r\n  Красный график — зависимость времени исполнения рекурсивного алгоритма от размера задачи. \r\n  Чёрный график — отношение y координаты соответственных точек первого и второго графика. Показывает во сколько раз JIT быстрее в зависимости от размера задачи. \r\n  Видно, что при размере входных данных = 2000 JIT выигрывает примерно в 9.4 раза. Мне кажется это весьма неплохо.\r\n  \r\n  Почему с JIT получается быстрее?\r\n  Скомпилированный код абсолютно линейный — ни одного условного перехода. Благодаря этому за время исполнения не происходит ни одного сброса конвейера процессора, что крайне благотворно влияет на производительность.\r\n  \r\n  Что можно было сделать лучше?\r\n  Самой большой проблемой нашего компилятора является то, что он не использует все возможности FPU. В FPU 8 регистров, мы используем от силы два. Если бы удалось перенести часть нашего стека в стек FPU, уверен, скорость вычислений бы сильно увеличилась (кончено, это надо тестировать). \r\n  Ещё один недостаток — компилятор весьма глуп. Он не вычисляет константных выражений, не избегает лишних вычислений. Очень легко составить выражение так, чтобы он тратил максимум ресурсов. Если добавить элементарный упроститель выражений, компилятор станет близким к идеальному. \r\n  Проблемой самой реализации можно считать невозможность простого переноса на другую платформу (в функции генерации кода используются конкретные команды) и операционную систему (VirtualProtect, всё же). Вполне очевидным и довольно простым решением будет абстрагирование зависящих от платформы и ОС частей и вынесение их реализаций в отдельные модули.\r\n  \r\n  Спасибо за прочтение, очень жду комментариев и советов.\r\n  Репозиторий: bitbucket.org/Informhunter/jithabr\r\n  \r\n  На статью меня вдохновила книга “Совершенный код”, а именно, её глава “Динамическая генерация кода для обработки изображений”. 			     ', 'Генерация кода во время исполнения или «Пишем свой JIT-компилятор» ', '2015-04-05 11:40:36', 'http://habrahabr.ru/post/254831/');
INSERT INTO `pages` (`id`, `content`, `title`, `datetime`, `url`) VALUES
(9, ' 			Есть маленький ИТ-отдел в средних размерах организации с филиальной структурой. Сотрудники ИТ-отдела практически постоянно в разъездах по разным филиалам и не всегда бывают доступны по мобильному телефону. Для удобства сотрудников организации было принято решение сделать единый (легкозапоминающийся) номер для технической поддержки. В случае, если техподдержка занята или просто никого нет на месте — звонок должен переадресовываться на мобильные телефоны инженеров и информация о звонке должна прийти в виде сообщения в Jabber.\r\n  \r\n  Переадресация на мобильные\r\n  Заходим в веб-интерфейс, Applications =&gt; Ring Groups =&gt; Add Ring Group. Создаём группу переадресации на мобильные телефоны инженеров, например, «922»:\r\n  \r\n  \r\n  \r\n  Решётка в конце номера даёт нам возможность звонить из основного контекста FreePBX, где позволены исходящие звонки. Fixed CID Value — нужно, если ваш провайдер отбивает неверные CID, потому что передаются внутренние номера абонентов. Стратегия RingAll позволяет звонить всем одновременно, если кто недоступен — пропускаем, если один берёт трубку — у остальных сразу сбрасывается звонок. \r\n  \r\n  Лучше поставить приятную музыку на группу, так как в разных версиях FreePBX делает странные вещи с гудками в группах. Проверить правильность настройки можно позвонив по номеру 922.\r\n  \r\n  Теперь создаём основную группу технической поддержки, например «911»:\r\n  \r\n  \r\n  \r\n  Включение Skip Buzy Agent позволяет нам переходить сразу к Destination if no answer, если все сотрудники заняты.\r\n  В Destination if no answer выбираем группу переадресации на мобильные.\r\n  \r\n  В итоге получилось, что звонок поступает на группу 911, если сотрудники заняты или никто не поднимает трубку несколько секунд, звонок переходит в группу 922. Поступив в 922, звонок пробует дозвониться сразу до всех перечисленных мобильных номеров, если никто не поднимает — происходит завершение вызова.\r\n   \r\n  Возникшие проблемы:1) Люди по привычке звонили на прямые номера инженеров. Это продолжалось даже через 3 месяца после внедрения… Некоторые в силу личной привязанности, некоторые звонят сразу инженерам «чтобы общаться с более компетентными в моём вопросе, чем первая линия ТП» и пр… Поэтому мы сменили номера всех ИТ-сотрудников, и в качестве CID и Name поставили одинаковые данные всем, чтобы при внутреннем исходящем звонке сотрудника ТП не видно было его реального номера.\r\n  \r\n  Пример:\r\n  \r\n  \r\n  \r\n  В итоге через месяц все привыкли, прямые звонки инженерам практически прекратились. Сейчас такая схема устраивает даже самых рьяных сторонников «прямых звонков», т.к. по проблеме начинают работать сразу, а не ждут когда кто-нибудь вернётся с обеда или с перекура.\r\n  \r\n  2) Наш провайдер в один прекрасный день перестал пропускать звонки с «кривыми» CID, поэтому пришлось в срочном порядке найти параметр Fixed CID Value. Теперь на любой исходящий из этой группы подставлялся указанный CID.\r\n  3) В случае, если звонок переадресовался на мобильный, разговор почти всегда начинался с фразы «А Вы кто?», т.к. действительно непонятно кто звонит, на мобильном определялся номер компании… Навыки узнавания по голосу при качестве GSM связи были развиты не у всех инженеров. Решили эту проблему оповещением в jabber.\r\n  \r\n  \r\n  Оповещения о поступающем и пропущенном вызове\r\n  В случае переадресации на мобильный видно только внешний номер организации, непонятно кому перезванивать в случае разрыва связи.\r\n  \r\n  Посмотрев разные решения, определились что самое быстрое среди них XMPP(к тому же ejabberd уже был развёрнут для системы мониторинга). Между отправкой сообщения и приёмом обычно проходит не более секунды.\r\n  \r\n  1) Создайте пользователя на вашем Jabber-сервере для АТС. В нашем случае это пользователь PBX@company-name.su\r\n  2) Приведите файл /etc/asterisk/jabber.conf к примерно следующему виду. В более новых версиях Asterisk это файл /etc/asterisk/xmpp_custom.conf\r\n  \r\n  [general]\r\n  ;debug=yes\r\n  ;autoprune=yes\r\n  ;autoregister=yes\r\n  ;auth_policy=accept\r\n  \r\n  [asteriskjabber]\r\n  type=client\r\n  serverhost=jabber.company-name.su \r\n  username=pbx@company-name.su\r\n  secret=Pa$$w0rd\r\n  port=5222 \r\n  usetls=yes \r\n  usesasl=yes\r\n  status=available\r\n  statusmessage=«I am Asterisk!»\r\n  buddy=username1@company-name.su,username2@company-name.su,username3@company-name.su\r\n  ;timeout=100\r\n  \r\n  \r\n  3) Добавляем свой номер вручную в /etc/asterisk/extensions_custom.conf\r\n  \r\n  exten =&gt; 9999,1,JabberSend(asteriskjabber,username1@company-name.su,${CALLERID(all)} звонил(а) в ${STRFTIME(${EPOCH},,%c)}!) / +74951111111)\r\n  exten =&gt; 9999,n,JabberSend(asteriskjabber,username2@company-name.su,${CALLERID(all)} звонил(а) в ${STRFTIME(${EPOCH},,%c)}!) / +74951111111)\r\n  exten =&gt; 9999,n,JabberSend(asteriskjabber,username3@company-name.su,${CALLERID(all)} звонил(а) в ${STRFTIME(${EPOCH},,%c)}!) / +74951111111)\r\n  exten =&gt; 9999,n,Hungup()\r\n  \r\n  \r\n  В сообщение мы добавили переменные: для отображения времени звонка, в случае если сообщение пришло с опозданием и переменную с внутренним CID абонента, который звонил. В конце для удобства дописали прямой номер офиса, чтобы перезванивать не залезая в телефонную книгу.\r\n  \r\n  4) Перезапускаем сервис астериска, чтобы применились новые конфиги.\r\n  service asterisk restart\r\n  Смотрим в консоли астериска результат команды jabber show connections. Если нет слова Connected, ищем ошибки. Если не получается, включаем дебаг jabber в файле /etc/asterisk/jabber.conf. \r\n  \r\n  Теперь проверить работу отправки сообщений в Jabber можно просто позвонив по номеру 9999. \r\n  \r\n  5) Заходим обратно в веб-интерфейс и добавляем номер 9999# (обязательно с решеткой) в группу мобильной переадресации 922 (не запрещено добавлять и в другие места, например, такие как Folow Me).\r\n  \r\n  Теперь начиная с поступления вызова на 922, вместе с вызовами на мобильные отправляются сообщения в Jabber. Как правило, сообщения поступают на пару секунд быстрее вызовов. Их можно прочитать даже после поднятия трубки в строке оповещений телефона.\r\n  \r\n  Примечания: если у вас нет своего сервера Jabber, вы можете использовать практически любые публичные сервера. Например, гугловские. \r\n  \r\n  Самая частая проблема jabber-клиента астериска — он не поддерживает некоторые методы шифрования. 			     ', 'FreePBX — переадресация на мобильные из группы с уведомлениями в реальном времени ', '2015-04-05 11:40:38', 'http://habrahabr.ru/post/254835/'),
(10, '     	Описываемая проблема в статье давно и хорошо известна, поэтому она по большей части для новичков, которые не знакомы с темой.\r\n  \r\n  В ПО, которое разрабатывает наша команда используются денежные значения в рублях и копейках. Мы изначально знали, что использование примитивов для выражения денежных значений — это антипаттерн. Однако по мере разработки приложения мы всё никак не могли наткнуться на проблемы связанные с использованием примитивов, нам, видимо, везло и всё было нормально. До поры до времени.\r\n  Мы совсем забыли про эту проблему и использование примитивов типа int и decimal расползлось по всей системе. И теперь, когда мы написали первый метод, в котором прочувствовали проблему, пришлось вспомнить про это технический долг и переписать всё на использование денежной абстракции вместо примитивов.\r\n  \r\n  Хочется добавить, что в целом данный антипаттерн — это «одержимость примитивами», который встречается достаточно часто, например: string для представления IP-адреса, использование int или string для ZipCode.\r\n  \r\n  А вот говнокод, который был написан:\r\n  public bool HasMismatchBetweenCounters(DispensingCompletedEventArgs eventArgs, decimal acceptedInRub) {             decimal expectedChangeInRub = eventArgs.ChangeAmount.KopToRub();              int dispensedTotalCashAmountInKopecs = expectedChangeInRub.RubToKop() - eventArgs.UndeliveredChangeAmount;             if (dispensedTotalCashAmountInKopecs != eventArgs.State.DispensedTotalCashAmount) {                                return true;             }             if (acceptedInRub != eventArgs.State.AcceptedTotalCashAmount.KopToRub()) {                            return true;             }             return false         } \r\n  Здесь можно увидеть в какое месиво превращается работа с пятью значениями. Везде надо понимать с чем сейчас происходит работа — с копейками или рублями. Для конвертации между decimal и int были написаны методы-расширения KopToRub и RubToKop, что, кстати, является одним из первых признаков одержимости примитивами.\r\n  \r\n  В результате быстренько была написана своя структура Money, рассчитанная только на рубли (и копейки). Некоторые перегрузки операторов опущены для экономии места. Код примерно следующий:\r\n  \r\n  public struct Money : IEqualityComparer&lt;Money&gt;, IComparable&lt;Money&gt; {         private const int KopecFactor = 100;         private readonly long amountInKopecs;         private Money(decimal amountInRub) {             amountInKopecs = (long) (Decimal.Round(amountInRub, 2) * KopecFactor);         }         private Money(long amountInKopecs) {             this.amountInKopecs = amountInKopecs;         }         public static Money FromKopecs(long amountInKopecs) {             return new Money(amountInKopecs);         }         public static Money FromRubles(decimal amountInRubles) {             return new Money(amountInRubles);         }         public decimal AmountInRubles {             get {                 return (decimal)amountInKopecs / KopecFactor;             }         }         public long AmountInKopecsInKopecs {             get { return amountInKopecs; }         }         public int CompareTo(Money other) {             if (amountInKopecs &lt; other.amountInKopecs) return -1;             if (amountInKopecs == other.amountInKopecs) return 0;             else return 1;         }          public bool Equals(Money x, Money y) {             return x.Equals(y);         }         public int GetHashCode(Money obj) {             return obj.GetHashCode();         }         public Money Add(Money other) {             return new Money(amountInKopecs + other.amountInKopecs);         }         public Money Subtract(Money other) {             return new Money(amountInKopecs - other.amountInKopecs);         }         public static Money operator +(Money m1, Money m2) {             return m1.Add(m2);         }         public static Money operator -(Money m1, Money m2) {             return m1.Subtract(m2);         }         public static bool operator ==(Money m1, Money m2) {             return m1.Equals(m2);         }         public static bool operator &gt;(Money m1, Money m2) {             return m1.amountInKopecs &gt; m2.amountInKopecs;         }         public override bool Equals(object other) {             return (other is Money) && Equals((Money) other);         }         public bool Equals(Money other) {             return amountInKopecs == other.amountInKopecs;         }         public override int GetHashCode() {             return (int) (amountInKopecs ^ (amountInKopecs &gt;&gt; 32));         }     } \r\n  Фаулер при аналогичной реализации держит два открытых конструктора, один из которых принимает double, другой принимает long. Мне это не нравится категорически, ибо что означает код \r\n  var money = new Money(200); //что это: 200 рублей или 200 копеек=2руб.? \r\n  По этой же причине плохо давать возможность неявного приведения. Это плохо в независимости от того, разрешено ли неявное приведение только через long, или и через long и через decimal (можно было бы подумать, что разрешить implicit conversion для decimal это нормально, но то, что кто-то написал Money b = 200m ещё не означает, что он не имел ввиду 200 копеек, а m приписал, чтобы просто скомпилировалось).\r\n  Money a = 200; //что это: 200 рублей или 200 копеек=2руб.? Money b = 200m; //казалось бы это рубли, но кто его знает? \r\n  Если нужно реализовать работу в разных валютах, то просто создаём классы валют, которые знают factor приведения (например, 100 для долларов и центов, 100 для рублей и копеек). Сравнение значений на разных валютах скорее всего придётся запретить (если, конечно, у вас нет доступа к курсам валют).\r\n  \r\n  Резюме: не испытывайте на пробу антипаттерн «одержимость примитивами», сделайте сразу нормальную абстракцию, иначе потом придётся убить несколько часов на рефакторинг. И не дай бог, если нарвётесь на баги, а на них, полагаясь на примитивы, нарваться очень просто.     	   	', 'Money как Value Object ', '2015-04-05 11:40:39', 'http://habrahabr.ru/post/254837/'),
(11, ' 			\r\n  \r\n  Хочу поделиться новостью, которая чуть не прошла мимо, хотя заслуживает вашего внимания. Atmel решила вступить в гонку IoT. Архитектура AVR, разработанная Atmel в 1996 году (имеется в виду семейство восьмибитных микроконтроллеров) уже безнадежно устарела. Семейство 32-битных контроллеров AVR32 так и не обрело популярности. Вечно держаться за счет надежных и простых как камень ATtiny и ATmega не получится в виду их ограниченной функциональности. Я сам являюсь поклонником простоты и надежности AVR, но в свое время решил перейти с AVR на ARM от ST, как раз по причине «допотопности» первых и «нафаршированности» вторых. Казалось, что Atmel больше не развивает архитектуру AVR – тогда зачем тратить время на умирающего – в общем, я оказался прав.\r\n  \r\n  Похоже, что такая же мысль пришла в головы руководства Atmel и они приказали копать в сторону новых разработок на ARM вместо допиливания AVR. В итоге мы имеем новую серию МК от Atmel SMART SAM L21 на архитектуре ARM Cortex-M0+.\r\n  \r\n  Ссылки здесь:\r\n    Официальная презентация семейства с официального сайта Atmel\r\n    Описание на официальном сайте Atmel\r\n    Пресс-релиз\r\n    Видео с выставки:\r\n  \r\n  \r\n    \r\n  Кстати, там же представили семейство SMART SAM S70 и E70 на архитектуре ARM Cortex-M7 для тех, кто любит погонять, но не о них сегодня речь.\r\n  \r\n  Так что мы имеем в итоге… Серия SMART SAM L21 серия МК на архитектуре ARM Cortex-M0+ с ультранизким потреблением и максимальной частотой 48 МГц. 256 Кб флэши и 44 Кб ОЗУ. В общем, всё, что было в старой любимой ATmega, но с большим флэшем и ОЗУ плюс фишки с регулировкой энергопотребления. А также до 8 таймеров-счетчиков. 32-битные часы реального времени и календарь. USB HS 2.0 (имхо, хотя могли бы и 3.0 – 2015 год на дворе) в режиме девайса и хоста. До шести различных интерфейсов – USART, I2C, SPI, LIN общающихся по SERCOM – Serial Communication Interfaces (какая-то новая разработка Atmel). ЦАП и АЦП. Три операционных усилителя. До 51 ножки I/O. Для любителей шифроваться: поддержка AES шифрования, ГСЧ, CRC-32. Все это в TQFP или QFN корпусах на 32, 48 или 64 ножки. Рабочее напряжение наконец-то снизили до 1,62В — 3,63В. Возможность подключать touch-панели. SWD-дебаг. \r\n  \r\n  Энергопотребление менее 35 мкА/МГц в рабочем состоянии и несколько сот нА в спящем. Вот что говорит по этому поводу менеджер по маркетингу Atmel Андреас Йеланд (Andreas Eieland): \r\n  «В традиционной реализации режима сна отключаются все блоки контроллера, кроме часов реального времени. Это необходимо для того, чтобы после пробуждения он оставался синхронизирован. В L21 мы полностью изменили схему пониженного энергопотребления. Весь чип разделён на пять доменов, и остаточный ток может забираться от неиспользуемых модулей. К тому же, периферийные устройства продолжают взаимодействовать даже когда контроллер спит»\r\n  Более подробно про технологию picoPower можно почитать вот здесь. А вот диаграмма доменов с сайта arstechnica.com, о которых Андреас говорит:\r\n  \r\n  \r\n  \r\n  \r\n  На фотографии Андреас Йеланд запитал чип SMART SAM L21 от тепла своей руки\r\n  \r\n  Также совместно с производством чипов Atmel запускает в производство отладочную плату для макетирования SMART SAM L21 Xplained Pro за каких-то 54$. Продаваться чипы и платы начнут в сентябре 2015 года.\r\n  \r\n  В общем, звучит довольно заманчиво. Но то, сколько найдется желающих пересесть на SMART SAM L21 с ATmega и STM32 будет зависеть только от стоимости чипов. Лично я торопится пока не буду — жду когда Atmel подтянет свою среду разработки до приличного уровня или хотя бы возьмётся за написание плагинов к Eclipse или IntelliJ CLion, т.к. лично для меня продуктивность разработки на Atmel Studio 6 сильно ниже продуктивности работы с Notepad++.\r\n  \r\n  Так что запасаемся попкорном и будем смотреть, чем ответит ST.\r\n  \r\n  Update: вот здесь  FakeFactFelis рассказывает подробнее про технологию picoPower. 			     ', 'Atmel закапывать еще рано – она живее всех живых ', '2015-04-05 11:40:41', 'http://habrahabr.ru/post/254839/'),
(12, ' 			В стандартных пакетах pfsense нет ни MySQL, ни полноценного Apache. PHP присутствует в системе по умолчанию, являясь основным языком сценариев, но отсутствуют нужные модули mysql.so и присутствуют свои pfsense.so, ssh2.so и т.д.\r\n  \r\n  В отличие от FreeBSD, убраны многие стартовые скрипты и файлы конфигурации (rc.conf, rc.local), вместо них используются свои механизмы, написанные на PHP. \r\n  \r\n  Pfsense представляет некую пхпэшную обертку наподобие перлового вебмина. К радости присутствует система пакеджей pkg, с помощью которой я поставлю необходимое ПО и опишу несколько фокусов, которые помогут хостить сайты на системе первоначально предназначенной быть интернет шлюзом.\r\n  \r\n  Ставил все на голую систему — в любом случае не забываем делать бекап.\r\n  \r\n  После установки и первоначальной настройки необходимо освободить 80 порт от lighthttp. \r\n  System — Advanced — webConfigurator — TCP port = 88\r\n  \r\n  Вся остальная работа будет в консоли, которую включаем:\r\n  System — Advanced — Secure Shell — Enable Secure Shell\r\n  \r\n  pkg install apache24 mysql56-server mod_php55 php55-mysql php55-mysqli \r\n  PHP желательно устанавливать именно версии 55 т. к. в системе именно она, иначе могут быть проблемы с модулями.\r\n  \r\n  В системе нет rc.conf поэтому службы не стартуют.\r\n  Трюк первый: добавляем записи в /etc/defaults/rc.conf:\r\n  \r\n  apache24_enable=&quot;YES&quot; mysql_enable=&quot;YES&quot; \r\n  Система при каждой загрузке чистит каталог /tmp.\r\n  \r\n  Трюк два: сокет мускула кладем в /var/tmp/mysql.sock.\r\n  \r\n  Редактируем (создаем) файл /usr/local/etc/my.cnf:\r\n  \r\n  [client] port		= 3306 socket		= /var/tmp/mysql.sock  [mysqld] port		= 3306 socket		= /var/tmp/mysql.sock skip-external-locking key_buffer_size = 16M max_allowed_packet = 1M table_open_cache = 64 sort_buffer_size = 512K net_buffer_length = 8K read_buffer_size = 256K read_rnd_buffer_size = 512K myisam_sort_buffer_size = 8M init-connect=''SET NAMES utf8'' collation_server = utf8_unicode_ci character_set_server = utf8 character_set_client = utf8 character_set_filesystem = utf8 log-bin=mysql-bin binlog_format=mixed server-id	= 1  [mysqldump] quick max_allowed_packet = 16M  [mysql] no-auto-rehash [client] default-character-set = utf8  [myisamchk] key_buffer_size = 20M sort_buffer_size = 20M read_buffer = 2M write_buffer = 2M  [mysqlhotcopy] interactive-timeout \r\n  Php.ini генерится каждый раз заново скриптом при запуске системы.\r\n  \r\n  Трюк три: редактируем /etc/rc.php_ini_setup:\r\n  \r\n  Перед ; Extensions:\r\n  \r\n  [mbstring] mbstring.internal_encoding = UTF-8 mbstring.func_overload = 2  \r\n  После ; Extensions вставляем:\r\n  \r\n  extension=mysql.so extension=mysqli.so \r\n  Чтобы не выскакивали ворсинки меняем on на Off:\r\n  \r\n  display_startup_errors=Off display_errors=Off \r\n  Каталог /usr/local/etc/rc.d не является стартовым. Чтобы службы запускались автоматом, создаем два файла /etc/rc.local и /etc/rc.local.running.\r\n  \r\n  Трюк четыре: редактируем /etc/rc.local:\r\n  \r\n  /usr/sbin/service mysql-server start /usr/sbin/service apache24 start \r\n  Перегружаемся и настраиваем виртуал хосты Apache по вкусу, на один из них я поставил Bitrix для последующей организации складского учета. \r\n  \r\n  При установке битрикса в качестве сервера мускула указываем не localhost, а 127.0.0.1. 			     ', 'Установка FAMP на pfsense ', '2015-04-05 11:40:44', 'http://habrahabr.ru/post/254847/'),
(13, '     	Русский язык богат и самобытен, однако мы неустанно наполняем его новыми словами из области знаний, в которой или терминология плохо проработана, или использование другого языка гораздо более удобно. \r\n  Количество заимствований из английского языка в речи IT-занятого населения переходит все мыслимые пределы. Зачастую проще говорить на английском, так как от русского в речи остаются только союзы да предлоги. Но тут уж как кому удобнее. Заимствование в языке – процесс естественный и понятный, и, мне кажется, вполне логично считать, что заимствованное слово должно соотвествовать правилам русского языка и не выглядеть в нем совсем уж чужеродно.\r\n   \r\n  Однако вокруг постоянно приходится слышать использование слов не просто в заимстованном, а в заимствованно-исковерканном виде. И это при том, что уже есть менее исковерканный и чужой слуху вариант.\r\n   \r\n  Приведу несколько примеров:\r\n  1) «Фиксать» – зачем использовать это слово, если есть более привычное и популярное «фиксить» (156 000 против 5 580 в поиске google, и 228 000 против ~1000 в яндексе *)? Тем более, что русское «править» практически полностью ему аналогично: править – фиксить, правлю – фикшу, правишь – фиксишь, и т.д;\r\n  2) «Тестать» – это за гранью моего понимания. Во-первых, есть, опять же, более привычное и распространенное слово «тестить» (434 000 у google и 547 000 у яндекса против ~2000 у обоих). Во-вторых, есть еще более замечательное «тестировать». Недостаток его лишь в размере;\r\n  3) «Апдейтать» – вроде, самое безобидное, однако в спряжениях вылезает иноземное нутро: «апдейтаю», «апдейтаешь» звучат не по-нашему. Да и поисковики с этим полностью согласны – «апдейтить» безоговорочно популярнее;\r\n  4) «Бага» – контрольный выстрел в моем маленьком и, уверен, неполном списке. Слово «баг» удачно вошло в русский язык с сохранением категории мужского рода. Ну какая еще «бага»? Потому что «ошибка» женского рода? Так ведь это все IT-жаргон, и «баг» замечательно соответствует жаргонному словечку «косяк».\r\n  \r\n  Я прекрасно понимаю, что привить какие-то нормы IT-жаргону сложно. В общем-то, каждый волен создавать свой диалект. Но здесь хорошо бы подействовали open-source правила верности большинства, как, например, в тегах openstreetmap – верным считается то правило присвоения тегов, которое используется чаще. Обычно оно и как-то обосновано и закреплено. В данном случае показателем частотности выступает количество результатов в поисковой выдаче. Сделать такую проверку легко и просто, если возникает сомнение в том, какое же слово использовать. Конечно, кто-нибудь может и не придавать особого значения всему, что слышит, а у кого-то, знаю, от ослышанного уши вянут.\r\n  \r\n  Будьте грамотными, друзья, и уважайте друг друга! И желаю вам пореже слышать что-нибудь вроде: «Пофиксай эту багу побыстрее и проапдейтай, а то мы не можем тестать». \r\n  \r\n  * — полученные Вами результаты могут отличаться от моих. Точные числа в данном случае не имеют значения, так как важно было лишь соотношение.     	   	', 'Как мы говорим ', '2015-04-05 11:40:46', 'http://habrahabr.ru/post/254849/'),
(14, '       Если не можешь сказать коротко и ясно, скажи длинно и ясно, но только не коротко и непонятно.\r\n   janatem \r\n  \r\n  Давайте поговорим об иконках. Они являются частью многих интерфейсов. Проблема заключается в том, что под их влиянием может быть разрушена ясность происходящего.\r\n  \r\n  Пиктограммы были использованы еще с первых дней человечества. Они очень часто могут быть замечены в качестве попыток проявления письменности. Некоторые неграмотные люди до сих пор используют их для передачи информации.\r\n  \r\n  \r\n  \r\n  В общественных местах иконки часто используют для навигации, например, в международных аэропортах, где надписей на местном языке явно будет не хватать. \r\n  \r\n  \r\n  \r\n  В какое-то время иконки стали популярны в пользовательских интерфейсах. Взгляните-ка на снимок первого коммерческого компьютера с визуальным управлением (the Xerox Star). Дизайнер Дэйвид Смит изобрел концепцию пиктограмм:\r\n  \r\n  \r\n  \r\n  Становится очевидна их популярность в наши дни. Во-первых, они делают UI менее нагруженным от надписей. Во-вторых, когда их используют правильно, то приложение обретает свою уникальность. Это все очень хорошо.\r\n  \r\n  К тому же, одна такая небольшая картинка способна заменить целую группу подряд идущих слов. Это особенно актуально ввиду уменьшения размеров экранов. Но здесь есть западня: не все иконки понятны пользователям. Они заставляют задуматься. Что хорошего в интерфейсе, если он непонятен? Мораль очевидна: используй иконки тогда, когда их понимают все, иначе забудь об этом.\r\n  \r\n  Это напоминает мне картинку из Twitter''а:\r\n  \r\n  \r\n  \r\n  Думаю, Рон запутался, пока пытался осознать суть всех этих значков для стирки белья…\r\n  \r\n  Когда я обсуждаю использование иконок с клиентами, то всегда слышу аргумент вроде «Люди будут использовать наш продукт ежедневно и запросто выучат предназначение всех кнопок». Вполне справедливо, но есть тут и изъян. Я использую почтовое приложение от Apple несколько раз в день, но до сих пор не всегда могу с первого раза вспомнить, какая из иконок служит для отправки писем:\r\n  \r\n  \r\n  \r\n  На этом плохие новости не заканчиваются: люди не станут работать с приложением, которое сбивает их с толку. Мы просто обязаны разрушать сомнения. Когда Google спрятал остальные приложения за этой непонятной иконкой, то получил, по-видимому, много запросов в службу поддержки вроде «Где мой Google Calendar?»\r\n  \r\n  \r\n  \r\n  Другой пример: после редизайна пользователи нового Twittera не могли сразу понять, что им нужно делать. Иконка не была настолько понятна:\r\n  \r\n  \r\n  \r\n  Более поздняя версия добавила больше ясности:\r\n  \r\n  \r\n  \r\n  Вы знали, что можете отправить фото своему другу в Instagram напрямую? Да, но это все спрятано вот за такой пиктограммой:\r\n  \r\n  \r\n  \r\n  Если бы вы были пользователем этой сети ранее, то шансов того, что вам ее доводилось видеть, больше. Но что она означает?\r\n  \r\n  Конечно, необходимо использовать иконки в верном контексте. Некоторые кнопки могут быть интерпретированы двояко. Давайте посмотрим на еще один пример. При открытии переписки в Gmail любо пользователь видит вот это. Окей, как теперь вернуться назад?\r\n  \r\n  \r\n  \r\n  Со мной не раз случалось, что я возвращался во «Входящие» вместо того, чтобы написать ответ.\r\n  \r\n  Иконки в Tweetbot могут быть понятны не всем, но они взяты из контекста Twitter''a. Пользователи Tweetbot зачастую являются пользователями Twitter, так что использование данных кнопок вполне приемлемо:\r\n  \r\n  \r\n  \r\n  То же можно сказать и о приложении Tumblr для iOS. Некоторое для нас непонятно, но в контекста Tumblr многое проясняется. Пользователи данного сервиса явно все поймут.\r\n  \r\n  \r\n  \r\n  Приложение Mac Rdio выглядит так:\r\n  \r\n  \r\n  \r\n  Многие пользователи смогут разобраться, так как перед ними аудиоплеер. (Однако, одну из иконок можно принять как за уровень громкости, так и за текущую проигрываемую дорожку.)\r\n  \r\n  Дайте мне сказать это еще раз: не используйте вы эти иконки, если не все их понимают. Если ситуация спорная, то лучше напишите все текстом, так как это будет точно яснее.\r\n  \r\n  Но никто не запрещает вам использовать надписи вместе с картинками. Это является идеальным решением.\r\n  \r\n  Mac App Store именно так и делает:\r\n  \r\n  \r\n  \r\n  Twitter использует этот же прием в своем веб-интерфейсе:\r\n  \r\n  \r\n  \r\n  Давайте посмотрим на Facebook в качестве последнего примера: недавно они заменили свою иконку-гамбургер на более удобную навигацию. Хорошо сработано:\r\n  \r\n   \r\n  \r\n  Надеюсь, что мои советы помогут вам выполнить исполнять самую главную характеристику любого интерфейса — понятность. Так что будьте осторожны и не забывайте тестировать свой проект! И помните всегда: текст понятнее.\r\n  \r\n  Берегите себя и своих близких.   	     ', 'Лучшая иконка — текст ', '2015-04-05 11:41:05', 'http://habrahabr.ru/post/254881/'),
(15, '     	Месяц назад на Sitepoint был опубликирован опрос популярности PHP фреймворков. За это время всего проголосовало 7800 людей, и вот его результаты:\r\n  \r\n  На работе\r\n  \r\n  \r\n  \r\n  В персональных проектах\r\n  \r\n  \r\n  Больше различной статистики на самом сайте\r\n  \r\n  Из интересного еще замечу, что в России самым популярным остается Yii2, в Украине же победил PHPixie. Также PHPixie стал самым популярным фреймворком в возрастной групе до 18 лет.     	   	', 'Результаты опроса популярности PHP фреймворков от Sitepoint ', '2015-04-05 11:43:51', 'http://habrahabr.ru/post/254277/');
INSERT INTO `pages` (`id`, `content`, `title`, `datetime`, `url`) VALUES
(16, '     	\r\n  Сегодня стала доступна еще одна библиотека от PHPixie, на этот раз это шаблонизатор. Как и в предыдущей версии как язык используется сам PHP, но теперь добавились новые возможности включая блочный подход к наследованию шаблонов. Об этом мы поговорим позже, а сейчас о самом вкусном: компиляции произвольных форматов. PHPixie Template позволяет использовать практически любой формат, достаточно лишь предоставить компилятор который транслирует его в PHP, а подгрузка файлов, их кэширование итд. будет сделано за вас. Также, это значит, что можно одновременно использовать несколько форматов в одном проекте.\r\n  \r\n  Итак попробуем подружить Template с HAML. Для этого используем пакет mthaml/mthaml\r\n  \r\n  \r\n  //composer.json {     &quot;require&quot;: {         &quot;phpixie/template&quot;: &quot;3.*@dev&quot;,         &quot;phpixie/slice&quot;: &quot;3.*@dev&quot;,         &quot;mthaml/mthaml&quot;: &quot;1.7.0&quot;     } } \r\n  \r\n  Создаем самый простой враппер:\r\n  \r\n  &lt;?php  class HamlFormat implements \\PHPixie\\Template\\Formats\\Format {     protected $mtHaml;          public function __construct()     {         $this-&gt;mtHaml = new \\MtHaml\\Environment(''php'');     }          //Расширения файлов которые обрабатывает наш формат     public function handledExtensions()     {         return array(''haml'');     }          //Сама компиляция     public function compile($file)     {         $contents = file_get_contents($file);         return $this-&gt;mtHaml-&gt;compileString($contents, $file);     } } \r\n  \r\n  Осталось лишь передать наш новый формат через конструктор в сам Template:\r\n  \r\n  //Вспомогательная библиотека о которой я еще расскажу //Используется для представления данных, в данном случае конфига $slice = new \\PHPixie\\Slice();  $config = $slice-&gt;arrayData(array(     ''resolver'' =&gt; array(         ''locator'' =&gt; array(             //Папка с шаблонами             ''directory''        =&gt; __DIR__.''/templates/'',             ''defaultExtension'' =&gt; ''haml'',         )     ),     ''compiler'' =&gt; array(         //Где сохранять скомпилированные файлы         ''cacheDirectory'' =&gt; &gt; __DIR__.''/cache/'',     ) ));  $template = new \\PHPixie\\Template($slice, $config, array(), array(     new HamlCompiler() )); \r\n  \r\n  Теперь все haml шаблоны будут автоматически компилироваться и кэшироваться. Таким образом можно придумать или адаптировать любой язык, при этом сохраняя все другие возможности библиотеки, как например наследование и расширения.\r\n  \r\n  Наследование\r\n  В прошлой версии единственным способом подключить один шаблон в другой был include. То есть рендеринг страницы должен был идти сверху вниз подключая нужные шаблоны по пути. Недостаток такого подхода в том что подключенный шаблон не может изменить ничего в родительском. А сейчас взглянем что нам доступно теперь:\r\n  \r\n  //файл layout.php &lt;html&gt;     &lt;title&gt;         &lt;?php $this-&gt;block(''title''); ?&gt;     &lt;/title&gt;     &lt;body&gt;         &lt;?php $this-&gt;childContent(); ?&gt;              &lt;/body&gt; &lt;/html&gt; \r\n  \r\n  //файл fairy.php &lt;?php $this-&gt;layout(''layout''); ?&gt; &lt;?php $this-&gt;startBlock(''title''); ?&gt; Fairy page &lt;?php $this-&gt;endBlock(); ?&gt;  &lt;h2&gt;Hello &lt;?php $_($name); ?&gt;&lt;/h2&gt; \r\n  \r\n  Шаблон fairy.php расширяет layout.php с возможностью переопределить блоки в родительском шаблоне. Тем кто использует Twig этот подход очень знаком. Для тех кто предпочитает использовать include это и дальше возможно:\r\n  include $this-&gt;resolve(''fairy''); \r\n  \r\n  Поиск шаблона\r\n  Шаблонизаторы часто имеют механизм поиска шаблона, где если нужен шаблон не найден вместо него используется другой. Часто такое нужно при создании новых тем базируясь на старых. Вместо какого-то одного подхода PHPixie Template позволяет самому настроить поиск используя комбинации 3-х локаторов:\r\n  \r\n    Driectory — ищет в директории по имени файла, самый стандартный  Group — группирует локаторы, поиск ведется в каждом локаторе по очереди  Prefix — Позволяет добавить префикс к имени  \r\n   \r\n  Взглянем на такой конфиг:\r\n  &lt;?php  $config = $slice-&gt;arrayData([     ''resolver'' =&gt; [         ''locator'' =&gt; [             ''type''     =&gt; ''prefix'',             ''locators'' =&gt; [                                  ''Site'' =&gt; [                     ''directory''  =&gt; __DIR__.''/site/'',                 ],                                      ''Theme'' =&gt; [                     ''type''       =&gt; ''group'',                     ''locators''   =&gt; [                         [                             ''directory'' =&gt; __DIR__.''/templates/'',                         ],                                                  [                             ''directory'' =&gt; __DIR__.''/fallback/'',                         ],                     ]                  ]             ]         ]     ] ]); \r\n  \r\n  Таким образом шаблон Site::layout будет искаться в папке site/, а Theme::home в папках templates/ и fallbacks/.\r\n  \r\n  Расширения\r\n  Расширения это классы которые добавляют дополнительные функции в шаблоны. В качестве примера посмотрим на расширение HTML, которое используется для вывода и экранирования строк.\r\n  \r\n  class HTML implements \\PHPixie\\Template\\Extensions\\Extension {     public function name()     {         return ''html'';     }          //Методы из \\того массива будут доступны в шаблонах     public function methods()     {         return array(''escape'', ''output'');     }          //Также для удобности можно некоторые функции назначит в переменные     //в данном случае это позволит использовать $_($name) вместо $this-&gt;output($name)     public function aliases()     {         return array(             ''_'' =&gt; ''output''         );     }          //Сами методы     public function escape($string)     {         return htmlspecialchars($string, ENT_QUOTES, ''UTF-8'');     }          public function output($string)     {         echo $this-&gt;escape($string);     } } \r\n  \r\n  Такие расширения аналогичино форматам можно передавать через конструктор.\r\n  \r\n  Демо\r\n  Чтобы попробовать Template своими руками достаточно:\r\n  git clone https://github.com/phpixie/template cd template/examples   #если у вас еще нет Композера curl -sS https://getcomposer.org/installer | php   php composer.phar install php quickstart.php \r\n  \r\n  И кстати как и у всех других библиотеках от PHPixie вас ждет 100% покрытие кода тестами и работа под любой версией PHP старше 5.3 ( включая новую 7 и HHVM )     	   	', 'Вкусняшки от новой PHPixie Template ', '2015-04-05 11:43:52', 'http://habrahabr.ru/post/253973/'),
(17, '     	\r\n  Вышел еще один полезный инструмент для тестирования, PHPixie Illusion. \r\n  Если ваше приложение зависит от внешних API то вы наверняка сталкивались с проблемой как представить их в своих тестах. Как раз эту проблему и решает Illusion. Она создает отдельный HTTP сервер на указанном порте и позволяет вам легко управлять его роутами и результатами включая HTTP заголовки.  И\r\n  все это предельно просто:\r\n  \r\n  //Создаем сервер и клиент $illusion = \\PHPixie\\Illusion::start($port = 4747);   //Добавляем роут и получаем его ссылку $url = $illusion-&gt;route(''/pixie/fairy'', ''Trixie'');   //И теперь echo file_get_contents($url); // ''Trixie''   //Также можно задавать HTTP метод роута //и заголовки ответа $headers = array(''Content-Type: text/plain''); $url = $illusion-&gt;route(''/pixie'', ''PHPixie'', ''GET'', $headers);  //Для остановки сервера $client-&gt;stopServer(); //но сервер останавливается автоматически //в деструкторе клиента \r\n  \r\n  Как это работает ?\r\n  \r\n  Довольно просто. В отдельном процессе запускается немного модифицированный StupidHTTP сервер, к которому добавляются два сокета для перекидывания уведомлений с клиентом. Получив соответствующую команду сервер добавляет роут к своей конфигурации.\r\n  \r\n  Надо заметить что поскольку сервер получает отдельный процесс возможный вариант когда главный поток закончиться а сервер останется висеть ( например при исключении ). Чтобы избежать такого поведения можно поставить вызов к stopServer() в обработчик исключений в вашем тесте.     	   	', 'PHPixie Illusion — простой mock HTTP сервер для ваших тестов ', '2015-04-05 11:43:53', 'http://habrahabr.ru/post/244069/'),
(18, '     	\r\n  Некоторое время назад был опубликован пост с подробным описанием уязвимости функционала «remember me» в фреймворке Laravel. Она позволяла имперсонировать любого пользователя путем создания поддельного кука логина. Разработчики тогда сказали что дыру закрыли. Но более подробный взгляд показывает что гидре отрубали лишь одну голову. Даже если вы не используете данный фреймворк вам все равно будет полезно узнать как не надо имплементировать такой функционал у себя на сайте.\r\n  \r\n  \r\n  \r\n  Главной проблемой является то что токен авторизации в Laravel являет собой просто зашифрованный id пользователя. Почему это плохо? Во-первых если украсть или подобрать ключ используемый для шифровки можно залогиниться под любым пользователем, при этом не придется подбирать его пароль. Конечно получить такой ключ достаточно трудно, но вот например недавно обнаруженная уязвимость OpenSSL Hartbleed позволила бы это сделать. Но это не главная проблема.\r\n  \r\n  Что будет если кто-то украдет ваш куки?\r\n  Фактически ваш аккаунт уже украден навсегда и вы ничего не можете с этим сделать. Поскольку это просто ваш id, то такой куки нет срока годности, с ним можно будет зайти даже через год и даже если вы поменяете пароль. Это открывает захватчику еще одну дверь: если он однажды подобрал ваш пароль, залогинился а затем сохранил куки себе, то смена пароля вам опять таки уже не поможет. Давайте добавим сюда то, что перехватить ваши пакети когда вы пользуетесь открытым WIFI ( например в Макдональдс ) очень и очень просто.\r\n  \r\n  Если не ID, то что?\r\n  Есть много вариантов как сделать remember_me безопасно, все они нуждаются в каком-то уникальном рандомном токене, например:\r\n  \r\n  1) Создаем табличку в которой сохраняем: user_id, token, expires_on, ip\r\n  2) При логине с включенным «remember me» создаем новый случайный токен, записываем IP пользователя а также задаем срок годности токена.\r\n  3) Когда пользователь приходит с токеном, мы проверяем его валидность по табличке\r\n  4) Логиним пользователя\r\n  5) Удаляем старый токен\r\n  6) Создаем новый токен как в пункте 2 и отдаем его пользователю\r\n  \r\n  Поскольку токен полностью рандомный подобрать его фактически невозможно. Украсть его намного труднее, так как использовать его можно только один раз. Как дополнительный бонус у нас есть привязка к IP пользователя. Кому интересна подробная имплементация советую прочитать пост на stackoverflow в котором подробно описана вся процедура авторизации пользователя. Я навел упрощенный пример здесь для того чтобы в контрасте показать насколько примитивен подход Laravel.\r\n  \r\n  Мораль: нельзя доверять безопасность своего приложения фреймворку и надеяться что все сдалали за вас. Кстати создатель фреймворка очень плохо воспринял критику своего подхода и продемонстрировал полное непонимание подхода с токенами.     	   	', 'Обнаружена уязвимость функционала «remember me» в Laravel ', '2015-04-05 11:43:54', 'http://habrahabr.ru/post/219475/'),
(19, '     	\r\n  Пока еще только ведутся работы над третьей версией фреймворка PHPixie, но уже можно точно сказать что он сильно изменится в лучшую (как по мне) сторону:\r\n  \r\n    Полный переход на стандарт PSR-2  Поскольку фреймворк будет являть собой набор библиотек, то его компоненты можно будет использовать в любом проекте без самого PHPixie.  100% покрытия кода тестами. При чем в данном случае 100% не просто фигуральное слово а реально просчитанный «code coverage», то есть отношение строк которые вызываются при исполнении тестов ко всем строкам кода, кстати у Laravel это всего-лишь 53%.  \r\n  \r\n  Вчера стали доступны две библиотеки которые войдут в PHPixie 3, они полностью готовы и их уже можно использовать с любым проектом. Это сделано Подробнее об этом можно почитать в посте на сайте, а я здесь опишу то что мне больше всего в них нравится.\r\n  \r\n  \r\n  \r\n  Кстати библиотеки таки действительно покрыты тестами на 100%, убедится можно тут и тут.\r\n  \r\n  PHPixie Config\r\n  \r\n  Отрезки конфигурации (Config Slices)\r\n  Позволяют отделить опции для частей системы от самой системы, тем самым делая их более агностическими и независимыми. Для примера, рассмотрим такие настройки уровня какой-то игры в какой игрок пробует захватить замок:\r\n  array(     ''battlefield'' =&gt; array(         ''background'' =&gt; ''forest'',         ''castle'' =&gt; array(             ''turrets'' =&gt; array(                 ''amount'' =&gt; 5             )         )     ),     ''attackers'' =&gt; array(         ''knight'' =&gt; array(             ''attack'' =&gt; 6         ),         ''paladin'' =&gt; array(             ''attack'' =&gt; 4,             ''spell''  =&gt; ''heal''         )     ) ); \r\n  \r\n  Мы уже привыкли использовать ''.'' для чтения таких массивов, например используя $config-&gt;get(''battlefield.castle.turrets.amount''), но использовать такой код в классе Castle было бы некорректно, так как ему надо тогда знать весь путь к тому месту где начинается его конфигурация. Можно конечно в родительском классе передавать все turrets_amount прямо в конструктор, но есть лучший путь:\r\n  \r\n  class Level {     public function __construct($slice){         $this-&gt;battlefield = new Battlefield($config-&gt;slice(''battlefield'');     } }  class Battlefield {     public function __construct($slice){         $this-&gt;background = new Background($config-&gt;get(''background''));         $this-&gt;castle = new Castle($config-&gt;slice(''castle''));     } }  class Castle {     public function __construct($slice){         $this-&gt;background = new Background($config-&gt;get(''turrets.amount''));     } } $level = new Level($config); \r\n  \r\n  Как видите все классы теперь полностью независимы от самого пути конфигурации, как раз для этого и придуман slice().\r\n  \r\n  Разбиение конфигурации на папки\r\n  Возможность создавать отдельные файлы для частей конфигурации позволяет например легко коммитить только настройки самого приложение и включить в .gitignore файл с конфигурацией чего-то специфического ( например конекта к базе данных). Также как написано на сайте PHPixie позволяет на своей базе легко создать файлы с переводом текста на сайте на разные языки. Для примера возьмем такую структуру файлов:\r\n   config.php config/ +-forest.php   +-forest/       +-meadow/            +-fairy.php \r\n  \r\n  Теперь если мы будем искать опцию forest.meadow.fairy.name, поиск будет идти в таких местах:\r\n  \r\n  1) ''name'' в config/forest/meadow/fairy.php\r\n  2) ''fairy.name'' в config/forest/meadow.php\r\n  3) ''meadow.forest.name'' в config/forest.php\r\n  4) ''forest.meadow.forest.name'' в config.php\r\n  \r\n  Кстати есть поддержка записи информации назад в файл конфигурации, например если у вас есть система бана которая будет писать забаненные айпишки в конфиг.\r\n  \r\n  PHPixie Database\r\n  Во первых добавлена обещанная поддержка MongoDB, примеры использования ее можно посмотреть в той же статье на сайте, полученный интерфейс ну очень похож на интерфейс доступа к MySQL, поэтому позволит попробовать MongoDB даже тем кто ни разу с ним не сталкивался. Но я остановлюсь на других возможностях:\r\n  \r\n  Condition Placeholders\r\n  Всем нам знакомы разные строители запросов (query builders), которые позволяют добавлять условия вот так:\r\n  $query     -&gt;where(''type'', ''elf'')     -&gt;orWhere(function($q){          $q              -&gt;_and(''name'', ''Trixie'')              -&gt;_and(''type'', ''fairy'')     });  // WHERE type = ''elf'' OR (name = ''Trixie'' and type = ''fairy'') \r\n  Здесь ничего нового нет, но у них есть маленькая проблема: что делать если потом понадобится в тот OR ( ) добавить еще одно условие, уже в другом месте/классе? В PHPixie можно создать контрольную точку в которую потом добавлять условия, например:\r\n  $placeholder = null; $query     -&gt;where(''type'', ''elf'')     -&gt;orWhere(function($q){          $q              -&gt;_and(''name'', ''Trixie'')              -&gt;_and(''type'', ''fairy'');          $placeholder = $q-&gt;addPlaceholder(''and'');     });  $placeholder-&gt;_and(''status'', ''active'');  // WHERE type = ''elf'' OR (name = ''Trixie'' and type = ''fairy'' and status=''active'') \r\n  \r\n  Для построение сложных запросов использование таких точек очень полезно.\r\n  \r\n  Упрощенное добавление условий\r\n  \r\n  Поскольку для SQL запросов кроме WHERE условий можно добавлять еще и HAVING и ON условия, то для каждого из них есть свой набор методов: orWhereNot, xorHaving… итд. Чтобы ускорить написание условий можно использовать сокращенные версии, которые будут добавлять условия последнего добавленного типа:\r\n  //Вместо $query     -&gt;where(''type'', ''elf'')     -&gt;orWhere(''id'', 5)     -&gt;having(''count'', 5)     -&gt;xorHaving(''max'', 6);  //Можно $query     -&gt;where(''type'', ''elf'')     -&gt;_or(''id'', 5)      -&gt;having(''count'', 5)     -&gt;_xor(''max'', 6); \r\n  \r\n  Поддержка вложенных $or для MongoDB\r\n  \r\n  Известный баг что MongoDB не будет использовать индексы если вы напишете слишком сложный запрос используя вложенные $or. PHPixie сама исправит это для вас превратив такие запросы в развернутую форму, которая уже будет использовать индексы. Все это работает из коробки.\r\n  \r\n  Особенные операторы для сравнения\r\n  Часто приходится сравнивать одну колонку с другой, проблема в том что если написать вот так:\r\n  $query     -&gt;where(''amount'',''&gt;'', ''minAmount''); \r\n  \r\n  то на самом деле значение колонки amount будет сравниваться со стрингом «minAmount», для того чтобы указать что значение есть названием колонки в базе надо просто приставить звездочку к оператору:\r\n  $query     -&gt;where(''amount'',''&gt;*'', ''minAmount''); \r\n  \r\n  Просто, понятно и лаконично.\r\n  \r\n  Если вам интересно...\r\n  Чтобы увидеть как это все работает в действии вот тут приведен пример кода который работает с MongoDB и MySQL а также показывает как это все настроить без самого фреймворка всего в несколько строк кода.     	   	', 'Уже можно использовать две новые библиотеки из будущей PHPixie 3 ', '2015-04-05 11:43:55', 'http://habrahabr.ru/post/216107/'),
(20, '       \r\n  Сегодня я написал последний тест для версии 3.0 модуля доступа к БД для PHPixie. Когда я начал казалось что это займет всего несколько недель, но на самом деле все растянулось на где-то 2 месяца из-за огромного количества рефакторинга и переписывания сначала. Зато теперь мы имеем расширяемую библиотеку, которую можно использовать даже вне самого фреймворка (то есть если вас заставят писать на каком-то другом фреймворке или CMS вы сможете захватить свою любимую библиотеку с собой).\r\n  \r\n  Я сделаю релиз после того как закончу модуль ORM и поправлю существующие модули для работы с новым API. Но если вам интересно вы можете заглянуть в ветку 3.0 на гитхабе (следует однако предупредить что документации там пока нет, она появится вместе с ORM). А теперь давайте посмотрим на новые возможности.\r\n  \r\n  С точки зрения среднестатистического пользователя\r\n  Я уже писал о продвинутой поддержке запросов с логическими условиями для MongoDB здесь, но если вам лень кликнуть по этой ссылке, то вот краткое объяснение: MongoDB не использует индексы при использовании запросов типа “(A or B) OR ( C and (D or E))”, так что PHPixie сама приведет запросы в такие формы которые будут их использовать.\r\n  \r\n  Стали доступны несколько подходов для построения запросов:\r\n  $query     -&gt;where(''name'', ''Trixie'')     -&gt;or_where(''name'', ''Tinkerbell'')     -&gt;where_not(''id'', ''&gt;'', 7)     -&gt;having(''count'',''&lt;'', 5)     -&gt;or_having(''count'', 7);   //Или попроще: $query     -&gt;where(''name'', ''Trixie'')     -&gt;_or(''name'', ''Tinkerbell'')     -&gt;_and_not(''id'', ''&gt;'', 7)     -&gt;having(''count'', ''&lt;'', 5)     -&gt;_or(''count'', 7); //Заметьте как метод _or запоминает контекст в котором используется //(то есть работает как для  ''where'' так и для ''having'') \r\n  \r\n  Несколько подходов к вложенной логике:\r\n  $query     -&gt;where(''name'',''Trixie'')     -&gt;_or(function($builder){         $builder             -&gt;_and(''id'',7)             -&gt;_or(''id'',5)     }); //WHERE name = ''Trixie'' OR ( id = 7 OR id = 5 )   //Или если вам не нравятся коллбеки  //(также удобно при динамическом формировании запроса, например с EXT JS гридом) $query-&gt;where(''name'',''Trixie''); $query     -&gt;start_where_group(''or'')         -&gt;_and(''id'',7)         -&gt;_or(''id'',5)     -&gt;end_where_group(); \r\n  \r\n  Специальные операторы для сравнения колонок:\r\n  $query-&gt;where(''fairies.id'',''*='',''pixies.id''); \r\n  \r\n  Возможность использования вставок SQL кода с отдельными параметрами:\r\n  $expr = $this-&gt;db-&gt;expr(''concat(name, ?)'', array(''test'')); $query-&gt;where($expr, ''Trixietest''); //WHERE concat(name, ?) = ''Trixietest''; \r\n  \r\n  Поиск строк по NULL значению, не зная наперед что это NULL:\r\n  $category_id = null; $query-&gt;where(''category_id'', $category_id); //даст WHERE category_id IS NULL //а не WHERE category_id = NULL \r\n  \r\n  Сложные условия для JOIN....ON используя уже знакомый синтакс:\r\n  $query-&gt;join(''pixies'');   //По умолчанию сравниваться будут колонки $query-&gt;on(''fairies.id'',''pixies.id'');   //Можем добавить  условий и посложнее $query-&gt;on(''fairies.count'',''*&gt;'',''pixies.count''); \r\n  \r\n  C точки зрения продвинутого разработчика\r\n  \r\n     Невероятно легкий, всего 57 килобайт кода   Строители запросов (query builders) не содержат никакой логики относящийся к их парсингу (например в SQL код). Вместо этого каждый драйвер использует свой Parser сервис, делая сами объекты запросов легкими и дешевыми с точки зрения памяти. Использование парсеров как сервисы делает дебаг и расширение их тривиальными задачами. К слову каждый парсер создастся в памяти только раз для всех запросов.   Каждый парсер разделен на парсеры отдельных условий и групп условий (Condition Group Parser). Такое разделение позволяет легко добавить свои кастомные операторы.   Связывание зависимостей вынесено в отдельные классы драйверов, то есть ни в одном случае (кроме как выбрасывания исключений) ни один класс не создает объекты сам используя команду new. Это позволяет легко заменить любой класс на свою имплементацию.   Запросы к MongoDB парсаються в специальные Runner объекты, которые легко поддаются дебагу на случай ошибки.   SQL базы данных которые работают через PDO имеют свои отдельные адаптеры и парсеры что позволяет легко добавить поддержку любой базы данных с которой работает PDO используя минимум кода.  \r\n  \r\n  Код полностью покрыт PHPUnit тестами, что дает 166 тестов и 1151 сравнение.\r\n  \r\n  Я надеюсь что этот пост передаст мою радость с проделанной работы и что финальный релиз ORM модуля уже недалеко.   	     ', 'Закончен новый модуль базы данных для PHPixie ', '2015-04-05 11:43:57', 'http://habrahabr.ru/post/205710/'),
(21, '     	Для тех кто еще не знаком с тестами веб фреймворков которые регулярно проводит Techempower очень рекомендую сделать это сейчас заглянув по ссылке www.techempower.com/benchmarks/\r\n  \r\n  Пока что для широкого доступа опубликованы только результаты 6-го раунда. С этого времени добавились несколько новых ферймворков к каждой из платформ и разработчики уже больше двух месяцев ждали следующего раунда, который вот-вот будет иметь место.\r\n  \r\n  Но пока Techempower предоставила лишь некое preview результатов 7-го раунда, дабы дать разработчикам возможность внести последние изменения или исправить баги. Если вам тоже интересно как покажет себя ваш фреймворк в 7-м раунде вы можете ознакомится с последними результатами тут www.techempower.com/benchmarks/previews/round7/\r\n  \r\n  P.S. Практически все PHP фреймворки возвращают ошибки, что свидетельствует о проблеме с инсталляцией PHP или MySQL на сервере. Надеемся что ее исправлят.     	   	', 'Стали доступны свежие результаты тестирования производительности фреймворков от Techempower ', '2015-04-05 11:43:58', 'http://habrahabr.ru/post/197970/'),
(22, '     	\r\n  Я уже много раз писал о фреймворке PHPixie и программировании на нем. В этот раз мы заглянем внутрь и посмотрим жизненный цикл приложения, к счастью простота и линейность кода позволяют сделать это с относительной легкостью.\r\n  \r\n  Как и например Symfony, PHPixie состоит из двух частей: библиотеки компонентов и базового проекта, правда в случае PHPixie базовый проект более тонкий и состоит всего из нескольких файлов. Он здесь исполняет роль примера и поэтому изменение его под себя не только приветствуется но в некоторых случаях даже необходимо. Именно для этого важно понимать что и как происходит в системе. Используя свои несколько ограниченные умения в области рисования я подготовил диаграмму обработки запроса\r\n  \r\n  \r\n  \r\n  \r\n  Конечно тем кто уже знаком с MVC (или даже VC в этом случае, так как модели я не нарисовал) наверняка эта схема уже покажется знакомой, но для новичков может быть очень полезна. Итак начнем c index.php куда и попадают все запросы, здесь самые важные строчки это:\r\n  $pixie = new \\App\\Pixie(); $pixie-&gt;bootstrap($root)-&gt;handle_http_request(); \r\n  \r\n  И сразу же мы попадаем на самую важную часть, класс App\\Pixie который является сердцем фреймворка, его DI контейнером. Через него можно получить доступ ко всем другим компонентам. App\\Pixie наследует от PHPixie\\Pixie из библиотеки PHPixie-Core. Базовый проект оглашает этот класс вместо использования PHPixie\\Pixie напрямую для предоставления разработчику возможности внести в него свои изменения ( например подключить модуль). \r\n  \r\n  Сразу стоит отметить что добавлять новые сущности в этот контейнер на ходу, как например в Silex, нельзя, все надо описывать явно в классе. Хотя это и может показаться не таким удобным на первый взгляд, но зато позволяет добиться лучшей читабельности кода, полностью продокументировать все сущности (так как все они становятся атрибутами класса) а также получить подсказки по этим сущностям в IDE. Поскольку PHPixie\\Pixie содержит также все фактори методы, то это позволят нам с легкостью заменить любой класс фреймворка на свой путем перегрузки соответствующего метода.\r\n  \r\n  Метод bootstrap() инициализирует $pixie, считывает конфигурацию, подключает обработку исключений итд. Как раз в handle_http_request() проходит обработка запроса. Этот процесс состоит из трех этапов:\r\n    Создание объекта $request класса PHPixie\\Request   Этот объект передается в соответствующий контроллер и выполняется соответствующий action  В процессе исполнения екшена контроллер изменяет объект $response ( PHPixie\\Response )  Данные из $response (хедеры и контент) отсылаются пользователю  \r\n  \r\n  Все три самых важных объекта $request, $response и $pixie доступны как атрибуты класса PHPixie\\Controller. Теперь отвлечемся немного на еще несколько парадигм написания кода на PHPixie:\r\n  \r\n  Не использовать оператор «new» нигде кроме фактори методов. Каждый новый класс должен иметь фактори метод (например в App\\Pixie) для создания его екземпляров. Такой подход позволяет легко заменить один класс другим, что особенно важно при написании юнит тестов. Так тестируя например контроллер вы теперь сможете передать в него замоканный App\\Pixie который вместо реальных классов передаст их моки.\r\n  \r\n  Не использовать статические проперти и методы. Использование статики сильно усложняет написание тестов. Используя PHPixie можно легко обойтись без них, достаточно добавить экземпляр как атрибут App\\Pixie и вы сможете получить к нему доступ практически из любого места. Таким образом мы фактически получим синглтон. Кстати сделать это можно еще путем добавления его в $instance_classes.\r\n  \r\n  namespace App; class Pixie extends \\PHPixie\\Pixie {     public function __construct() {            $this-&gt;instance_classes[''singleton''] = ''\\App\\Singleton'';     }	 }  // Теперь мы можем использовать $pixie-&gt;singleton в любом месте, // и всегда получить тот же объект. В качестве дополнительного бонуса // объект будет создан только тогда когда он будет нужен \r\n  \r\n  Как работают модули\r\n  Каждый модуль для PHPixie это дополнительная библиотека классов которая предоставляет свой DI контейнер очень похожий на главный PHPixe\\Pixie, то есть он состоит из методов фабрик для создания экземпляров классов который входят в модуль. Потом мы просто добавляем его в массив модулей в главный контейнер:\r\n  \r\n  namespace App; class Pixie extends \\PHPixie\\Pixie { 	protected $modules = array( 		''db'' =&gt; ''\\PHPixie\\DB'', 		''orm'' =&gt; ''\\PHPixie\\ORM'' 	); }  // Теперь мы можем использовать $pixie-&gt;db и $pixie-&gt;orm  \r\n  \r\n  А что делать если я например хочу подменить класс PHPixie\\ORM\\Model на свой App\\Model? Все просто, надо еще сделать свой App\\ORM (extends PHPixie\\ORM ) метод get() которого вместо модели PHPixie\\ORM\\Model будет возвращать ту что нужна нам. в этом еще больше проявляется одна из идей фреймворка — как можно больше использовать стандартные приемы ООП вместо каких-то магий. Например чтобы подменить класс самого фреймворка приходится применять subclass_prefix и делать єто на уровне конфигурации а не собственно программирования. Такой подход позволяет намного улучшыть понимание системы, так как по большей части в флове можно разобраться не зная ничего о фреймворке, просто посмотрев на сами классы.\r\n  \r\n  А как же хуки, ивенты и прочее?\r\n  Их нет и я так понимаю не будет. Такие вещи полностью из другой парадигмы так как делают код нелинейным, особенно это относится к ивентам, где всегда не до конца понятно который из листенеров запустится первым и что случится если он сам вызовет какой-то ивент. А также от их использования очень часто страдает читабельность бектрейсов, так как они вызываются самим фреймворком где-то там где сам программист кода точно не писал. Если нужно что-то сделать в каком-то месте гораздо проще перегрузить метод который как-раз это и делает и дописать к нему ту логику что нужно.\r\n  \r\n  В следующей статье я либо более подробно рассмотрю как PHPixie работает с базами данных, либо более расширенно расскажу в чем плюсы и минусы линейного против event driven программирования.     	   	', 'Как работает PHPixie — Жизнь одного запроса, контейнер и парадигма ', '2015-04-05 11:44:00', 'http://habrahabr.ru/post/194470/');
INSERT INTO `pages` (`id`, `content`, `title`, `datetime`, `url`) VALUES
(23, '     	\r\n  Одной из самых нужных вещей при написании юнит тестов является создание mock-ов и stub-ов для объектов которые используются тестируемым классом. Здесь стоит упомянуть о важном отличии: если «mock» является исходным объектом в котором замены одна или несколько методов, то «stub» это некий фейк который полностью заменяет исходный объект. в зависимости от сценария иногда намного легче создать стаб чем сделать подходящий mock. В этой статья я покажу как эффективно и быстро создавать стабы используя небольшой класс Sylph от создателей фреймворка PHPixie.\r\n  \r\n  \r\n  Иногда случаются случаи когда тестируемый метод использует глубокие проперти объекта например:\r\n  class Fairy{         public $name;        protected $home_tree;         public function __construct($name, $home_tree){              $this-&gt;name = $name;              $this-&gt;home_tree = $home_tree;                }               // фея дружит со всеми зайками которые живут в ее лесе        // и белками в ее дереве        public function get_friends(){             $friends = $this-&gt;home_tree-&gt;num_squirrels;             $friends += $this-&gt;home_tree-&gt;forest-&gt;num_animals(''bunny''));             return $friends;        } \r\n  \r\n  При написании теста для такого класса пришлось бы мокать классы Tree и Forest, связывать их друг с другом и передавать в конструктор. И все ради вызова одной функции.\r\n  \r\n  Sylph позволяет сделать это намного проще, используя простые ассоциированные массивы и анонимные функции. В нашем случае мы могли бы описать $home_tree как:\r\n  \r\n  $sylph = new \\PHPixie\\Sylph();  $home_tree = $sylph-&gt;cast(array(      ''num_squirrels'' =&gt; 5,      ''forest'' =&gt; $sylph-&gt;cast(array(                            ''num_animals'' =&gt; function($animal){                                 if($animal == ''bunny'')                                    return 4;                                  throw new \\Exception(''Animal not found'');                            }                      )) )); \r\n  \r\n  Такой подход имеет ряд преимуществ, в первую очередь намного лучшая читабельность и лаконичность.\r\n  Кстати использование анонимных функций позволяет делать довольно интересные операции, например менять параметры на лету:\r\n  \r\n   $num_bunnies = 5;  $bunnies = $sylph-&gt;cast(array(       ''add'' =&gt; function($new) use($num_bunnies){                 return $new + $num_bunnies;        } ));  $bunnies-&gt;add(1); // 6 $bunnies-&gt;add(2); // 7  $num_bunnies = 2;  $bunnies-&gt;add(1); // 3 $bunnies-&gt;add(2); // 4 \r\n  \r\n  Как всегда разработчики PHPixie стараются найти самое простое решение проблемы.     	   	', 'Sylph: Глубокие Stub-ы для тестов от создателей PHPixie, или как конвертировать массив в класс ', '2015-04-05 11:44:01', 'http://habrahabr.ru/post/189360/'),
(24, '     	\r\n  В проекте который мы сейчас разрабатываем много работы с фотографиями, в результате чего скорость графической библиотеки является фактически главным фактором при оптимизации сайта. Не секрет что ImageMagick давно стал стандартом разработки на PHP, хотя уже некоторое время его оттуда сталкивает форк под названием GraphicsMagick. Мне стало интересно насколько сильно они отличаются и сколько форы могут дать старому доброму GD. К счастью как раз недавно вышел графический модуль для PHPixie который поддерживает все три библиотеки, что и позволило мне провести достаточно интересные тесты.\r\n  \r\n  \r\n  В духе самого фреймворка экспериментировать будем на фее которая справа ( взята с девиантарта http://j-scott-campbell.deviantart.com/ ). Если кому-то покажется что в ней слишком много иннуендо, то посмею напомнить что уже больше 20 лет стандартным рисунком тестирования графических алгоритмов является Lenna из плейбоя.\r\n  \r\n  Сейчас следует короткое описание тестов и выходные рисунки. В конце статьи будет сам бенчмарк скорости работы одной таблицей.\r\n  \r\n  Простое масштабирование\r\n  Итак сначала попробуем уменьшить ее до 100 пикселей по ширине.\r\n  $pixie-&gt;image-&gt;read($dir.''fairy.jpg'') 			-&gt;resize(200) 			-&gt;save($dir.''resize.jpg''); \r\n  \r\n  \r\n  \r\n  Разницы особой на первый взгляд незаметно, но например ее глаз на GD версии не имеет того ярко выраженного зеленого цвета как у Imagick и Gmagick.\r\n  \r\n  Создание квадратной аватарки\r\n  Чтобы сделать автарку квадратной ее нужно сначала масштабировать по меньшей стороне а затем обрезать по большей. На PHPixie это делается довольно просто:\r\n  \r\n  $pixie-&gt;image-&gt;read($dir.''fairy.jpg'') 			-&gt;resize(200, 200, false) 			-&gt;crop(200, 200) 			-&gt;save($dir.''crop.jpg''); \r\n  \r\n  Очевидно что выглядеть они будут идентически предидущим.\r\n  \r\n  Написание текста и создание пустого изображения\r\n  Теперь попробуем создать белый рисунок и написать текст фиолетовым цветом используя TTF шрифт.\r\n  \r\n  $pixie-&gt;image-&gt;create(300, 70, 0xffffff, 1) 			-&gt;text(&quot;Hello World&quot;, 50, $dir.''/Sofia-Regular.ttf'', 10, 50, 0x5B43AA) 			-&gt;save($dir.''text.jpg''); \r\n  \r\n  \r\n  \r\n  Тут результаты немного подраматичней. GD почему-то сделала цвет текста темней и гораздо хуже сработал антиалиасинг, в результате чего края текста немного размыты. У обеих Magick-ов текст получился гораздо лучше.\r\n  \r\n  Разбиение текста на строки\r\n  Текст на строки разбивает сама PHPixie, но для этого она использует информацию о метрике текста от графической библиотеки. Так как приходится считать размер каждого слова это может быть довольно дорогим процессом. Итак попробуем поместить на пустую страницу кусочек песенки.\r\n   $text = &quot;When I closed my eyes to the shimmering light &quot;.            &quot;all memory faded and I could see &quot;.            &quot;that a mushroom circle of red and white &quot;.            &quot;and myriad fairies surrounded me. &quot;;  $pixie-&gt;image-&gt;create(300, 180, 0xffffff, 1) 			-&gt;text($text, 20, $dir.''/Sofia-Regular.ttf'', 10, 50, 0x5B43AA, 1, 300) 			-&gt;save($dir.''wrap.jpg''); \r\n  \r\n  \r\n  \r\n  На меньшем шрифте недостатки не так заметны но если присмотреться к изгибам то довольно легко можно отличить. Но надо заметить что Imagick потратил намного больше времени, прежде всего из за пересчитывания метрики шрифта на каждом слове (ведь приходится наново считывать шрифт с диска каждый раз) в то время как GD и Gmagick были намного быстрее.\r\n  \r\n  Наложение и оборачивание рисунков\r\n  Этот тест наиболее оторван от реальности, но хотелось побенчить скорость наложения рисунков и вообще операции посложнее. Итак мы создаем пустой рисунок, с одной стороны ставим автарку феи а с другой ту же аватарку только обернутую по горизонтали и вертикали да еще и развернутую боком.\r\n  \r\n   $canvas = $pixie-&gt;image-&gt;create(400, 200); 	$fairy = $pixie-&gt;image-&gt;read($dir.''fairy.jpg'') 				-&gt;resize(200, 200, false) 				-&gt;crop(200, 200); 	$canvas	-&gt;overlay($fairy, 0, 0) 			-&gt;overlay($fairy-&gt;flip(true, true)-&gt;rotate(90), 200, 0) 			-&gt;save($dir.''overlay.jpg''); \r\n  \r\n  \r\n  \r\n  Скорость работы\r\n  А вот и сам бенчмарк. По горизонтали слева-направо проведенные тесты, по вертикали среднее время исполнения ( каждый тест прогонялся 100 раз).\r\n  \r\n  \r\n  \r\n  Вывод, лучше всего таки использовать Gmagick, если его нет то Imagick. Над GD можно задуматься только в случае если надо будет писать много текста и то не очень замысловатым шрифтом.\r\n  \r\n  Кстати отдельно замечу насколько сильно мне понравился интерфейс самой PHPixie в этом плане, в особенности наличие функций для множества стандартных действий (тот же самый враппинг текста) для которых раньше приходилось качать отдельные классы.     	   	', 'Бенчмарк графических библиотек для PHP ', '2015-04-05 11:44:03', 'http://habrahabr.ru/post/188666/'),
(25, '     	\r\n  Сегодня разработчики PHPixie опубликовали пост благодарности всем кто решил попробовать писать на этом фреймворке. \r\n  \r\n  Также они объявили о старте небольшого конкурса туториалов. Для участия в нем нужно запостить на свой блог или на один из тематических сайтов (кстати включая Хабр) любой обучающий материал по PHPixie а ссылку на него написать в комментариях к посту. \r\n  Два победителя получат подарочный сертификат от Amazon на 50$. Разработчики обещают что если желающих будет много то количество призов увеличат. Приз конечно чисто символический но на несколько книг вполне хватит. \r\n  \r\n  В любом случае основной целью является сделать фреймворк более доступным для тех кто только начинает работать с ним или вообще программировать на PHP.     	   	', 'Разработчики PHPixie объявили о старте конкурса туториалов ', '2015-04-05 11:44:03', 'http://habrahabr.ru/post/186816/'),
(26, '     	Вчера на своем блоге EllisLab объявил о поисках нового владельца для своего фреймворка CodeIgniter (ссылка). Решение было принято исходя из ограниченности ресурсов и желании сконцентрироватся на других продуктах компании. Ни для кого не секрет что CI довольно медленно шел в ногу со временем и для того чтобы снова сделать из него современный фреймворк его надо было бы полностью переписать, чего EllisLab делать не собирается.\r\n  \r\n  Из комментариев к посту можно сделать вывод что большинство программистов не будут сидеть и ждать что-же случится с их фреймворком через месяц или год. Ясно, что если компания которая теперь возьмет CI под свое крыло не сумеет поддержать его хотя бы на том же уровне как это делал EllisLab то фреймворк попросту умрет. В любом случае я бы сейчас не начинал большой проект на CI.\r\n  \r\n  Итак какие альтернативы у тех кто работал с ним многие годы? \r\n  Первый вариант это конечно-же Кохана, — другой популярный фреймворк, который, хотя все-же медленнее чем хотелось бы, двигается в ногу со временем. Главной задачей которую сейчас нужно решить Кохане чтобы не пойти путем CI являются неймспейсы, которые уже стали стандартом разработки на PHP.\r\n  \r\n  Второй вариант, довольно свежий фреймворк о котором я уже немного писал, это PHPixie. Как и Кохана он очень схож с Игнайтером по ощущениям, но в отличии от нее намного современней. В PHPixie есть свой Dependency Injection, модули подгружаются с помощью Composer и реализован свой легкий ОРМ. \r\n  \r\n  Для тех кто разрабатывал на CodeIgniter и кто хотел бы теперь перейти на новый фремворк вот несколько отличных туториалов:\r\n  http://habrahabr.ru/post/111224/ — Знакомство с Кохана\r\n  http://habrahabr.ru/post/178899/ — Создаем видеобиблиотеку с PHPixie.\r\n  \r\n  Также интересно услышать ваши мысли по поводу будущего CodeIgniter, а также PHP в целом     	   	', 'EllisLab ищет нового владельца для CodeIgniter ', '2015-04-05 11:44:05', 'http://habrahabr.ru/post/186194/'),
(27, '     	\r\n  После моего предыдущего поста о выборе легкого Фреймворка я погуглил и увидел что для некоторых из них нет ни одного русскоязычного туториала. Так вот я решил написать серию постов дабы заполнить эту нишу. Я думаю стоит начать с тех на которых я в конце остановился, а так как для Silex написано уже достаточно много то этот пост будет посвящен PHPixie. \r\n  \r\n  Для тех кто не читал моего сравнения фреймворков, PHPixie — маленький и по моим меркам очень быстрый фреймворк с модульной структурой, хорошо реализованным DI, отсутствием статиков и простой архитектурой. \r\n  \r\n  \r\n  На официальном сайте все туториалы написаны на примере фей, я же попробую быть оригинальным и мы создадим библиотеку видео из Youtube. То есть мы сможем добавлять, удалять и просматривать видео. А еще по дороге научимся использовать API самого ютуба для получения мета информации и тамбнейлов.\r\n  \r\n  Создание проекта\r\n  PHPixie можно установить либо используя Composer, либо скачав снапшот готовой системы с сайта. Разницы почти нет, так как снапшот регулярно обновляется и являет собой базовой проект с проинсталлированными тремя библиотеками (core, db и orm). Для простоты будем использовать второй метод, ссылка на снапшот здесь phpixie.com/phpixie.zip. Сервер надо настроить на папку /web/ внутри проекта. Вот и все, теперь можем зайти на наш хост и увидеть маленькое приветствие.\r\n  \r\n  Объект $pixie\r\n  Объект $pixie — это имплементация DI Контейнера и Сервис Локатора, нечто похожее на $app в Silex. Он доступен как проперти контроллера и передается практически в каждый конструктор, $pixie также содержит фактори методы для каждого класса фреймворка. Грамотное использование его позволяет полностью избежать связывания классов а следовательно упростить тестирование. В отличии от Silex добавление методов и проперти в $pixie происходит только путем расширения класса. В базовом проекте уже присутстует класс App\\Pixie который наследует от PHPixie\\Pixie, как раз в него мы можем добавлять свой код чтобы иметь к нему доступ повсюду. Следует обратить внимание на то что это не синглтон и передавать его между классами приходится явно, такой подход был избран для избежания какого-либо глобального состояния в коде, аналогично фреймворк никогда не использует статические методы. Каждый модуль, например db или orm поставляет свой класс с фактори методами, эти классы прописываются в нашем App\\Pixie в $modules. Потом мы можем запрашивать их как проперти, например используя $pixie-&gt;db-&gt;query() и $pixie-&gt;orm-&gt;get(), что вносит дополнительную структурированность и позволяет избежать супа из методов. В нашем случае менять в App\\Pixie нам ничего не нужно.\r\n  \r\n  База данных\r\n  Мы будем использовать лишь одну простенькую табличку для хранение информации о видео, вот ее структура:\r\n  CREATE TABLE `videos` ( 	`id` INT(10) NOT NULL AUTO_INCREMENT, 	`video_id` VARCHAR(20) NOT NULL, 	`title` VARCHAR(255) NOT NULL, 	PRIMARY KEY (`id`) ); \r\n  \r\n  Теперь прописываем настройки соединения к базе в /assets/config/db.php, например:\r\n  return array( 	''default'' =&gt; array( 		''user''=&gt;''root'', 		''password'' =&gt; '''', 		''driver'' =&gt; ''PDO'', 		''connection''=&gt;''mysql:host=localhost;dbname=videos'' 	) ); \r\n  тут, думаю все достаточно тривиально.\r\n  \r\n  Модель\r\n  Любая MVC структура начинается с модели, в нашем случае она только одна, Video. Кто знаком с Kohana сразу почувствует себя дома, для создания модели достаточно просто расширить класс \\PHPixie\\ORM\\Model:\r\n  namespace App\\Model; class Video extends \\PHPixie\\ORM\\Model{} \r\n  Привязка к таблице по умолчанию происходит следуя из имени класса. В нашем случае так оно и есть и менять ничего не нужно. Доступ к модели можно получить используя $pixie. Самые яркие примеры кода:\r\n  //Создание и сохранение $video = $pixie-&gt;get(''video''); $video-&gt;title = ''Test''; $video-&gt;save();  //Поиск $video = $pixie-&gt;get(''video'')-&gt;where(''title'',''Test'')-&gt;find();  //Поиск всех $videos = $pixie-&gt;get(''video'')-&gt;find_all(); \r\n  \r\n  Базовая разметка\r\n  В базовом проекте который ми скачали есть в наличии подвид контролера, класс App\\Pixie. Его работа сводится к тому чтоб рендерить шаблон main.php доступный как проперти $view. Наши контроллеры просто передают разные данные в этот шаблон, включая $subview — имя подшаблона который надо вставить. Мне как раз очень понравилось то, что логика того как работают мастер-страницы и подшаблоны не прописана в самом фреймворке а выносится в сам проект, что позволяет переделать ее по своему усмотрению. Наш main.php будет выглядеть примерно так:\r\n  &lt;!DOCTYPE html&gt; &lt;html&gt; 	&lt;head&gt; 		&lt;link href=&quot;//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.0/css/bootstrap-combined.min.css&quot; rel=&quot;stylesheet&quot;/&gt; 	&lt;/head&gt; 	&lt;body&gt; 		&lt;div class=&quot;container&quot;&gt; 			&lt;div class=&quot;row&quot;&gt; 				&lt;div class=&quot;offset3 span6&quot;&gt; 					&lt;h2&gt;&lt;a href=&quot;/&quot;&gt;PHPixie Vids&lt;/a&gt;&lt;/h2&gt;  					&lt;!-- Форма добавления видео --&gt; 					&lt;form class=&quot;form-inline&quot; method=&quot;post&quot; action=&quot;/videos/add&quot;&gt; 						&lt;input type=&quot;text&quot; placeholder=&quot;Paste Link…&quot; name=&quot;url&quot;&gt; 						&lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;Add new&lt;/button&gt; 					&lt;/form&gt; 				&lt;/div&gt; 			&lt;/div&gt; 			&lt;div class=&quot;row&quot;&gt;  				&lt;!-- Подключаем подшаблон --&gt; 				&lt;?php include($subview.''.php''); ?&gt; 			&lt;/div&gt; 		&lt;/div&gt; 	&lt;/body&gt; &lt;/html&gt; \r\n  \r\n  Подшаблонов у нас всего два: list.php (для списка добавленных роликов) и view.php (для просмотра выбранного видео). Вот они:\r\n  &lt;!-- /assets/views/list.php --&gt; &lt;div class=&quot;offset3 span6&quot;&gt; 	&lt;ul class=&quot;thumbnails&quot;&gt; 		&lt;?php foreach($videos as $video):?&gt; 			&lt;li class=&quot;span3&quot;&gt; 				&lt;a class=&quot;thumbnail&quot; href=&quot;/videos/view/&lt;?php echo $video-&gt;id; ?&gt;&quot;&gt;  					&lt;!-- Вот как легко получить тамбнейл видео по айдишке --&gt; 					&lt;img src=&quot;http://img.youtube.com/vi/&lt;?php echo $video-&gt;video_id;?&gt;/0.jpg&quot;&gt; 					&lt;div class=&quot;caption&quot;&gt; 						&lt;h3&gt;&lt;?php echo $video-&gt;title;?&gt;&lt;/h3&gt; 					&lt;/div&gt; 				&lt;/a&gt; 			&lt;/li&gt; 		&lt;?php endforeach;?&gt; 	&lt;/ul&gt; &lt;/div&gt; \r\n  \r\n  &lt;div class=&quot;offset3 span6&quot;&gt;  	&lt;!-- А вот как вставить видео и включить автопроигрывание--&gt; 	&lt;iframe width=&quot;420&quot; height=&quot;345&quot; src=&quot;http://www.youtube.com/embed/&lt;?php echo $video-&gt;video_id; ?&gt;?rel=0&autoplay=1&quot;&gt;&lt;/iframe&gt; &lt;/div&gt; \r\n  \r\n  Роутинг\r\n  Я знаю что вы уже заждались самого кода, но перед тем как мы перейдем к контроллеру нам надо прописать его в /assets/config/routes.php. На самом деле в базовом проекте прописан только один роут и он выглядит как /контроллер/метод/id, что в принципе нас устраивает, но было б очень кстати по менять дефолтный контроллер из Hello на наш Videos. \r\n  return array( 	''default'' =&gt; array(''(/&lt;controller&gt;(/&lt;action&gt;(/&lt;id&gt;)))'', array( 					// Дефолтные значения 					''controller'' =&gt; ''Videos'', 					''action'' =&gt; ''index'' 					) 				), ); \r\n  \r\n  Контроллер\r\n  Поскольку нам нужны 3 страницы в контроллере должно быть 3 метода. Вот с чего мы начнем:\r\n  namespace App\\Controller;  class Videos extends \\App\\Page {  	public function action_index(){ 		$this-&gt;view-&gt;subview = ''list''; 		$this-&gt;view-&gt;videos  = $this-&gt;pixie-&gt;orm-&gt;get(''video'')-&gt;find_all(); 	} 	 	public function action_add(){ 		$this-&gt;redirect(''/''); 		//Об этом чуть позже 	} 	 	public function action_view(){ 		$this-&gt;view-&gt;subview = ''view'';  		//Берем id с URL: /video/view/3 		$id = $this-&gt;request-&gt;param(''id''); 		$this-&gt;view-&gt;video = $this-&gt;pixie-&gt;orm-&gt;get(''video'') 												-&gt;where(''id'', $id) 												-&gt;find(); 	} } \r\n  Задачи выбора всех и одного видео тривиальны.\r\n  Рассмотрим теперь добавление нового видео. Идентификатор видео в ссылке ютуба передается параметром ''v'', например www.youtube.com/watch?v=75nBenOWul0, мы можем достать его множеством способов, но наиболее аккуратным мне показался с использованием parse_url(), вот так:\r\n  parse_str(parse_url( $url, PHP_URL_QUERY ), $vars ); $video_id = $vars[''v''];  \r\n  Получить информацию о ролике, в нашем случае его имя, можно используя API по ссылке youtube.com/get_video_info?video_id=&lt;id видео&gt;. Используя эти знания мы теперь можем дописать недостающий action_add():\r\n  	public function action_add(){ 		if($url = $this-&gt;request-&gt;post(''url'')){ 			parse_str(parse_url( $url, PHP_URL_QUERY ), $vars ); 			$video_id = $vars[''v''];  			$response = file_get_contents(&quot;http://youtube.com/get_video_info?video_id=&quot;.$video_id); 			parse_str($response, $data); 			$video = $this-&gt;pixie-&gt;orm-&gt;get(''video''); 			$video-&gt;title = $data[''title'']; 			$video-&gt;video_id = $video_id; 			$video-&gt;save(); 		} 		$this-&gt;redirect(''/''); 	} \r\n  \r\n  И вуаля! Вот кстати скриншот результата:\r\n  \r\n  \r\n  Если вы ожидали более сложного контроллера или конфигурации то их нет, да и самого фреймворка почти не заметно, это и позволяет сконцентрироваться как раз на написании своего кода вместо изучения чужого. \r\n  Надеюсь пост вам понравился, а в другой раз мы будем учится писать на Lithium.     	   	', 'Создаем видеобиблиотеку с PHPixie ', '2015-04-05 11:44:06', 'http://habrahabr.ru/post/178899/'),
(28, ' 			\r\n  Для начала скажу что я очень большой любитель что-то попатчить и потвикать, даже если для этого нету особой необходимости. И вот недавно рассматривая статистику XCache на своем сервере я подумал что смог бы оптимизировать объем памяти который он тратит на опкеш (opcache) файлов различных фреймворков. Сделать это просто — переписать все используя только один, файлы которого были бы общими для всех сайтов, каких у меня порядка 20-ти, но в большинстве они довольно простенькие и особого труда их переписать мне бы не предоставило. И тут я начал поиск того самого фреймворка, который в идеале имел бы достаточно фич чтобы разработка была простой, и в тоже время был легким и быстрым. Вот те которые мне понравились и мои мысли о них.\r\n  \r\n  Phalcon\r\n  \r\n  Интересный в первую очередь тем что написан на С и компилируется как модуль для PHP. Судя по бенчмаркам работает намного быстрее других (где-то в 3 раза быстрее среднего) и при этом соблюдая достаточно привычную MVC структуру. Так же очень порадовало то, что Phalcon использует Dependency Injection и предоставляет свой DI контейнер, но вот судя по туторилам всё равно очень часто классы используются напрямую, при этом включая статические методы, чего лично я стараюсь избегать. К слову должен сказать что модуль скомпилировался и заработал с первого раза, без танцев с бубнами, что всегда приятно. Посмотрев немного глубже я начал видеть больше недостатков, во-первых не так уж много PHP программистов которые достаточно хорошо знают С чтобы помочь в его разработке, как следствие Phalcon будет развиватся медленнее его PHP собратьев. Во-вторых, в нем придумано много своих костылей, как например PHQL (Phalcon Query Language) на замену SQL и т.д. В итоге имеем достаточно смелый проект с неизвестным будущем.\r\n  \r\n  PHPixie\r\n  \r\n  О нем я услышал совсем недавно, его упомянул в своем твите Phil Sturgeon (разработчик PyroCMS и член PHP-FIG) и я сначала подумал что это попросту шутка. Серьёзно, я считаю что ни один PHP программист не сможет прослушать интро на главной странице до конца при этом не рассмеявшись. Философия PHPixie в том что фреймворк должен быть быстрым и легким как маленькая фея, этого разработчики пытаются достичь подходом известным питонистам как «Simple things should be simple, hard things should be possible». То есть компоненты PHPixie написаны так чтобы самым простым и быстрым способом справится с 90% рутинных задач при разработке сайтов, а оставшиеся 10% сложных более редких задач предполагается разработчик решит сам и незачем их включать в сам фреймворк. Должен сказать что в ни одном из моих сайтов не использовалось ничего такого чего не было бы в PHPixie, и даже Dependency Injection у них довольно хорош, хотя и склоняется в сторону Service Locator. В отличии от других реализаций DI контейнеров новые элементы добавляются в него посредством расширения класса, что менее гибко, но намного более прозрачно, при этом позволяет полностью избежать процедурного кода и получить распознавание класса элементов контейнера в IDE. Из минусов могу только отметить то, что воспринимать его серьёзно достаточно трудно, и вряд ли вы сможете убедить ваших сотрудников в офисе писать что-либо на фреймворке с феями и пони.\r\n  \r\n  Fat-Free\r\n  \r\n  Весь фреймворк одним файлом! Огромный плюс сразу на лицо: один файл с диска подгрузится быстрее чем множество, причём размер этого файла примерно 50 килобайт. Правда как оказалось в этом одном файле далеко не весь фреймворк, а только самая основная его часть, то есть если вам например понадобится доступ к базе данных то классы все равно придётся подргружать.Тем более тот же XCache и так кеширует PHP код, в таком случае выигрыш от такого подхода если и будет то очень небольшой. Вместе с фреймворком поставляется просто куча библиотек, что удобно если не использовать Composer и совсем не нужно если использовать. Также очень удивило то, что их ORM не поддерживает связей между таблицами, без каких его можно сразу выбросить в окно, так как это очень сильно сужает область его использования. Это фактически единственный из рассмотренных мною фреймворков, который меня действительно в себе разочаровал.\r\n  \r\n  Silex,Slim и микрофреймворки.\r\n  \r\n  Об этих двух известно и так достаточно много. Так как они оба не предоставляют полный стек для разработки тут все будет зависеть от того какие библиотеки вы к ним прикрутите и как это сделаете. Из этого исходит гибкость микрофреймворков, но с другой стороны труднее будет найти коммюнити и суппорт, так как у каждого программиста в итоге своя система. К тому же если фреймворк пишется весь одними людьми его намного проще освоить, так как философия кода похожа. А вот если у вас франкенштейн собранный из разных библиотек, в которых разный стиль и подход, то разобраться в этом будет сложнее. В конечном итоге попытки сделать из Silex полноценный фреймворк e у меня приводят к собранию некого подобия Symfony. Тут следует отметить что написания кода на Slim и Silex происходит интуитивно, быстро и безо всяких магий.\r\n  \r\n  Lithium\r\n  \r\n  Тут немного больше инноваций, например единое API для SQL и NoSQL баз данных, а также по словам разработчиков децентрализованная система фильтров. Фреймворк создан бывшим разработчиком CakePHP, и местами это очень даже заметно, как например при использовании моделей. Фильтры позволяют фактически перехватить вызов метода класса и на лету поменять его параметры и результат. Гибко, но в итоге можно получить макаронный код, наподобие того как работают плагины в Wordpress. Так же удивительно что столь инновационный фреймворк так упорно использует статические методы. Радует простая архитектура, то есть если создавать простенький сайт то количество кода который придестя написать не намного отличается от использования Silex. В принципе очень хорошо подходит для тех кто работал с CakePHP в прошлом, но хочет попробовать что-то новое.\r\n  \r\n  Так какой же я выбрал в итоге? В конце мой выбор стоял между Silex и PHPixie (да, я не устрашился фей) и в результате я все таки использовал их обеих. Большинство сайтов перевёл на Silex, а те которые писались на Kohana портировал на PHPixie, интерфейс которой чем-то к ней похож, особенно реализация ORM. Этим я смог уменьшить примерно в 6 раз количество памяти потребляемое XCache, ускорить генерацию страниц и даже успел немного порефакторить по дороге. В общем PHP — страна тысячи фреймоврков, так что думаю каждый сможет найти что-то по душе. 			     ', 'Как я выбирал легкий PHP фреймворк ', '2015-04-05 11:44:07', 'http://habrahabr.ru/post/178833/');

-- --------------------------------------------------------

--
-- Структура таблицы `tables`
--

CREATE TABLE IF NOT EXISTS `tables` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `value` varchar(255) NOT NULL,
  `full_value` varchar(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `full_value` (`full_value`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=3 ;

--
-- Дамп данных таблицы `tables`
--

INSERT INTO `tables` (`id`, `value`, `full_value`) VALUES
(1, 'test', 'tests'),
(2, 'page', 'pages');

-- --------------------------------------------------------

--
-- Структура таблицы `tests`
--

CREATE TABLE IF NOT EXISTS `tests` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `value` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=3 ;

--
-- Дамп данных таблицы `tests`
--

INSERT INTO `tests` (`id`, `value`) VALUES
(1, 'Привет, мир! привет, привет!'),
(2, 'Привет, Хабр, привет)');

-- --------------------------------------------------------

--
-- Структура таблицы `words`
--

CREATE TABLE IF NOT EXISTS `words` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `value` varchar(255) NOT NULL,
  `length` int(11) DEFAULT NULL,
  `weight` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `value` (`value`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=4690 ;

--
-- Дамп данных таблицы `words`
--

INSERT INTO `words` (`id`, `value`, `length`, `weight`) VALUES
(1, 'И', 1, 27),
(2, 'НЕ', 2, 23),
(3, 'В', 1, 28),
(4, 'ВЫ', 2, 16),
(5, 'С', 1, 27),
(6, 'Я', 1, 23),
(7, 'НА', 2, 28),
(8, 'ПРИЛОЖЕНИЕ', 10, 9),
(9, 'ЧТО', 3, 26),
(10, 'REQUEST', 7, 2),
(11, 'RETURN', 6, 7),
(12, 'ЭТО', 3, 27),
(13, 'ЛОКАЦИЯ', 7, 1),
(14, 'КАК', 3, 25),
(15, 'ЕСЛИ', 4, 24),
(16, 'А', 1, 24),
(17, 'ДЛЯ', 3, 26),
(18, 'ВОТ', 3, 19),
(19, 'ПРОЕКТ', 6, 13),
(20, 'ОНИ', 3, 20),
(21, 'НО', 2, 24),
(22, 'У', 1, 18),
(23, 'ТАК', 3, 19),
(24, 'НУЖНЫЙ', 6, 19),
(25, 'МЫ', 2, 20),
(26, 'RESULT', 6, 1),
(27, 'IF', 2, 5),
(28, 'ПО', 2, 23),
(29, 'ЕЩЕ', 3, 20),
(30, 'ВСЕ', 3, 25),
(31, 'ЖЕ', 2, 19),
(32, 'ДЕЛАТЬ', 6, 14),
(33, 'ТУТ', 3, 14),
(34, 'ЧТОБЫ', 5, 21),
(35, 'КОТОРЫЙ', 7, 26),
(36, 'ЭТОТ', 4, 19),
(37, 'КОД', 3, 14),
(38, 'МОЧЬ', 4, 20),
(39, 'МОЖЕТ', 5, 10),
(40, 'СТАТЬЯ', 6, 9),
(41, 'ОН', 2, 21),
(42, 'IOS', 3, 2),
(43, 'XCODE', 5, 1),
(44, 'ЕСТЬ', 4, 18),
(45, 'ДАННЫЙ', 6, 18),
(46, 'РАБОТАТЬ', 8, 17),
(47, 'ПРОБЛЕМА', 8, 15),
(48, 'NO', 2, 2),
(49, 'НАДО', 4, 14),
(50, 'СЕРВИС', 6, 5),
(51, 'ВРЕМЯ', 5, 12),
(52, 'НАШ', 3, 11),
(53, 'СОЕДИНЕНИЕ', 10, 3),
(54, 'МЕНЬ', 4, 9),
(55, 'ОДИН', 4, 23),
(56, 'ЕГО', 3, 20),
(57, 'URLSTRING', 9, 1),
(58, 'ТЕСТ', 4, 9),
(59, 'СИТУАЦИЯ', 8, 4),
(60, 'KASSOCIATEDOBJECTKEY', 20, 1),
(61, 'МОЖНО', 5, 22),
(62, 'СДЕЛАТЬ', 7, 21),
(63, 'ПЕРВЫЙ', 6, 18),
(64, 'СЕТЬ', 4, 5),
(65, 'ОТ', 2, 25),
(66, 'MYURLPROTOCOL', 13, 1),
(67, 'КАРТА', 5, 2),
(68, 'ПОДДЕРЖКА', 9, 7),
(69, 'NSMUTABLEARRAY', 14, 1),
(70, 'ТОТ', 3, 15),
(71, 'ДАЖЕ', 4, 10),
(72, 'ИЛИ', 3, 17),
(73, 'NSURLPROTOCOL', 13, 1),
(74, 'ТОЛЬКО', 6, 20),
(75, 'SELFCLIENT', 10, 1),
(76, 'БЫТЬ', 4, 26),
(77, 'ТО', 2, 23),
(78, 'РАССМОТРЕТЬ', 11, 7),
(79, 'К', 1, 25),
(80, 'URLPROTOCOLSELF', 15, 1),
(81, 'ПОВЕДЕНИЕ', 9, 2),
(82, 'ПОКА', 4, 10),
(83, 'СИМУЛИРОВАТЬ', 12, 1),
(84, 'ПОДВИД', 6, 2),
(85, 'ВЕЛОСИПЕД', 9, 1),
(86, 'ПОМОЩЬ', 6, 7),
(87, 'ТОЧКА', 5, 4),
(88, '3', 1, 12),
(89, 'РАБОЧИЙ', 7, 2),
(90, 'СВОЕ', 4, 15),
(91, '1', 1, 13),
(92, 'ЧАСТЬ', 5, 8),
(93, 'FAKEGPSUTILITY', 14, 1),
(94, 'ПРОТОКОЛ', 8, 1),
(95, 'ПОМОЧЬ', 6, 7),
(96, 'CUSTOMEPROTOCOLSARRAY', 21, 1),
(97, 'ОБЛЕГЧАТЬ', 9, 2),
(98, '0', 1, 6),
(99, 'БОЛЬШИЙ', 7, 14),
(100, 'BOOLCANINITWITHREQUESTNSURLREQUEST', 34, 1),
(101, 'ПРОСТО', 6, 17),
(102, 'ПЛОХОЙ', 6, 2),
(103, 'ВАРИАНТ', 7, 9),
(104, 'NSSTRING', 8, 1),
(105, 'ПРИ', 3, 22),
(106, 'ФАЙЛ', 4, 11),
(107, 'YES', 3, 1),
(108, 'RESPONSE', 8, 3),
(109, 'СЛОМАТЬ', 7, 1),
(110, 'ПОПАСТЬ', 7, 1),
(111, 'NSERROR', 7, 1),
(112, 'РУКА', 4, 5),
(113, 'НЕКОРРЕКТНЫЙ', 12, 2),
(114, 'НЕСКОЛЬКО', 9, 18),
(115, 'РАЗ', 3, 19),
(116, 'УЖЕ', 3, 17),
(117, 'ПОЛУЧИТЬ', 8, 15),
(118, 'ОТВЕТ', 5, 7),
(119, 'ТАКОЙ', 5, 20),
(120, 'ПРИГОДИТЬСЯ', 11, 2),
(121, 'СЕГОДНЯ', 7, 6),
(122, 'ИСКЛЮЧИТЕЛЬНО', 13, 1),
(123, 'STOP', 4, 1),
(124, 'НИЧЕГО', 6, 10),
(125, 'VOIDSTOPLOADING', 15, 1),
(126, 'YOU', 3, 2),
(127, 'CAN', 3, 1),
(128, 'ПОДМЕНЯТЬ', 9, 1),
(129, 'END', 3, 1),
(130, 'DEFINE', 6, 1),
(131, 'EDGE', 4, 1),
(132, 'ПОЛУЧИТЬСЯ', 10, 7),
(133, 'CLASS', 5, 6),
(134, 'ПРИЙТИСЬ', 8, 8),
(135, 'ДОПИЛИВАТЬ', 10, 1),
(136, 'ПОМЕНЯТЬ', 8, 3),
(137, 'РАДИ', 4, 2),
(138, 'STAGE_SERVER', 12, 1),
(139, 'ИНТЕРНЕТ', 8, 3),
(140, 'ПОТОМУ', 6, 4),
(141, 'ТЕСТИРОВАНИЕ', 12, 6),
(142, 'OBJC_ASSOCIATION_RETAIN_NONATOMIC', 33, 1),
(143, 'ВОЗВРАЩАТЬ', 10, 6),
(144, 'ИСПОЛЬЗОВАТЬ', 12, 19),
(145, 'САМ', 3, 10),
(146, 'ИХ', 2, 19),
(147, 'NSARRAY', 7, 1),
(148, 'PROTOCOLCLASSES', 15, 1),
(149, 'OBJC_SETASSOCIATEDOBJECTSELF', 28, 1),
(150, 'SELF', 4, 1),
(151, 'WKWEBVIEW', 9, 1),
(152, 'СЛУЧАЙ', 6, 20),
(153, '', 0, 28),
(154, 'ОНА', 3, 16),
(155, 'BOOLREQUESTISCACHEEQUIVALENTNSURLREQUEST', 40, 1),
(156, 'CANONICALREQUESTFORREQUESTNSURLREQUEST', 38, 1),
(157, 'NSURLREQUEST', 12, 1),
(158, 'A', 1, 5),
(159, 'TOREQUESTNSURLREQUEST', 21, 1),
(160, 'VOIDSTARTLOADING', 16, 1),
(161, 'СИМУЛЯЦИЯ', 9, 1),
(162, 'B', 1, 3),
(163, 'RANDGELOCATION', 14, 1),
(164, 'RANDGE', 6, 1),
(165, 'ОНО', 3, 4),
(166, 'ПЛОХО', 5, 5),
(167, 'WIFI', 4, 2),
(168, 'СЕБЯ', 4, 13),
(169, 'HTTP', 4, 2),
(170, 'URL', 3, 3),
(171, 'NSRANGE', 7, 1),
(172, 'ИДТИ', 4, 9),
(173, 'ABSOLUTESTRING', 14, 1),
(174, 'ПОЛУЧАТЬ', 8, 5),
(175, 'ЗАЧЕМ', 5, 4),
(176, 'ЗАПРОС', 6, 5),
(177, 'КЛИЕНТ', 6, 3),
(178, 'ДОБАВЛЯТЬСЯ', 11, 3),
(179, 'РАЗНЫЙ', 6, 9),
(180, 'ВСЕГДА', 6, 11),
(181, 'ПРОСТОЙ', 7, 15),
(182, 'ОЧЕНЬ', 5, 15),
(183, 'ХОТЕТЬСЯ', 8, 4),
(184, 'ДРУГОЙ', 6, 17),
(185, 'РАЗРАБОТЧИК', 11, 10),
(186, 'СИДЕТЬ', 6, 2),
(187, 'ПРЫЖОК', 6, 1),
(188, 'КОГДА', 5, 13),
(189, 'КТО', 3, 13),
(190, 'СКАЗАТЬ', 7, 7),
(191, 'ХОРОШИЙ', 7, 6),
(192, 'РАБОТА', 6, 17),
(193, '2', 1, 14),
(194, 'NSDATA', 6, 1),
(195, 'ЧЕРЕЗ', 5, 11),
(196, 'ГДЕ', 3, 11),
(197, 'ДЕТЬ', 4, 7),
(198, 'ПУТЬ', 4, 6),
(199, 'СВЯЗАТЬ', 7, 2),
(200, 'РЕАЛЬНО', 7, 2),
(201, 'ПОЭТОМУ', 7, 10),
(202, 'О', 1, 20),
(203, 'НАЧАТЬ', 6, 7),
(204, 'ПАРИЖ', 5, 1),
(205, 'МЕТОД', 5, 13),
(206, 'БАГ', 3, 5),
(207, 'ПОД', 3, 11),
(208, 'ЗАРЕГИСТРИРОВАТЬ', 16, 1),
(209, 'REGISTERCLASSMYURLPROTOCOL', 26, 1),
(210, 'BOOLAPPLICATIONUIAPPLICATION', 28, 1),
(211, 'WILLFINISHLAUNCHINGWITHOPTIONSNSDICTIONARY', 42, 1),
(212, 'LAUNCHOPTIONS', 13, 1),
(213, 'APPLICATION', 11, 1),
(214, 'КЛАСС', 5, 11),
(215, 'НАПРИМЕР', 8, 19),
(216, 'ТАК-', 4, 1),
(217, 'КОСТЫЛЬ', 7, 3),
(218, 'ПОЛЬЗОВАТЕЛЬ', 12, 8),
(219, 'DEFINEDSTAGE_SERVER', 19, 1),
(220, 'СЕБЕ', 4, 5),
(221, 'СОДЕРЖИМЫЙ', 10, 3),
(222, 'ПОКАЗЫВАТЬ', 10, 4),
(223, 'ЗАВИСИМОСТЬ', 11, 5),
(224, 'ENDIF', 5, 1),
(225, 'ДАТЬ', 4, 8),
(226, 'ЛОКАЛЬНЫЙ', 9, 1),
(227, 'ВСЕ-ТАКИ', 8, 1),
(228, 'ИЗВНЕ', 5, 1),
(229, 'ВТЫКАТЬ', 7, 1),
(230, 'СОБСТВЕННО', 10, 3),
(231, 'ПОТОМ', 5, 7),
(232, 'ПРОТОКОЛIMPLEMENTATION', 22, 1),
(233, 'СПАСАТЬ', 7, 2),
(234, 'КОМПЬЮТЕР', 9, 5),
(235, 'КОДSTATIC', 9, 1),
(236, 'ГЕРОЙ', 5, 2),
(237, 'ПОДОБИЮШУТКА', 12, 1),
(238, 'CHAR', 4, 1),
(239, 'ТЕСНО', 5, 1),
(240, 'OBJC_GETASSOCIATEDOBJECTSELF', 28, 1),
(241, 'ПОВТОРЯТЬСЯ', 11, 1),
(242, 'ЗАКЛЮЧЕНИЕ', 10, 2),
(243, 'СЕГОДНЯШНИЙ', 11, 1),
(244, 'ОБРАЗ', 5, 8),
(245, 'ВЕЗДЕ', 5, 2),
(246, 'ЛОГИК', 5, 5),
(247, 'СЛОЖНЫЙ', 7, 9),
(248, 'ВОСПРОИЗВЕДЕНИЕ', 15, 1),
(249, 'ИСПОЛЬЗОВАТЬСЯ', 14, 9),
(250, 'СИЛЬНО', 6, 9),
(251, 'ВИНОВАТЫЙ', 9, 1),
(252, 'УПРОСТИТЬ', 9, 2),
(253, 'СМЕШНОЙ', 7, 1),
(254, 'NIL', 3, 1),
(255, 'BACGKOUND', 9, 1),
(256, 'ВЫКЛЮЧИТЬ', 9, 1),
(257, 'БУДТО', 5, 1),
(258, 'ДОМОЙ', 5, 1),
(259, 'SESSION', 7, 1),
(260, 'ПРУФ', 4, 1),
(261, 'УХОДИТЬ', 7, 1),
(262, 'СРАБОТАТЬ', 9, 3),
(263, 'ARRAYWITHOBJECTMYURLPROTOCOL', 28, 1),
(264, 'ADDOBJECTSFROMARRAYPROTOCOLCLASSES', 34, 1),
(265, 'VOIDSETPROTOCOLCLASSESNSARRAY', 29, 1),
(266, 'ДО', 2, 15),
(267, 'БОЛЬ', 4, 1),
(268, 'SERVER', 6, 1),
(269, 'PROTOCOLCLASSESCOUNT', 20, 1),
(270, 'СОВМЕСТИТЕЛЬСТВО', 16, 1),
(271, 'GT', 2, 11),
(272, 'DEVELOPER', 9, 1),
(273, 'UIWEBVIEWТУТ', 12, 1),
(274, 'СОЗДАВАТЬ', 9, 19),
(275, 'СООБЩАТЬ', 8, 1),
(276, 'RESPONSEН', 9, 1),
(277, 'СПЕЦИФИЧЕСКИЙУСТАРЕВШИЙ', 23, 1),
(278, 'ВЫГЛЯДЕТЬ', 9, 9),
(279, 'ВЧЕРА', 5, 3),
(280, 'ЛИШЬ', 4, 6),
(281, 'ВОСПРОИЗВЕСТИ', 13, 1),
(282, 'БЫЛО', 4, 12),
(283, 'ЧЕТВЕРТЫЙ', 9, 1),
(284, 'ПРОСИМУЛИРОВАТЬ', 15, 1),
(285, 'DIDFAILWITHERRORERROR', 21, 1),
(286, 'PATHFORRESOURCEQUOTUNEXISTD_RESPONSEQUOT', 40, 1),
(287, 'OFTYPEQUOTJSONQUOT', 18, 1),
(288, 'MAINBUNDLE', 10, 1),
(289, 'NSBUNDLE', 8, 1),
(290, 'MYURLPROTOCOLIMPLEMENTATION', 27, 1),
(291, 'RANGEOFSTRINGQUOTHTTPLOCALHOST1984OLDRESPONSEQUOT', 49, 1),
(292, 'PATH', 4, 2),
(293, 'СПЕШИТЬ', 7, 1),
(294, 'СНОВА', 5, 2),
(295, 'ПОВТОРИТЬСЯ', 11, 1),
(296, 'ЖАНР', 4, 1),
(297, 'ЗАКОН', 5, 1),
(298, 'РЕЛИЗ', 5, 2),
(299, 'ПОВЛИЯТЬ', 8, 1),
(300, 'SERVER-SIDE', 11, 1),
(301, 'TEAM', 4, 1),
(302, 'ЦЕЛЫЙ', 5, 4),
(303, 'РЯД', 3, 3),
(304, 'НЕПРАВИЛЬНО', 11, 1),
(305, 'ОТПУСК', 6, 1),
(306, 'ВЫХОДИТЬ', 8, 1),
(307, 'ПОЛУЧАТЬСЯ', 10, 5),
(308, 'ЗНАТЬ', 5, 11),
(309, 'ГОРОД', 5, 1),
(310, 'ТЕПЕРЬ', 6, 17),
(311, 'ПРИЧИНА', 7, 4),
(312, 'ДРУГ', 4, 6),
(313, 'DATA', 4, 2),
(314, 'ITQUOT', 6, 1),
(315, 'ОТЛИЧНЫЙ', 8, 2),
(316, 'RANGEOFSTRINGQUOTHTTPYANDEXRUQUOT', 33, 1),
(317, 'СКЛАДЫВАТЬ', 10, 1),
(318, 'НЕБОЛЬШОЙ', 9, 6),
(319, 'ПОДНЯТЬ', 7, 1),
(320, 'ЗАПРЕЩАТЬ', 9, 2),
(321, 'РЕДИРЕКТ', 8, 1),
(322, 'МАШИН', 5, 1),
(323, 'СТРАННЫЙ', 8, 3),
(324, 'ЛИЧНО', 5, 4),
(325, 'ПЛАН', 4, 3),
(326, 'ТЗ', 2, 1),
(327, 'НЕТ', 3, 13),
(328, 'ЗАЧАСТУЮ', 8, 5),
(329, 'НАД', 3, 5),
(330, 'ЧАСТО', 5, 8),
(331, 'БОЛЕЕ', 5, 14),
(332, 'ПОРА', 4, 4),
(333, 'НИКТО', 5, 3),
(334, 'UNEXISTD_RESPONSEJSON', 21, 1),
(335, 'DATAWITHCONTENTSOFFILEPATH', 26, 1),
(336, 'ERRORWITHDOMAINQUOTMYERRORDOMAINQUOT', 36, 1),
(337, 'ERROR', 5, 2),
(338, 'CODE42', 6, 1),
(339, 'USERINFO', 8, 1),
(340, 'FAIL', 4, 1),
(341, 'QUOTWE', 6, 1),
(342, 'NSLOCALIZEDDESCRIPTIONKEY', 25, 1),
(343, 'DIDLOADDATADATA', 15, 1),
(344, 'DISPATCH_GET_MAIN_QUEUE', 23, 1),
(345, 'СИСТЕМА', 7, 10),
(346, 'DISPATCH_AFTERDISPATCH_TIMEDISPATCH_TIME_NOW', 44, 1),
(347, 'ЧИТАЕМЫЙ', 8, 1),
(348, 'ФАЙЛОВЫЙ', 8, 2),
(349, 'INT64_T2', 8, 1),
(350, 'NSEC_PER_SEC', 12, 1),
(351, 'DIDFAILWITHERRORNIL', 19, 1),
(352, 'ПИСАТЬ', 6, 12),
(353, 'МУЧИТЬ-ТО', 9, 1),
(354, 'МЕЖДУ', 5, 6),
(355, 'ТЕСТИРОВЩИК', 11, 1),
(356, 'НАСТРОИТЬ', 9, 4),
(357, 'НЕЛЬЗЯ', 6, 5),
(358, 'ПРИСОЕДИНИТЬ', 12, 1),
(359, 'МАКОВЫЙ', 7, 1),
(360, 'КОМПАНИЯ', 8, 4),
(361, 'ПОДКЛЮЧИТЬ', 10, 4),
(362, 'MAC', 3, 2),
(363, 'КУПИТЬ', 6, 1),
(364, 'ВЕСЬ', 4, 20),
(365, 'ПАМЯТЬ', 6, 6),
(366, 'ИЗМЕНЯТЬ', 8, 2),
(367, 'ПОСТАВИТЬ', 9, 6),
(368, 'НЕЧЕГО', 6, 1),
(369, 'СИМУЛЯТОР', 9, 1),
(370, 'ПОДМЕН', 6, 1),
(371, 'SIMULATORDEBUGLOCATION', 22, 1),
(372, 'МАЛО', 4, 3),
(373, 'ПЕРЕМЕЩАТЬ', 10, 1),
(374, 'ЗНАЧОК', 6, 1),
(375, 'ПРАВЫЙ', 6, 1),
(376, 'PGX', 3, 1),
(377, 'ЗАДЕРЖКА', 8, 1),
(378, 'ЧЕМ', 3, 14),
(379, 'СУДИТЬ', 6, 1),
(380, 'СТРОГО', 6, 1),
(381, 'НАВИГАЦИЯ', 9, 2),
(382, 'ПОДМЕНА', 7, 1),
(383, 'СЫГРАТЬ', 7, 1),
(384, 'ВАЖНЫЙ', 6, 4),
(385, 'НАПРАВЛЕНИЕ', 11, 1),
(386, 'ПОКАЗАТЬ', 8, 5),
(387, 'ГОЛОСЛОВНЫЙ', 11, 1),
(388, 'РОЛЯ', 4, 3),
(389, 'РЕШИТЬ', 6, 11),
(390, 'ОДНАКО', 6, 7),
(391, 'RUNTIME', 7, 2),
(392, 'ВОЛШЕБНЫЙ', 9, 1),
(393, 'ПРИХОДИТЬ', 9, 2),
(394, 'НЕОЖИДАННО', 10, 1),
(395, 'МНОГО', 5, 12),
(396, 'НАПИСАТЬ', 8, 14),
(397, 'ПОНЯТНО', 7, 5),
(398, 'СОВСЕМ', 6, 8),
(399, 'БЫВАТЬ', 6, 3),
(400, 'ПРИМЕР', 6, 12),
(401, 'КАЖДЫЙ', 6, 16),
(402, 'КА', 2, 2),
(403, 'ТРУДНО', 6, 3),
(404, 'ВОСПРОИЗВОДИТЬ', 14, 2),
(405, 'ОПЫТ', 4, 1),
(406, 'ПОДЕЛИТЬСЯ', 10, 2),
(407, 'ЛОГ', 3, 1),
(408, 'РАССКАЗАТЬ', 10, 3),
(409, 'ПОСТУПИТЬ', 9, 2),
(410, 'КАТ', 3, 2),
(411, 'ПРОСИТЬ', 7, 2),
(412, 'ТЕМА', 4, 3),
(413, 'ИНТЕРЕСОВАТЬ', 12, 1),
(414, 'ПАДЕНИЕ', 7, 1),
(415, 'ОТРЫВАТЬСЯ', 10, 1),
(416, 'ТОМ', 3, 15),
(417, 'ПОСВЯТИТЬ', 9, 3),
(418, 'ХАБРОЖИТЕЛЬ', 11, 1),
(419, 'ДОБРЫЙ', 6, 3),
(420, 'СПРАВЛЯТЬСЯ', 11, 2),
(421, 'ПРОЙТИ', 6, 1),
(422, 'НАДЕЯТЬСЯ', 9, 7),
(423, 'ЧЕЛОВЕК', 7, 6),
(424, 'ПИСАТЬСЯ', 8, 3),
(425, 'ВЕРСИЯ', 6, 10),
(426, 'ВНИМАТЕЛЬНЫЙ', 12, 1),
(427, 'ЧИТАТЕЛЬ', 8, 1),
(428, 'МНОГИЙ', 6, 5),
(429, 'ОТОБРАЖАЮТСЯБЫВАТЬ', 18, 1),
(430, 'ЛОКАЦИИВОТ', 10, 1),
(431, 'УСЛОВИЕ', 7, 3),
(432, 'ЗАВЯЗАТЬ', 8, 1),
(433, 'ОТЛИЧНО', 7, 1),
(434, 'СИБИРЬ', 6, 1),
(435, 'ХОРОШО', 6, 8),
(436, 'НУ', 2, 4),
(437, 'ОТОБРАЖАТЬСЯ', 12, 1),
(438, 'НЕВЕРОЯТНЫЙ', 11, 1),
(439, 'ВТОРА', 5, 4),
(440, 'АУТСОРСЕН', 9, 1),
(441, 'ПРОРАБОТАТЬ', 11, 2),
(442, 'ДОЛГИЙ', 6, 1),
(443, 'ДОГАДАТЬСЯ', 10, 1),
(444, 'СТАВИТЬ', 7, 4),
(445, 'КРЕСТ', 5, 1),
(446, 'ДАЛЕКО', 6, 2),
(447, 'ЗАКАЗЧИК', 8, 1),
(448, 'ОПИСЫВАТЬ', 9, 4),
(449, 'МОЙ', 3, 8),
(450, 'СВОЙ', 4, 18),
(451, 'ЦЕЛЬ', 4, 4),
(452, 'КАКОЙ-ТО', 8, 9),
(453, 'ОПРЕДЕЛЕННЫЙ', 12, 3),
(454, 'МЕДЛЕННЫЙ', 9, 4),
(455, 'БЫСТРОДЕЙСТВИЕ', 14, 1),
(456, 'ЗРЕНИЕ', 6, 3),
(457, 'КЛИЕНТАТЕСТИРОВЩИК', 18, 1),
(458, 'ТОГДА', 5, 9),
(459, 'ВНУТРИ', 6, 3),
(460, 'ЧТО-ТО', 6, 5),
(461, 'ПРОТИВ', 6, 3),
(462, 'ДЗЫНЬ-ДЗЫНЯ', 11, 1),
(463, 'РЕЗКО', 5, 1),
(464, 'ПОСЛЕ', 5, 10),
(465, 'УСТРОЙСТВО', 10, 6),
(466, 'ИНТЕРЕС', 7, 1),
(467, 'БОГ', 3, 2),
(468, 'ДАЯ', 3, 2),
(469, 'SETTINGSDEVELOPERNETWORK', 24, 1),
(470, 'LINK', 4, 1),
(471, 'ХОТЕТЬ', 6, 7),
(472, 'НАСКОЛЬКО', 9, 3),
(473, 'ВЫБИРАТЬ', 8, 3),
(474, 'CONDITIONERENABLE', 17, 1),
(475, 'КЛАССОВЫЙ', 9, 4),
(476, 'БАГОВОСПРОИЗВЕДЕНИЕ', 19, 1),
(477, 'МАССИВ', 6, 7),
(478, 'PROTOCOLCLASSESИ', 16, 1),
(479, 'ПЕРЕОПРЕДЕЛИТЬ', 14, 2),
(480, 'NSURLSESSIONCONFIGURATION', 25, 1),
(481, 'ВАШ', 3, 10),
(482, 'ИНОЙ', 4, 3),
(483, 'ХИДЕР', 5, 1),
(484, 'ТАЩИТЬ', 6, 1),
(485, 'ТОЖЕ', 4, 7),
(486, 'ДОБАВИТЬ', 8, 13),
(487, 'ВО', 2, 7),
(488, 'NSURLSESSIONTASKЧТОБЫ', 21, 1),
(489, 'ВЕРОЯТНЫЙ', 9, 2),
(490, 'НАИБОЛЕЕ', 8, 5),
(491, 'NSURPROTOCOL', 12, 1),
(492, 'ВОКРУГ', 6, 3),
(493, 'МЕСТО', 5, 8),
(494, 'ПОНАДОБИТЬСЯ', 12, 4),
(495, 'ПОРТИТЬ', 7, 1),
(496, 'ПОСОВЕТОВАТЬ', 12, 1),
(497, 'UIWEBVIEW', 9, 1),
(498, 'NSURLSESSIONTASK', 16, 1),
(499, '3G', 2, 1),
(500, 'ВЕСТИ', 5, 3),
(501, 'БАГТЕСТИРОВАТЬ', 14, 1),
(502, 'УДАЛЯТЬ', 7, 6),
(503, 'ФИКСАТЬ', 7, 2),
(504, 'ПРЕЖНИЙ', 7, 2),
(505, 'ОСТАВАТЬСЯ', 10, 5),
(506, 'ВЫСТАВЛЯТЬ', 10, 1),
(507, 'ВУАЛИТЬ', 7, 2),
(508, 'RELEASE', 7, 1),
(509, 'НИКОГДА', 7, 4),
(510, 'ТУЛЗА', 5, 1),
(511, 'ПОЛЕЗНЫЙ', 8, 4),
(512, 'ПРИСОЕДИНЯТЬ', 12, 1),
(513, 'ЗАПУСК', 6, 3),
(514, 'УГОДНЫЙ', 7, 2),
(515, 'ФИКСИРОВАТЬ', 11, 1),
(516, 'МЕЖА', 4, 1),
(517, 'ВЫПОЛНЯТЬ', 9, 2),
(518, 'ГЛАВНОЕ', 7, 2),
(519, 'КТО-ТО', 6, 7),
(520, 'МОМЕНТ', 6, 6),
(521, 'ПОДМЕНЯТЬСЯ', 11, 1),
(522, 'МЕНЯТЬ', 6, 5),
(523, 'ВТОРИЧНЫЙ', 9, 1),
(524, '8', 1, 3),
(525, 'РЕАЛЬНЫЙ', 8, 5),
(526, 'ПРОЯВИТЬСЯ', 10, 1),
(527, 'ТЕСТИРОВАТЬ', 11, 6),
(528, 'ИМЕННО', 6, 7),
(529, 'ТРЕТИЙ', 6, 5),
(530, 'ИЗ-ЗА', 5, 3),
(531, 'ВООБЩЕ', 6, 5),
(532, 'ПОНЯТЬ', 6, 2),
(533, 'LOCALHOST', 9, 2),
(534, 'ПОСМОТРЕТЬ', 10, 11),
(535, 'ПОЛЕЗНО', 7, 3),
(536, 'ВЕСТИСЬ', 7, 3),
(537, 'НАТИВНЫЙ', 8, 1),
(538, 'ТУЛЗТИ', 6, 1),
(539, 'ДОПИЛИТЬ', 8, 1),
(540, 'ДОЙТИ', 5, 1),
(541, 'ДЕВАЙС', 6, 2),
(542, 'КРАСНАЯ', 7, 1),
(543, 'БУЛАВКА', 7, 1),
(544, 'ОСТАЛЬНОЙ', 9, 6),
(545, 'NSLOCATIONMANAGER', 17, 1),
(546, 'ДЕЛЕГАТ', 7, 1),
(547, 'ПРИЛЕТАТЬ', 9, 1),
(548, 'NSCLASSFROMSTRING', 17, 1),
(549, 'ИНДИКАТОР', 9, 2),
(550, 'МОДУЛЬ', 6, 13),
(551, 'ИНДИКАЦИЯ', 9, 2),
(552, 'РЕГИСТР', 7, 2),
(553, 'ДЕШИФРАТОР', 10, 1),
(554, 'ВХОД', 4, 2),
(555, 'КАТОД', 5, 1),
(556, 'ИН', 2, 1),
(557, 'НОЖКА', 5, 2),
(558, 'НАПРЯЖЕНИЕ', 10, 3),
(559, '16', 2, 1),
(560, 'RASPBERRY', 9, 1),
(561, 'ЦИФРА', 5, 2),
(562, 'ПЛАТ', 4, 2),
(563, 'ДВА', 3, 14),
(564, 'PI', 2, 1),
(565, '4', 1, 9),
(566, 'БИТЫЙ', 5, 3),
(567, 'ВЫХОД', 5, 3),
(568, 'ИН-12', 5, 1),
(569, 'ПОСЛЕДНИЙ', 9, 6),
(570, 'СДВИГОВЫЙ', 9, 1),
(571, 'ТАКТОВЫЙ', 8, 1),
(572, 'ПАКЕТ', 5, 3),
(573, 'НАХОДИТЬСЯ', 10, 3),
(574, 'ГОТОВЫЙ', 7, 4),
(575, 'ИДЕЯ', 4, 5),
(576, 'ПРОШЛЫЙ', 7, 4),
(577, 'ИМПУЛЬС', 7, 1),
(578, 'ПРОИСХОДИТЬ', 11, 10),
(579, 'ВОЛЬТА', 6, 1),
(580, 'ВЫСОКИЙ', 7, 1),
(581, 'СЕРИЯ', 5, 3),
(582, 'УПРАВЛЯЮЩИЙ', 11, 1),
(583, 'ИД1', 3, 1),
(584, 'ПИНОВ', 5, 1),
(585, 'АНОД', 4, 1),
(586, 'ФОРМА', 5, 4),
(587, 'РАЗРЯД', 6, 1),
(588, 'МИКРОСХЕМА', 10, 1),
(589, 'МЫТЬ', 4, 6),
(590, 'ВРЕМЕНИТЬ', 9, 9),
(591, 'ПРЕОБРАЗОВАТЕЛЬ', 15, 1),
(592, 'ИЗ', 2, 23),
(593, 'ВТОРОЙ', 6, 5),
(594, 'БЛОК', 4, 5),
(595, 'КОМПОНЕНТ', 9, 5),
(596, 'GPIO', 4, 1),
(597, 'ГИТХАБ', 6, 2),
(598, 'ЧИПТЮНОВЫЙ', 10, 1),
(599, 'AY-3-8912', 9, 1),
(600, 'ТРАНСФОРМАТОР', 13, 1),
(601, 'СУЩЕСТВОВАНИЕ', 13, 1),
(602, 'МАТЕРИАЛ', 8, 2),
(603, 'ИНК', 3, 1),
(604, 'ВПОЛНЕ', 6, 7),
(605, 'ИТЕРАЦИЯ', 8, 2),
(606, 'МАЛИНКА', 7, 1),
(607, 'МИНИМАЛЬНЫЙ', 11, 2),
(608, 'ИМЕТЬ', 5, 18),
(609, 'СЛИШКОМ', 7, 3),
(610, 'ИМЕТЬСЯ', 7, 3),
(611, 'ХВАТИТЬ', 7, 3),
(612, 'КОЛИЧЕСТВО', 10, 7),
(613, 'ЛИ', 2, 6),
(614, 'ОТПРАВЛЯТЬСЯ', 12, 2),
(615, 'ОТОБРАЖЕНИЕ', 11, 3),
(616, 'СЕКУНДА', 7, 3),
(617, 'ЧЕТЫРЕ', 6, 3),
(618, 'ОТРАЖАТЬ', 8, 1),
(619, 'ЗАХОТЕТЬСЯ', 10, 1),
(620, 'ВОСЕМЬ', 6, 1),
(621, 'УЖ', 2, 3),
(622, 'ГОВОРИТЬ', 8, 5),
(623, 'БИТОВ', 5, 1),
(624, 'СЛЕДУЮЩИЙ', 9, 9),
(625, 'ФРОНТ', 5, 1),
(626, 'ЖИРНО', 5, 1),
(627, 'МАЛЕНЬКАЯ', 9, 3),
(628, 'ПЛАТОК', 6, 1),
(629, 'ПАРАЛЛЕЛЬНЫЙ', 12, 1),
(630, 'ВОСЬМИРАЗРЯДНЫЙ', 15, 1),
(631, 'ОБЪЕДИНЯТЬСЯ', 12, 1),
(632, 'РАСПОЛАГАТЬСЯ', 13, 2),
(633, 'ЭТАЖ', 4, 1),
(634, 'ИНТЕРФЕЙС', 9, 7),
(635, 'ПОСЛЕДОВАТЕЛЬНЫЙ', 16, 1),
(636, 'ОТДАВАТЬ', 8, 3),
(637, 'РАЗВОДИТЬ', 9, 1),
(638, 'ЧАСЫ', 4, 4),
(639, '155ИР8', 6, 1),
(640, 'ОДНОВРЕМЕННЫЙ', 13, 2),
(641, 'СДВИГ', 5, 1),
(642, 'ИНФОРМАЦИОННЫЙ', 14, 2),
(643, 'ATTINY', 6, 2),
(644, 'DS1307', 6, 1),
(645, 'CLK', 3, 1),
(646, 'ВОСЬМИНОГИЙ', 11, 1),
(647, 'ЗАПИСЬ', 6, 5),
(648, 'ПРИЧЕМ', 6, 2),
(649, 'ПРОКРУТКА', 9, 1),
(650, 'РАНДОМНА', 8, 1),
(651, 'ЭФФЕКТ', 6, 1),
(652, 'ВЫВОД', 5, 5),
(653, 'ПЕРИОДИЧЕСКИЙ', 13, 2),
(654, 'ТН', 2, 1),
(655, 'ИЗБЕЖАНИЕ', 9, 3),
(656, 'ЗАЖИГАТЬ', 8, 1),
(657, 'РЕАЛИЗОВАТЬ', 11, 6),
(658, 'ПУБЛИКАЦИЯ', 10, 1),
(659, 'СХЕМА', 5, 5),
(660, '6', 1, 7),
(661, 'LAYOUT', 6, 1),
(662, 'SPRINT', 6, 1),
(663, 'EAGLE', 5, 1),
(664, 'ПРОГРАММА', 9, 4),
(665, 'ПИЛЕНИЕ', 7, 1),
(666, 'ПРОЦЕСС', 7, 7),
(667, 'PYTHON', 6, 2),
(668, 'ОТРАВЛЕНИЕ', 10, 1),
(669, 'СБОРКА', 6, 2),
(670, 'ЧАСТИТЬ', 7, 4),
(671, 'МЕГАДЕВАЙС', 10, 1),
(672, 'NIXIE-ИНДИКАТОР', 15, 1),
(673, 'ИР8', 3, 1),
(674, 'ЧИПТЮН', 6, 1),
(675, 'ОСНОВНЫЙ', 8, 9),
(676, 'РАМКА', 5, 2),
(677, 'ВЕДЬ', 4, 5),
(678, 'БУДИЛЬНИК', 9, 1),
(679, 'ЗДЕСЬ', 5, 14),
(680, 'ПИТОНИЙ', 7, 1),
(681, 'ПОУЧАСТВОВАТЬ', 13, 1),
(682, 'РАЗВОДКА', 8, 1),
(683, 'ЛИЦЕЗРЕТЬ', 9, 1),
(684, 'НЕОБХОДИМЫЙ', 11, 9),
(685, 'СОКРАЩАТЬ', 9, 2),
(686, 'ДОПОЛНИТЕЛЬНЫЙ', 14, 7),
(687, 'ЖАЛКО', 5, 1),
(688, 'ЧИСЛО', 5, 5),
(689, 'РАЙОН', 5, 1),
(690, '5', 1, 10),
(691, 'ПИТАНИЕ', 7, 1),
(692, 'СО', 2, 10),
(693, 'ПУТЕМ', 5, 7),
(694, 'ТРЕБОВАТЬСЯ', 11, 3),
(695, 'ВЫДАВАТЬ', 8, 1),
(696, 'БАЗОВЫЙ', 7, 4),
(697, 'ЗАФИКСИРОВАТЬ', 13, 1),
(698, 'ЗАБЫВАТЬ', 8, 4),
(699, '180-220', 7, 1),
(700, 'М', 1, 2),
(701, 'РАЗВЯЗАТЬ', 9, 1),
(702, 'НИКАК', 5, 2),
(703, 'ГУЛЯТЬ', 6, 1),
(704, 'БЛИЗКИЙ', 7, 2),
(705, 'НАРАБОТКА', 9, 1),
(706, 'ТАМ', 3, 6),
(707, 'НАСТОЯЩИЙ', 9, 3),
(708, 'GITHUB', 6, 3),
(709, 'ПУБЛИКОВАТЬСЯ', 13, 1),
(710, 'СВОБОДНО', 8, 1),
(711, 'РЕКОМЕНДОВАТЬСЯ', 15, 1),
(712, 'ДИОД', 4, 1),
(713, 'СЕТЕВОЙ', 7, 1),
(714, 'ИМПУЛЬСНЫЙ', 10, 1),
(715, 'ДРЕВНИЕ', 7, 1),
(716, 'МАНУАЛ', 6, 1),
(717, 'ЛЮБИТЬ', 6, 2),
(718, 'ТК', 2, 3),
(719, 'УБОЯТЬСЯ', 8, 1),
(720, '16-РАЗРЯДНЫЙ', 12, 1),
(721, 'ЗАТРАТА', 7, 2),
(722, 'РЕАЛИЗАЦИЯ', 10, 7),
(723, 'ОСОБЕННОСТЬ', 11, 3),
(724, 'ИЗЛОЖИТЬ', 8, 1),
(725, 'ЕМКО', 4, 1),
(726, 'ПРИНЦИП', 7, 3),
(727, 'ДЕЙСТВИЕ', 8, 5),
(728, 'СТЕКЛЯННЫЙ', 10, 1),
(729, 'ПРЕДСТАВЛЯТЬ', 12, 5),
(730, 'КРАТКО', 6, 1),
(731, 'СОСРЕДОТОЧИТЬСЯ', 15, 1),
(732, 'ПОСТ', 4, 7),
(733, 'СТИЛЬ', 5, 2),
(734, 'YET', 3, 1),
(735, 'CLOCK', 5, 2),
(736, 'NIXIE', 5, 1),
(737, 'ANOTHER', 7, 1),
(738, 'КОЛБА', 5, 1),
(739, 'ЗАПОЛНИТЬ', 9, 2),
(740, 'СОТНЯ', 5, 3),
(741, 'ПАРА', 4, 3),
(742, 'ПЕРЕД', 5, 7),
(743, 'ЗАЖИГАТЬСЯ', 10, 1),
(744, 'ТЛЕТЬ', 5, 1),
(745, 'КРАСНО-ОРАНЖЕВЫЙ', 16, 1),
(746, 'ПРОЯВЛЕНИЕ', 10, 2),
(747, 'ВИЗУАЛЬНЫЙ', 10, 2),
(748, 'СЕТКА', 5, 1),
(749, 'ОБЩИЙ', 5, 5),
(750, 'ЭЛЕКТРОД', 8, 1),
(751, 'ГАЗ', 3, 1),
(752, 'ИНЕРТНЫЙ', 8, 1),
(753, 'ВЫПОЛНИТЬ', 9, 3),
(754, 'СИМВОЛ', 6, 2),
(755, 'ВЫБРАТЬ', 7, 4),
(756, 'БОЛЬШИНСТВО', 11, 4),
(757, 'ПРОДОЛЖАТЬ', 10, 3),
(758, 'АНАЛОГ', 6, 1),
(759, 'СОВРЕМЕННЫЙ', 11, 4),
(760, 'РОЖДАТЬСЯ', 9, 1),
(761, 'РАЗНИЦА', 7, 4),
(762, 'МИКС', 4, 1),
(763, 'ДИКИЙ', 5, 1),
(764, 'ПРЯМОЙ', 6, 1),
(765, 'РЕШЕНИЕ', 7, 9),
(766, 'ТЕХНИЧЕСКИЙ', 11, 5),
(767, 'ОРИГИНАЛЬНЫЙ', 12, 2),
(768, 'ВЫЗЫВАТЬ', 8, 2),
(769, 'ВОСТОРГ', 7, 1),
(770, 'УМИЛЕНИЕ', 8, 1),
(771, 'ВОЗРАСТ', 7, 1),
(772, 'СОСТАВЛЯТЬ', 10, 1),
(773, 'ЯВЛЯТЬСЯ', 8, 13),
(774, 'ИЗДЕЛИЕ', 7, 1),
(775, 'ЗАКОНЧИТЬ', 9, 3),
(776, 'ГАЗОРАЗРЯДНЫЙ', 13, 1),
(777, 'ФИГУРИРОВАТЬ', 12, 1),
(778, 'ХАБР', 4, 2),
(779, 'ЧАСИК', 5, 1),
(780, 'ОТМЕТИТЬ', 8, 4),
(781, 'ДОВОЛЬНЫЙ', 9, 1),
(782, 'ПОДОБНЫЙ', 8, 2),
(783, 'ГОД', 3, 8),
(784, 'ДЕСЯТКА', 7, 1),
(785, 'ЧУВСТВО', 7, 1),
(786, 'СООРУЖАТЬ', 9, 1),
(787, 'ЧРЕЗВЫЧАЙНО', 11, 1),
(788, 'ОСТАТЬСЯ', 8, 6),
(789, 'РЕЗУЛЬТАТ', 9, 15),
(790, 'СВЕЧЕНИЕ', 8, 1),
(791, 'ВБЛИЗИ', 6, 1),
(792, 'ЛОБ', 3, 1),
(793, 'РЕШАТЬ', 6, 2),
(794, 'ПРИХОДИТЬСЯ', 11, 6),
(795, 'ОГРАНИЧИВАТЬ', 12, 1),
(796, 'КОМА', 4, 5),
(797, '50', 2, 4),
(798, 'РЕЗИСТОР', 8, 1),
(799, 'КАКОЙ-НИБУДЬ', 12, 2),
(800, 'ВРАЗРЕЗ', 7, 1),
(801, 'ПОДХОД', 6, 9),
(802, 'УНИВЕРСАЛЬНЫЙ', 13, 2),
(803, 'МИКРОКОНТРОЛЛЕР', 15, 3),
(804, 'ГОЛОВА', 6, 5),
(805, 'ПОДКЛЮЧАТЬ', 10, 6),
(806, '05', 2, 1),
(807, 'ВТ', 2, 1),
(808, 'ПОЛЬЗОВАТЬСЯ', 12, 3),
(809, 'УСТАНОВИТЬ', 10, 3),
(810, 'ИЗГОТОВИТЬ', 10, 1),
(811, 'ПОДКЛЮЧАТЬСЯ', 12, 2),
(812, 'ОТОБРАЖАТЬ', 10, 1),
(813, 'ПРОГРАММКА', 10, 1),
(814, 'ПРОСТЕНЬКИЙ', 11, 3),
(815, 'ФОТОРЕЗИСТ', 10, 1),
(816, 'ПРИМЕНЕНИЕ', 10, 2),
(817, 'МАЛЕНЬКИЙ', 9, 7),
(818, 'ИСТОЧНИК', 8, 2),
(819, 'БЕСХОЗНЫЙ', 9, 1),
(820, 'АНОДНО-НАКАЛЬНЫЙ', 16, 1),
(821, 'РАЗВЕСТИ', 8, 1),
(822, 'МОСТ', 4, 1),
(823, 'ДИОДНЫЙ', 7, 1),
(824, 'НЕЗАМЕТНО', 9, 2),
(825, 'НЕПОСРЕДСТВЕННО', 15, 1),
(826, '155-Й', 5, 1),
(827, 'ЛЮБИМЫЙ', 7, 3),
(828, 'ПРЕДНАЗНАЧИТЬ', 13, 2),
(829, 'ОБЫЧНЫЙ', 7, 3),
(830, 'ЖИЗНЬ', 5, 2),
(831, 'УПРАВЛЯТЬ', 9, 2),
(832, 'УПРАВЛЕНИЕ', 10, 3),
(833, 'ПОВТОРЯТЬ', 9, 1),
(834, 'КОММУТИРОВАТЬ', 13, 1),
(835, 'МИЛЛИАМПЕР', 10, 1),
(836, 'ЕДИНИЦА', 7, 1),
(837, 'ТОК', 3, 2),
(838, 'ТРАНЗИСТОРНЫЙ', 13, 1),
(839, 'КЛЮЧ', 4, 2),
(840, 'СМЕНА', 5, 2),
(841, 'ВЫВОДИТЬСЯ', 10, 1),
(842, 'ДИНАМИЧЕСКИЙ', 12, 4),
(843, 'БЫСТРО', 6, 3),
(844, 'ЗА', 2, 12),
(845, 'ЧЕЛОВЕЧЕСКИЙ', 12, 1),
(846, 'ИНЕРЦИЯ', 7, 1),
(847, 'СЧЕТ', 4, 2),
(848, 'ПРИМЕНЯТЬСЯ', 11, 1),
(849, 'НЕРЕДКО', 7, 1),
(850, 'К155ИД1', 7, 1),
(851, 'НЕДОСТУПНОСТЬ', 13, 1),
(852, 'СМЫСЛ', 5, 1),
(853, 'ШТУКА', 5, 2),
(854, 'СХЕМОТЕХНИК', 11, 1),
(855, 'УПРОЩЕНИЕ', 9, 1),
(856, 'СТАТИЧЕСКИЙ', 11, 4),
(857, 'NIXIE-МОДУЛЬ', 12, 1),
(858, 'LTP', 3, 1),
(859, 'ПРОГРЕСС', 8, 1),
(860, 'ARDUINO', 7, 1),
(861, 'СВЕТОДИОД', 9, 1),
(862, 'VAR', 3, 2),
(863, 'ФИЛЬМ', 5, 1),
(864, 'INBYTE', 6, 1),
(865, 'ВОЛЬТМЕТР', 9, 1),
(866, 'ПИНА', 4, 1),
(867, 'ANALOGWRITE9', 12, 1),
(868, 'MPC', 3, 1),
(869, 'ANALOGWRITE3', 12, 1),
(870, 'FUNCTION', 8, 6),
(871, 'ПЕРЕДАТЬ', 8, 5),
(872, 'ЧУТЬ', 4, 5),
(873, 'НАСТРОЙКА', 9, 6),
(874, 'PWM', 3, 1),
(875, '255', 3, 1),
(876, 'ПОРТ', 4, 3),
(877, '9Й', 2, 1),
(878, 'ШИЙ', 3, 1),
(879, 'NODEJS', 6, 1),
(880, 'ПОДАРОЧЕК', 9, 1),
(881, 'ПОМИГАТЬ', 8, 1),
(882, 'БЫ', 2, 14),
(883, 'САМЫЙ', 5, 16),
(884, 'ЗНАЧЕНИЕ', 8, 10),
(885, 'LOOP', 4, 1),
(886, 'ПОСЫЛАТЬ', 8, 1),
(887, 'СООТВЕТСТВОВАТЬ', 15, 3),
(888, 'ТОГО', 4, 16),
(889, 'LTHEADGT', 8, 2),
(890, 'SERIALPRINTA', 12, 1),
(891, 'YOUR', 4, 1),
(892, 'NEW', 3, 8),
(893, 'LTBODYGT', 8, 3),
(894, 'SERIALAVAILABLE', 15, 1),
(895, 'ДАЛЕЕ', 5, 2),
(896, 'LTLINK', 6, 2),
(897, 'НЕМНОГО', 7, 7),
(898, 'TO', 2, 2),
(899, 'НАЛИЧИЕ', 7, 3),
(900, 'VOID', 4, 2),
(901, 'ОТОБРАЗИТЬ', 10, 1),
(902, 'ВИДЕО', 5, 4),
(903, 'СПАСИБО', 7, 2),
(904, 'NODE-SERIALPORT', 15, 1),
(905, 'COM-ПОРТУ', 9, 1),
(906, 'ПРОСМОТРЕТЬ', 11, 1),
(907, 'КСТАТИ', 6, 13),
(908, 'ХАБРАДЕДАМОРОЗ', 14, 1),
(909, 'ОБЪЕКТ', 6, 5),
(910, 'MEDIA', 5, 1),
(911, 'PLAYER', 6, 1),
(912, 'ПРО', 3, 6),
(913, 'CLASSIC', 7, 1),
(914, 'ПК', 2, 1),
(915, 'РАЗБИРАТЬ', 9, 1),
(916, 'ЗАПУЩЕННЫЙ', 10, 1),
(917, 'СТАТИСТИК', 9, 3),
(918, 'OUTPUT', 6, 2),
(919, 'УСТАНАВЛИВАТЬ', 13, 4),
(920, 'СКОРОСТЬ', 8, 4),
(921, 'FUNCTIONDATA', 12, 1),
(922, 'SERIALPORT', 10, 1),
(923, 'СТРАНИЦА', 8, 6),
(924, 'ТОЙ', 3, 2),
(925, 'ОПРЕДЕЛИТЬСЯ', 12, 3),
(926, 'ПОДГОТОВИТЬ', 11, 2),
(927, 'ДЕШЕВЫЙ', 7, 2),
(928, '57600', 5, 1),
(929, 'ОБЩЕНИЕ', 7, 1),
(930, 'THISGETPROGRESS255TOFIXED0', 26, 1),
(931, 'MPC_OBJPROTOTYPEPWM', 19, 1),
(932, 'БИБЛИОТЕКА', 10, 10),
(933, 'COM', 3, 2),
(934, 'ОБМЕН', 5, 1),
(935, '-GT', 3, 2),
(936, '10', 2, 4),
(937, 'PLAYBACKRATE', 12, 1),
(938, 'MUTED', 5, 1),
(939, '77', 2, 1),
(940, 'RELOADTIME', 10, 1),
(941, 'ПОДГОТАВЛИВАТЬ', 14, 1),
(942, 'THISSETTINGSQUOTPOSITIONQUOTTHISSETTINGSQUOTDURATIONQUOTTOFIXED5', 64, 1),
(943, 'MPC_OBJPROTOTYPEGETPROGRESS', 27, 1),
(944, 'ЕЕ', 2, 10),
(945, 'ELSE', 4, 3),
(946, 'OPEN', 4, 1),
(947, 'CONSOLELOGFAILED', 16, 1),
(948, 'CONSOLELOGOPEN', 14, 1),
(949, 'SERIALPORTONDATA', 16, 1),
(950, 'SERIALPORTWRITEA', 16, 1),
(951, 'ПОСЛАТЬ', 7, 1),
(952, 'MAININITFUNCTIONA', 17, 1),
(953, 'SERIALPORTOPENFUNCTION', 22, 1),
(954, 'ПОПРОСИТЬ', 9, 1),
(955, 'REQUIRESERIALPORTSERIALPORT', 27, 1),
(956, 'COM5', 4, 1),
(957, 'ПОРТУ', 5, 1),
(958, 'SERIALPORTQUOTCOM5QUOT', 22, 1),
(959, 'BAUDRATE', 8, 1),
(960, 'ОТКРЫВАТЬ', 9, 2),
(961, 'FALSE', 5, 3),
(962, 'ЖЕЛЕЗО', 6, 1),
(963, 'ЗАПРОГРАММИРОВАТЬ', 17, 1),
(964, 'PINMODE9', 8, 1),
(965, 'SETUP', 5, 1),
(966, 'INT', 3, 4),
(967, 'МИГАТЬ', 6, 1),
(968, 'PINMODE3', 8, 1),
(969, 'SERIALBEGIN57600', 16, 1),
(970, 'INBYTE255', 9, 1),
(971, 'SERIALPARSEINT', 14, 1),
(972, 'DELAY100', 8, 1),
(973, 'БОДРЕНЬКИЙ', 10, 1),
(974, 'ПОЧИТАТЬ', 8, 3),
(975, '5В', 2, 1),
(976, '0В', 2, 1),
(977, 'БЛАГОДАРЯ', 9, 3),
(978, 'ПОЛОВИНА', 8, 1),
(979, '25В', 3, 1),
(980, '127', 3, 1),
(981, '2552', 4, 1),
(982, 'ЖИВОЙ', 5, 2),
(983, 'МАКЕТКА', 7, 1),
(984, 'ПОЛНЫЙ', 6, 5),
(985, 'ГДЕ-ТО', 6, 5),
(986, 'IDE', 3, 3),
(987, 'ЕРУНДА', 6, 1),
(988, 'ВНИМАНИЕ', 8, 3),
(989, 'ПОДПРАВИТЬ', 10, 1),
(990, 'ПОДСКАЗЫВАТЬ', 12, 1),
(991, 'ОШИБИТЬСЯ', 9, 2),
(992, 'СВЕЖЕНЬКИЙ', 10, 1),
(993, 'COM-ПОРТ', 8, 1),
(994, 'РЯДОМ', 5, 2),
(995, 'PS', 2, 2),
(996, 'ДА', 2, 10),
(997, 'ЛЕЖАТЬ', 6, 2),
(998, 'ATTINY13', 8, 1),
(999, 'ССЫЛКА', 6, 10),
(1000, 'НЕЯ', 3, 2),
(1001, 'ПЕРЕНЕСТИ', 9, 3),
(1002, 'ПОПРОБОВАТЬ', 11, 9),
(1003, 'ПЕРЕДАВАТЬ', 10, 5),
(1004, 'ИЗМЕНЯЕМЫЙ', 10, 1),
(1005, 'ПРОПОРЦИОНАЛЬНО', 15, 1),
(1006, 'ПАНЕЛЬКА', 8, 1),
(1007, 'ИМЯ', 3, 6),
(1008, 'ПРИНЦИПИАЛЬНЫЙ', 14, 1),
(1009, 'НОГА', 4, 2),
(1010, 'НОВЫЙ', 5, 18),
(1011, 'ДЕРЖАТЬСЯ', 9, 2),
(1012, 'КРЫШКА', 6, 1),
(1013, 'ПОДРОБНЕЙОКАЗЫВАТЬСЯ', 20, 1),
(1014, 'ПОДКРАСИТЬ', 10, 1),
(1015, 'ЛИПКА', 5, 1),
(1016, 'ЛЕНТА', 5, 1),
(1017, 'РАЗМЕР', 6, 9),
(1018, 'СНИМАТЬСЯ', 9, 1),
(1019, 'ЛЕГКО', 5, 9),
(1020, 'КОНЕЦ', 5, 7),
(1021, 'СЕАНС', 5, 1),
(1022, 'NODEJS-ПРИЛОЖЕНИЕ', 17, 1),
(1023, 'ЖДАТЬ', 5, 7),
(1024, 'АБСТРАКТНЫЙ', 11, 1),
(1025, 'ОТПРАВЛЯТЬ', 10, 1),
(1026, 'ANALOGWRITE', 11, 1),
(1027, 'ФУНКЦИЯ', 7, 8),
(1028, '3М', 2, 1),
(1029, 'ПОДСВЕТИТЬ', 10, 1),
(1030, '100МС', 5, 1),
(1031, 'ЦИКЛ', 4, 3),
(1032, 'ВЕШАТЬ', 6, 1),
(1033, 'СЧИТЫВАТЬ', 9, 3),
(1034, 'ПЕРЕМЕННЫЙ', 10, 5),
(1035, 'VOLUMELEVEL', 11, 1),
(1036, '3Й', 2, 1),
(1037, 'ТОЧНО', 5, 6),
(1038, 'БЕСКОНЕЧНЫЙ', 11, 2),
(1039, 'РАННИЙ', 6, 3),
(1040, 'LTTITLEGTMPC-HC', 15, 1),
(1041, 'CHARSETQUOTUTF-8QUOTGT', 22, 1),
(1042, 'LTMETA', 6, 1),
(1043, 'LANGQUOTENQUOTGT', 16, 1),
(1044, 'WEBSERVER', 9, 1),
(1045, 'VARIABLESLTTITLEGT', 18, 1),
(1046, 'HREFQUOTFAVICONICOQUOTGT', 24, 1),
(1047, 'RELQUOTICONQUOT', 15, 1),
(1048, 'HREFQUOTDEFAULTCSSQUOTGT', 24, 1),
(1049, 'RELQUOTSTYLESHEETQUOT', 21, 1),
(1050, 'LTHTML', 6, 1),
(1051, 'HTMLGT', 6, 2),
(1052, 'ТЕКУЩИЙ', 7, 5),
(1053, 'СКАЖЕМ', 6, 1),
(1054, 'УМЕТЬ', 5, 2),
(1055, 'СЕССИЯ', 6, 1),
(1056, 'ВИД', 3, 7),
(1057, 'HTMLLTDOCTYPE', 13, 1),
(1058, 'СОДЕРЖАНИЕ', 10, 2),
(1059, 'HTML-СТРАНИЧКА', 14, 1),
(1060, 'LT--IF', 6, 1),
(1061, 'LT', 2, 3),
(1062, 'IMPROVE', 7, 1),
(1063, 'BROWSERLTAGT', 12, 1),
(1064, 'HREFQUOTHTTPBROWSEHAPPYCOMQUOTGTUPGRADE', 39, 1),
(1065, 'LTA', 3, 2),
(1066, 'EXPERIENCELTDIVGT', 17, 1),
(1067, 'LTENDIF--GT', 11, 1),
(1068, 'IDQUOTFILEDIRQUOTGTDFILMSLTPGT', 30, 1),
(1069, 'IDQUOTFILEDIRARGQUOTGTD5CFILMSLTPGT', 35, 1),
(1070, 'IDQUOTFILEPATHQUOTGTDFILMSITSALWAYSSUNNYINPHILADELPHIAS10E10720PWEBRUSLOSTFILMTVMP4LTPGT', 88, 1),
(1071, 'IDQUOTFILEPATHARGQUOTGTD5CFILMS5CITSALWAYSSUNNYINPHILADELPHIAS10E10720PWEBRUSLOSTFILMTVMP4LTPGT', 95, 1),
(1072, 'PLEASE', 6, 1),
(1073, 'BROWSER', 7, 1),
(1074, 'CLASSQUOTBROWSER-WARNINGQUOTGTLTSTRONGGTWARNINGLTSTRONGGT', 57, 1),
(1075, 'LTDIV', 5, 2),
(1076, '8GT', 3, 1),
(1077, 'IE', 2, 1),
(1078, 'ARE', 3, 1),
(1079, 'LTSTRONGGTOUTDATEDLTSTRONGGT', 28, 1),
(1080, 'AN', 2, 1),
(1081, 'USING', 5, 2),
(1082, 'ОКАЗЫВАТЬСЯ', 11, 3),
(1083, 'УСТАНОВЛЕННЫЙ', 13, 2),
(1084, 'ПОСЫЛОЧКА', 9, 1),
(1085, 'КИТАЙСКИЙ', 9, 1),
(1086, 'ДОПОЛНЕНИЕ', 10, 1),
(1087, 'ЗАКАЗАТЬ', 8, 1),
(1088, 'СПУСТЯ', 6, 1),
(1089, 'МЕСЯЦКА', 7, 1),
(1090, 'ПОСЫЛКА', 7, 1),
(1091, 'ЕХАТЬ', 5, 1),
(1092, 'НАСТАТЬ', 7, 1),
(1093, 'МАХНУТЬ', 7, 1),
(1094, 'ХАБРАДЕДУМОРОЗ', 14, 1),
(1095, 'АНОНИМНЫЙ', 9, 2),
(1096, 'ВВЕДЕНИЕ', 8, 2),
(1097, 'ВМЕСТО', 6, 12),
(1098, 'PRO', 3, 2),
(1099, 'MINI', 4, 1),
(1100, 'КОЛЕБАТЬСЯ', 10, 1),
(1101, 'ДОЛГО', 5, 2),
(1102, 'ДУМАТЬ', 6, 4),
(1103, 'ИТОГ', 4, 7),
(1104, 'СРАЗУ', 5, 9),
(1105, 'НЕТЕРПЕЛИВЫЙ', 12, 1),
(1106, 'СКОЛЬКО', 7, 4),
(1107, 'ПОМНИТЬ', 7, 2),
(1108, 'ОБРАБОТАТЬ', 10, 1),
(1109, 'ВЫТАЩИТЬ', 8, 1),
(1110, 'ЧТО-НИБУДЬ', 10, 3),
(1111, 'ПРИНЯТЬ', 7, 4),
(1112, 'ЗАКЛЮЧАТЬСЯ', 11, 4),
(1113, 'ЗАДАЧА', 6, 7),
(1114, 'ПРОСМОТР', 8, 3),
(1115, 'IDQUOTSTATEQUOTGT1LTPGT', 23, 1),
(1116, 'IDQUOTSTATESTRINGQUOTGTПАУЗАLTPGT', 33, 1),
(1117, 'ОТБИРАТЬ', 8, 1),
(1118, 'DATATOSTRINGSPLITNFOREACHFUNCTIONLINE', 37, 1),
(1119, 'OBJ', 3, 2),
(1120, 'MPC_OBJPROTOTYPEPARSE', 21, 1),
(1121, 'ПАРАГРАФ', 8, 1),
(1122, 'ПАРАМЕТР', 8, 7),
(1123, 'LINEMATCHIDQUOTWQUOT1', 21, 1),
(1124, 'NAME2', 5, 1),
(1125, 'MATCHLTPTESTLINE', 16, 1),
(1126, 'MPC_OBJ', 7, 1),
(1127, 'PARSE', 5, 1),
(1128, 'CHUNK', 5, 1),
(1129, 'RESONDATA', 9, 1),
(1130, 'FUNCTIONRES', 11, 1),
(1131, 'HTTPGETTHATMPC_URI', 18, 1),
(1132, 'THATMPC_OBJPARSECHUNK', 21, 1),
(1133, 'DONETHATMPC_OBJGET', 18, 1),
(1134, 'DONEEMESSAGE', 12, 1),
(1135, 'FUNCTIONE', 9, 1),
(1136, 'ONERROR', 7, 1),
(1137, 'OBJHASOWNPROPERTYNAME2', 22, 1),
(1138, 'OBJNAME2LINESUBSTRINGLINEINDEXOFGT1LINELASTINDEXOFLT', 52, 1),
(1139, 'POSITION', 8, 1),
(1140, 'ПАУЗА', 5, 1),
(1141, 'STATESTRING', 11, 1),
(1142, 'STATE', 5, 1),
(1143, '1023', 4, 1),
(1144, 'POSITIONSTRING', 14, 1),
(1145, 'DURATIONSTRING', 14, 1),
(1146, '114906', 6, 1),
(1147, 'DURATION', 8, 1),
(1148, '000001', 6, 1),
(1149, 'D', 1, 2),
(1150, 'FILEDIR', 7, 1),
(1151, 'FILEPATHARG', 11, 1),
(1152, 'THISSETTINGSOBJ', 15, 1),
(1153, 'D5CMBRR555AVI', 13, 1),
(1154, 'FILEPATH', 8, 1),
(1155, 'D5C', 3, 1),
(1156, 'FILEDIRARG', 10, 1),
(1157, 'DMBRR555AVI', 11, 1),
(1158, 'PROMISEFUNCTIONDONE', 19, 1),
(1159, 'THIS', 4, 1),
(1160, 'ПОРТQUOT', 8, 1),
(1161, 'QUOTСЛУШАТЬ', 11, 1),
(1162, 'ГАЛОЧКА', 7, 1),
(1163, 'ПРОСТАВИТЬ', 10, 1),
(1164, 'СОДЕРЖАТЬСЯ', 11, 1),
(1165, 'РАЗОБРАТЬ', 9, 1),
(1166, 'IDQUOTПАРАМЕТРQUOTGTЗНАЧЕНИЕLTPGT', 33, 1),
(1167, 'ТЕГ', 3, 2),
(1168, 'ФУНКЦИОНАЛ', 10, 4),
(1169, 'ДОБИТЬСЯ', 8, 2),
(1170, 'IDQUOTDURATIONSTRINGQUOTGT002055LTPGT', 37, 1),
(1171, 'IDQUOTDURATIONQUOTGT1255210LTPGT', 32, 1),
(1172, 'IDQUOTPOSITIONSTRINGQUOTGT001749LTPGT', 37, 1),
(1173, 'IDQUOTPOSITIONQUOTGT1069384LTPGT', 32, 1),
(1174, 'IDQUOTVOLUMELEVELQUOTGT75LTPGT', 30, 1),
(1175, 'IDQUOTMUTEDQUOTGT0LTPGT', 23, 1),
(1176, 'LTHTMLGT', 8, 3),
(1177, 'IDQUOTRELOADTIMEQUOTGT0LTPGT', 28, 1),
(1178, 'IDQUOTPLAYBACKRATEQUOTGT1LTPGT', 30, 1),
(1179, 'JSПРИТЬ', 7, 1),
(1180, 'ГЛЯНУТЬ', 7, 1),
(1181, 'ВМЕСТЕ', 6, 6),
(1182, 'РОДНОЙ', 6, 1),
(1183, 'HTTPGET', 7, 1),
(1184, 'THAT', 4, 1),
(1185, 'MAINPROTOTYPEGET', 16, 1),
(1186, 'ОБРАЩАТЬСЯ', 10, 3),
(1187, 'ОБЕЩАНИЕ', 8, 1),
(1188, 'ОБРАБОТКА', 9, 4),
(1189, 'АДРЕС', 5, 2),
(1190, 'ДОСТУПНЫЙ', 9, 11),
(1191, 'СТРАНИЧКА', 9, 1),
(1192, 'LOCALHOST13580VARIABLESHTML', 27, 1),
(1193, 'WEB-СЕРВЕР', 10, 1),
(1194, 'РАЗДЕЛИТЬ', 9, 1),
(1195, '000154', 6, 1),
(1196, 'JAVASCRIPT', 10, 2),
(1197, 'MPCMETER', 8, 1),
(1198, 'UUID', 4, 1),
(1199, 'ПРОГРАММИСТ', 11, 6),
(1200, 'ПРИКЛАДНОЙ', 10, 1),
(1201, 'СТАРЫЙ', 6, 4),
(1202, 'СТАРОЕ', 6, 3),
(1203, 'ICOOLPRINTING', 13, 1),
(1204, 'УСТАНАВЛИВАТЬСЯ', 15, 1),
(1205, 'УДАЛИТЬ', 7, 2),
(1206, 'PRINTINGPRINTQUOTCMYFILEPDFQUOT', 31, 1),
(1207, 'ICOOLPRINTING2', 14, 1),
(1208, 'ХОТЯ', 4, 8),
(1209, 'PRINTING', 8, 1),
(1210, 'ОБЯЗАТЬ', 7, 2),
(1211, 'ДОБРОВОЛЬНО', 11, 1),
(1212, 'ПЕРЕДЕЛЫВАТЬ', 12, 1),
(1213, 'PROGRAM', 7, 1),
(1214, 'СОЗДАНИЕ', 8, 8),
(1215, 'PDFCREATOR', 10, 1),
(1216, 'РЕЕСТР', 6, 1),
(1217, 'ТЕМ', 3, 8),
(1218, 'ПРАВИТЬ', 7, 5),
(1219, 'НЕВОЗМОЖНО', 10, 3),
(1220, 'ОЗНАЧАТЬ', 8, 4),
(1221, 'ВЫЗОВ', 5, 6),
(1222, 'ВОЗМОЖНОСТЬ', 11, 11),
(1223, 'ОБЕСПЕЧИТЬ', 10, 1),
(1224, 'СОВМЕСТИМОСТЬ', 13, 1),
(1225, 'ЧАЩА', 4, 2),
(1226, 'INTERFACE', 9, 1),
(1227, 'ПАТТЕРН', 7, 1),
(1228, 'НАЗНАЧЕНИЕ', 10, 1),
(1229, 'ШАБЛОН', 6, 3),
(1230, 'НАЗЫВАТЬ', 8, 1),
(1231, 'ПРОЕКТИРОВАНИЕ', 14, 1),
(1232, 'ТАКАТЬ', 6, 5),
(1233, 'СТРАТЕГИЯ', 9, 2),
(1234, 'УДИВЛЯТЬСЯ', 10, 1),
(1235, 'АДАПТЕР', 7, 2),
(1236, 'УСУГУБЛЯТЬСЯ', 12, 1),
(1237, 'ПОЛОЖЕНИЕ', 9, 1),
(1238, 'ВСЕГО', 5, 11),
(1239, 'ТЕХНИК', 6, 1),
(1240, 'ОШИБКА', 6, 5),
(1241, 'ПОПЫТКА', 7, 4),
(1242, 'ПРОИЗОЙТИ', 9, 2),
(1243, 'СУМЕТЬ', 6, 2),
(1244, 'ПЕРЕХОДИТЬ', 10, 3),
(1245, 'ШАЙБА', 5, 1),
(1246, 'ДОБРОЖЕЛАТЕЛЬ', 13, 1),
(1247, 'ФОРУМ', 5, 1),
(1248, 'ХИТРЫЙ', 6, 2),
(1249, 'УРОВЕНЬ', 7, 6),
(1250, 'БЕСКОНФЛИКТНЫЙ', 14, 1),
(1251, 'МОЗГИ', 5, 2),
(1252, 'ШЕПТАТЬ', 7, 1),
(1253, 'РАЗУМЕТЬСЯ', 10, 1),
(1254, 'КОНЬ', 4, 1),
(1255, 'ДАРЕНЫЙ', 7, 1),
(1256, 'ПОСЛОВИЦА', 9, 1),
(1257, 'ЗУБ', 3, 1),
(1258, 'СМОТРЕТЬ', 8, 4),
(1259, 'КОММЕРЧЕСКИЙ', 12, 2),
(1260, 'КОМПЕНСИРОВАТЬ', 14, 1),
(1261, 'НЕРАДИВОСТЬ', 11, 1),
(1262, 'ВОЗРАЗИТЬ', 9, 2),
(1263, 'БЕСПЛАТНЫЙ', 10, 1),
(1264, 'УТИЛИТ', 6, 2),
(1265, 'РАЗВЕ', 5, 1),
(1266, 'ОТКРЫТЫЙ', 8, 3),
(1267, 'ОБЕСПЕЧИВАТЬ', 12, 1),
(1268, 'ОСНОВАНИЕ', 9, 3),
(1269, 'МИНИМУМ', 7, 3),
(1270, 'НЕЛИШНИЙ', 8, 1),
(1271, 'ИСХОДНИК', 8, 1),
(1272, 'ВЕСКИЙ', 6, 1),
(1273, 'МОРАЛЬ', 6, 3),
(1274, 'NOT', 3, 3),
(1275, 'HERE', 4, 1),
(1276, 'INVENTED', 8, 1),
(1277, 'ШАБЛОННЫЙ', 9, 1),
(1278, 'СТРОКА', 6, 10),
(1279, 'СООБРАЗНО', 9, 1),
(1280, 'КАША', 4, 1),
(1281, 'ПОДПОРКА', 8, 1),
(1282, 'ЯСНЫЙ', 5, 2),
(1283, 'СТРОЧКА', 7, 2),
(1284, 'ПРЕВРАЩАТЬСЯ', 12, 2),
(1285, 'ПОЛУЧЕНИЕ', 9, 4),
(1286, 'GETINTERFACEQUOTICOOLPRINTINGQUOT', 33, 1),
(1287, 'ВНАЧАЛЕ', 7, 1),
(1288, 'ПРАВКА', 6, 1),
(1289, 'ЗАМЕНА', 6, 4),
(1290, 'НЕСОВМЕСТИМЫЙ', 13, 1),
(1291, 'РАЗРАБАТЫВАТЬСЯ', 15, 1),
(1292, '2Х', 2, 1),
(1293, 'ПРИВОДИТЬ', 9, 3),
(1294, 'ПОЖАЛУЙСТА', 10, 2),
(1295, 'РАЗВИВАТЬСЯ', 11, 1),
(1296, 'НЫНЕШНИЙ', 8, 1),
(1297, '0Х', 2, 1),
(1298, 'МИР', 3, 2),
(1299, 'FILENAME', 8, 1),
(1300, 'STRING', 6, 3),
(1301, 'СКОМПИЛИРОВАТЬ', 14, 3),
(1302, 'ОЗНАЧЕННЫЙ', 10, 1),
(1303, 'НЕКОТОРЫЙ', 9, 11),
(1304, 'PRINTCONST', 10, 1),
(1305, 'МЕХАНИЗМ', 8, 3),
(1306, 'КАКОВ', 5, 2),
(1307, 'ОБЪЯВЛЯТЬ', 9, 1),
(1308, 'UUIDA03D1421-B1EC-11D0-8C3A-00C04FC31D2F', 40, 1),
(1309, 'СТАВИТЬСЯ', 9, 1),
(1310, 'СООТВЕТСТВИЕ', 12, 1),
(1311, 'GETINTERFACE', 12, 1),
(1312, 'РАСШИРЯТЬСЯ', 11, 1),
(1313, 'ОЩУТИТЬ', 7, 1),
(1314, 'СОЧЕТАНИЕ', 9, 2),
(1315, 'ПРЕКРАСНЫЙ', 10, 2),
(1316, 'ВЫЗЫВАТЬСЯ', 10, 4),
(1317, 'ЗАПРАШИВАТЬСЯ', 13, 1),
(1318, 'ИСПОЛНЯЕМЫЙ', 11, 1),
(1319, 'FILESCOOLPRINTING1_0COOLEXE', 27, 1),
(1320, 'СТОРОННИЙ', 9, 1),
(1321, 'ГЛАДКО', 6, 1),
(1322, 'НЕДАВНИЙ', 8, 1),
(1323, 'ИСТОРИЯ', 7, 2),
(1324, 'ТЕХНОЛОГИЯ', 10, 4),
(1325, 'ПРОЕКТНЫЙ', 9, 1),
(1326, 'КАСАТЬСЯ', 8, 1),
(1327, 'ПРОДУКТОВЫЙ', 11, 1),
(1328, 'СОФТОСТРОИТЕЛЬ', 14, 1),
(1329, 'СУТЬ', 4, 3),
(1330, 'ГОРАЗДО', 7, 6),
(1331, 'ЛУЧШЕ', 5, 6),
(1332, 'АДА', 3, 1),
(1333, 'ПРАКТИК', 7, 1),
(1334, 'КОНЕЧНЫЙ', 8, 13),
(1335, 'ОТДЕЛИТЬ', 8, 2),
(1336, 'ОБНОВЛЕНИЕ', 10, 2),
(1337, 'ТЕОРИЯ', 6, 4),
(1338, 'СЛОВО', 5, 9),
(1339, 'СОЗДАТЬ', 7, 11),
(1340, 'НАОБОРОТ', 8, 1),
(1341, 'ГУМАННЫЙ', 8, 1),
(1342, 'РУКОВОДИТЬ', 10, 1),
(1343, 'ПРОИЗВОДИТЬ', 11, 1),
(1344, 'ПРИКАЗЧИК', 9, 1),
(1345, 'ЗАОДНО', 6, 2),
(1346, 'ОБЯЗАТЕЛЬНО', 11, 3),
(1347, 'ПОСКОЛЬКУ', 9, 7),
(1348, 'ДОСТАТОЧНО', 10, 11),
(1349, 'ЗАПРОСИТЬ', 9, 1),
(1350, 'ИСПОЛНЕНИЕ', 10, 5),
(1351, 'СТАДИЯ', 6, 1),
(1352, 'ОБОЙТИ', 6, 2),
(1353, 'ПУСТОТА', 7, 1),
(1354, 'ОТЛИЧИТЬ', 8, 2),
(1355, 'ИНАЧЕ', 5, 4),
(1356, 'ПЕРЕСТАВАТЬ', 11, 1),
(1357, 'ПРИМЕРНО', 8, 8),
(1358, 'ПО-ПРЕЖНЕМУ', 11, 1),
(1359, 'КРУТО', 5, 1),
(1360, 'SETUPPRINTER', 12, 1),
(1361, 'УНАСЛЕДОВАТЬ', 12, 1),
(1362, 'ВОЗМОЖНО', 8, 3),
(1363, 'ЛОМАТЬ', 6, 1),
(1364, 'UUIDD26D1421-G1EC-12D0-8C3A-12C84EF31D2F', 40, 1),
(1365, 'BOOL', 4, 2),
(1366, 'ВЫПУСКАТЬ', 9, 1),
(1367, 'FILESCOOLPRINTING2_0', 20, 1),
(1368, 'ВЫШЕОПИСАННЫЙ', 13, 2),
(1369, 'КУДА-НИБУДЬ', 11, 1),
(1370, 'ОПЯТЬ', 5, 5),
(1371, 'ПОДДЕРЖИВАТЬ', 12, 4),
(1372, 'ПРЕДУСМОТРЕТЬ', 13, 1),
(1373, 'УСТАНОВКА', 9, 2),
(1374, 'OLEVARIANT', 10, 1),
(1375, 'СКРИПТ', 6, 2),
(1376, 'РОЛИК', 5, 2),
(1377, 'YOUTUBE', 7, 2),
(1378, 'GOOGLESHEETS', 12, 1),
(1379, 'VIMEO', 5, 1),
(1380, 'JSON', 4, 1),
(1381, 'КОНТЕЙНЕР', 9, 4),
(1382, 'НАЙТИ', 5, 8),
(1383, 'XML', 3, 1),
(1384, 'IMPORTJSON', 10, 1),
(1385, 'GOOGLE', 6, 3),
(1386, 'IMPORTXML', 9, 1),
(1387, 'ЯЧЕЙКА', 6, 1),
(1388, 'САЙТ', 4, 10),
(1389, 'XPATH', 5, 1),
(1390, 'ДОКУМЕНТ', 8, 1),
(1391, 'SCRIPT', 6, 1),
(1392, 'СОБИРАТЬ', 8, 2),
(1393, 'ЖАТЬ', 4, 1),
(1394, 'SPREADSHEET', 11, 1),
(1395, 'ОКАЗАТЬСЯ', 9, 5),
(1396, 'ТЕКСТ', 5, 5),
(1397, 'ПОКАЗАТЕЛЬ', 10, 2),
(1398, '00000000', 8, 1),
(1399, 'ID', 2, 4),
(1400, 'ДЕЙСТВИТЕЛЬНО', 13, 5),
(1401, 'БРАТЬСЯ', 7, 1),
(1402, 'ДАВАТЬ', 6, 7),
(1403, 'КАВЫЧКА', 7, 1),
(1404, 'АДРЕСНЫЙ', 8, 1),
(1405, 'ОБХОД', 5, 2),
(1406, 'УКАЗАТЬ', 7, 2),
(1407, 'РНР', 3, 1),
(1408, 'ОТКРЫТЬ', 7, 1),
(1409, 'СЯК', 3, 1),
(1410, 'ПОДУМАТЬ', 8, 3),
(1411, 'ПРОЧИТАТЬ', 9, 5),
(1412, 'QUOTVIDEOSVIDEOSTATS_NUMBER_OF_PLAYSQUOT', 40, 1),
(1413, 'IMPORTXMLQUOTHTTPVIMEOCOMAPIV2VIDEO17589726XMLQUOT', 50, 1),
(1414, 'LTSTATS_NUMBER_OF_PLAYSGT', 25, 1),
(1415, 'УВИДЕТЬ', 7, 5),
(1416, 'ПОРЯДОК', 7, 5),
(1417, 'УКАЗЫВАТЬ', 9, 4),
(1418, 'ДРОБНЫЙ', 7, 3),
(1419, 'ТАКЖЕ', 5, 14),
(1420, 'СЛОЖНО', 6, 2),
(1421, 'HTTPGDATAYOUTUBECOMFEEDSAPIVIDEOS00000000V1ALTJSON', 50, 1),
(1422, 'СВОДНЫЙ', 7, 1),
(1423, 'ПРЕДЫСТОРИЯ', 11, 1),
(1424, 'СИНТАКСИС', 9, 1),
(1425, 'СТОИТЬ', 6, 5),
(1426, 'ПРАВО', 5, 4),
(1427, 'МИНУТА', 6, 1),
(1428, 'ВОДИТЬ', 6, 1),
(1429, 'ПАЛЕЦ', 5, 1),
(1430, 'РОЛИКОВЫЙ', 9, 2),
(1431, 'QUOTNOHEADERSQUOT', 17, 1),
(1432, 'QUOTENTRYYTSTATISTICSVIEWCOUNTQUOT', 34, 1),
(1433, 'IMPORTJSONQUOTHTTPGDATAYOUTUBECOMFEEDSAPIVIDEOSGRNZ0WWNOTCV2ALTJSONQUOT', 71, 1),
(1434, 'СЧИТАТЬ', 7, 5),
(1435, 'МЕНЕЕ', 5, 6),
(1436, 'УДАЧА', 5, 1),
(1437, 'КОРОТКИЙ', 8, 2),
(1438, 'ПРЕДЛАГАТЬ', 10, 3),
(1439, 'VIEWCOUNT', 9, 1),
(1440, 'АТРИБУТ', 7, 2),
(1441, 'TOOLS', 5, 1),
(1442, 'EDITOR', 6, 1),
(1443, 'CREATE', 6, 2),
(1444, 'ВРОДЕ', 5, 3),
(1445, 'НЕЧТО', 5, 2),
(1446, 'ФИКАТЬ', 6, 1),
(1447, 'GOOGLESHEET', 11, 1),
(1448, 'СДРУЖИТЬСЯ', 10, 1),
(1449, 'FOR', 3, 2),
(1450, 'ВОЗВРАЩАТЬСЯ', 12, 3),
(1451, 'ОБЪЕМ', 5, 3),
(1452, 'LTYTSTATISTICSGT', 16, 1),
(1453, 'СОХРАНЯТЬ', 9, 3),
(1454, 'ВСТАВЛЯТЬ', 9, 3),
(1455, 'ЗАГОТОВКА', 9, 1),
(1456, 'ПЕРЕИМЕНОВЫВАТЬ', 15, 1),
(1457, 'IMPORTJSONGS', 12, 1),
(1458, 'ПОИСКАТЬ', 8, 1),
(1459, 'IMPORTHTML', 10, 1),
(1460, 'СМУТИТЬ', 7, 1),
(1461, 'СЧЕТЧИК', 7, 1),
(1462, 'ВОССТАНОВИТЬ', 12, 1),
(1463, 'ВОССТАНОВЛЕНИЕ', 14, 2),
(1464, 'БЫЛЬ', 4, 7),
(1465, 'РАЗНОС', 6, 1),
(1466, 'УСТРОИТЬ', 8, 1),
(1467, 'ПРОЧЕЕ', 6, 2),
(1468, 'ВИДЕТЬ', 6, 5),
(1469, 'ОТНОШЕНИЕ', 9, 4),
(1470, 'ДЕЛО', 4, 5),
(1471, 'ГРУППА', 6, 4),
(1472, 'ПРЕТЕНЗИЯ', 9, 1),
(1473, 'СЛУЧИТЬСЯ', 9, 3),
(1474, 'БИТЬСЯ', 6, 1),
(1475, 'КАТАСТРОФИЧЕСКИЙ', 16, 1),
(1476, 'ВРУЧНУЮ', 7, 2),
(1477, 'ВЫДАТЬ', 6, 1),
(1478, 'ПОТЕРЯ', 6, 2),
(1479, 'НЕОДНОКРАТНО', 12, 1),
(1480, 'СУТКИ', 5, 1),
(1481, 'СЕРИАЛЬНЫЙ', 10, 1),
(1482, 'ВЫВОДИТЬ', 8, 1),
(1483, 'ОБНОВЛЯТЬ', 9, 1),
(1484, 'ПОТЕРЯТЬСЯ', 10, 1),
(1485, 'ПРОГРАММИРОВАТЬ', 15, 2),
(1486, 'СТУДИЯ', 6, 1),
(1487, 'АНИМАЦИОННЫЙ', 12, 1),
(1488, 'ВОЗНИКНУТЬ', 10, 3),
(1489, 'ОБЕСКУРАЖИТЬ', 12, 1),
(1490, 'ВОЗГЛАВЛЯТЬ', 11, 1),
(1491, 'СОВЕРШЕННО', 10, 1),
(1492, 'УЙТИ', 4, 2),
(1493, 'ДЕЯТЕЛЬНОСТЬ', 12, 1),
(1494, 'ХОТЬ', 4, 2),
(1495, 'УПРОВЕРЯТЬСЯ', 12, 1),
(1496, 'НЕМОЙ', 5, 6),
(1497, 'ПОДГЛЯДЕТЬ', 10, 1),
(1498, 'УДОБНЫЙ', 7, 5),
(1499, 'УДОБНО', 6, 4),
(1500, 'УТЯГИВАТЬ', 9, 1),
(1501, 'ЕВРО', 4, 1),
(1502, 'АКТУАЛЬНЫЙ', 10, 1),
(1503, 'ДОЛЛАР', 6, 2),
(1504, 'КУРС', 4, 2),
(1505, 'IMPORTDATA', 10, 1),
(1506, 'КАКОЙ', 5, 8),
(1507, 'API', 3, 6),
(1508, 'СТРАННИЦА', 9, 1),
(1509, 'ОПИСАНИЕ', 8, 6),
(1510, 'ИНВЕСТОР', 8, 1),
(1511, 'БАНАЛЬНЫЙ', 9, 2),
(1512, 'ПОТЕНЦИАЛЬНЫЙ', 13, 1),
(1513, 'ПОЛЕЗТЬ', 7, 1),
(1514, 'ВЫНИМАТЬ', 8, 1),
(1515, 'ТАБЛИЦА', 7, 4),
(1516, 'IMPORTFEED', 10, 1),
(1517, 'QUOTIMPORTXMLQUOT', 17, 1),
(1518, 'ПРАВИЛЬНО', 9, 2),
(1519, 'ПОДСКАЗКА', 9, 2),
(1520, 'КАК-ТО', 6, 2),
(1521, 'ПОМЯТОВАТЬ', 10, 1),
(1522, 'ПАРТНЕР', 7, 1),
(1523, 'ПРОВЕРИТЬ', 9, 3),
(1524, 'СТОЛЬ', 5, 3),
(1525, 'ЖЕЛАТЬ', 6, 2),
(1526, 'ЗАМОРАЧИВАТЬСЯ', 14, 1),
(1527, 'ВЕСЬМА', 6, 3),
(1528, 'ПОЙТИ', 5, 2),
(1529, 'МУЧИТЕЛЬНЫЙ', 11, 1),
(1530, 'КРИВОЙ', 6, 1),
(1531, 'НЕДАВНО', 7, 5),
(1532, 'НЕТОЧНО', 7, 1),
(1533, 'ТЕРЯТЬ', 6, 1),
(1534, 'МИЛЛИОН', 7, 3),
(1535, 'ДОРОГА', 6, 3),
(1536, 'СОБРАТЬ', 7, 2),
(1537, 'ПОТРАТИТЬ', 9, 3),
(1538, 'ЭКСПЕРИМЕНТ', 11, 2),
(1539, 'ВЫЯСНИТЬ', 8, 1),
(1540, 'HTTPVIMEOCOMAPIV2VIDEO00000000XML', 33, 1),
(1541, 'GOOGLEDOCS', 10, 1),
(1542, 'ИМПОРТ', 6, 1),
(1543, 'СЖАТИЕ', 6, 1),
(1544, 'ДВОЙКА', 6, 1),
(1545, 'ИНФОРМАЦИЯ', 10, 8),
(1546, 'АКС', 3, 1),
(1547, 'ХАОС', 4, 1),
(1548, 'ЗНАК', 4, 6),
(1549, 'КОДИРОВАНИЕ', 11, 1),
(1550, 'ЭНТРОПИЯ', 8, 1),
(1551, 'ЗНАКОВЫЙ', 8, 1),
(1552, 'РАСПОЛОЖЕНИЕ', 12, 1),
(1553, 'КР', 2, 1),
(1554, 'ФРАГМЕНТ', 8, 1),
(1555, 'ДЛИНА', 5, 2),
(1556, 'ВЕРОЯТНОСТЬ', 11, 1),
(1557, 'СЖАТЬ', 5, 1),
(1558, 'МАКСИМАЛЬНЫЙ', 12, 2),
(1559, '101', 3, 1),
(1560, 'АЛГОРИТМ', 8, 3),
(1561, 'АВТОР', 5, 1),
(1562, 'ЭБМ', 3, 1),
(1563, 'ПРЕДЕЛ', 6, 3),
(1564, 'БЕЗ', 3, 5),
(1565, 'ЭЛЕМЕНТ', 7, 2),
(1566, '20', 2, 3),
(1567, 'ЛОГАРИФМ', 8, 1),
(1568, 'ПОЯВЛЕНИЕ', 9, 1),
(1569, 'СРЕДИ', 5, 2),
(1570, 'ВЗЯТЬ', 5, 7),
(1571, 'ИЗЪЯТИЕ', 7, 1),
(1572, 'ДВОИЧНЫЙ', 8, 1),
(1573, 'СУЩЕСТВУЮЩИЙ', 12, 2),
(1574, 'ЛЮБОЙ', 5, 10),
(1575, 'СЖИМАТЬ', 7, 1),
(1576, 'СТРУКТУРА', 9, 7),
(1577, 'ЗАКОНОМЕРНОСТЬ', 14, 1),
(1578, 'ДАЛЬНЕЙШИЙ', 10, 1),
(1579, 'СЛУЧАЙНЫЙ', 9, 2),
(1580, 'ПЕРВОНАЧАЛЬНЫЙ', 14, 2),
(1581, 'СТЕПЕНЬ', 7, 1),
(1582, 'ТЕРЕТЬ', 6, 5),
(1583, 'Т', 1, 1),
(1584, 'ПРИВЕСТИ', 8, 5),
(1585, 'СЖАТЫЙ', 6, 1),
(1586, 'ДАТА-ЦЕНТР', 10, 1),
(1587, 'ПОНЯТИЕ', 7, 2),
(1588, 'МАЛЫЙ', 5, 1),
(1589, 'ГИГАБАЙТ', 8, 1),
(1590, 'ЗАМЕНИТЬ', 8, 4),
(1591, 'ВЫИГРЫШ', 7, 2),
(1592, 'ПРАКТИЧЕСКИЙ', 12, 7),
(1593, 'ПОСЛЕДОВАТЕЛЬНОСТЬ', 18, 2),
(1594, 'ДЛИННЫЙ', 7, 1),
(1595, 'ОСНОВА', 6, 2),
(1596, '000', 3, 2),
(1597, 'ВЫШЕУКАЗАННЫЙ', 13, 1),
(1598, 'ХОД', 3, 2),
(1599, 'АЛГОРИТМИЧЕСКИЙ', 15, 1),
(1600, '2001550', 7, 1),
(1601, 'СТАТЬ', 5, 7),
(1602, 'УМЕНЬШИТЬ', 9, 3),
(1603, 'ПЫТАТЬСЯ', 8, 4),
(1604, 'НИЧТОЖНО', 8, 1),
(1605, 'ВОПРОС', 6, 3),
(1606, 'МИЛЛИАРД', 8, 1),
(1607, 'СУЩЕСТВОВАТЬ', 12, 1),
(1608, 'СОХРАНИТЬ', 9, 3),
(1609, 'ФУНДАМЕНТАЛЬНЫЙ', 15, 1),
(1610, 'ПОВТОРНЫЙ', 9, 1),
(1611, 'БАЙТ', 4, 2),
(1612, '7610719618', 10, 1),
(1613, 'УЧИТЫВАТЬ', 9, 1),
(1614, 'ТЕОРЕТИЧЕСКИЙ', 13, 1),
(1615, 'АРИФМЕТИЧЕСКИЙ', 14, 2),
(1616, '11100012010000211', 17, 1),
(1617, 'РАВНЫЙ', 6, 2),
(1618, 'ЗНАКОМЫЙ', 8, 5),
(1619, 'ОБСУЖДЕНИЕ', 10, 1),
(1620, 'ШЕННОН', 6, 1),
(1621, 'ЭНТРОПИЙНЫЙ', 11, 1),
(1622, 'ВНОВЬ', 5, 1),
(1623, 'ФОРМУЛА', 7, 1),
(1624, '1201', 4, 1),
(1625, 'УБРАТЬ', 6, 2),
(1626, 'ВОСЬМЕРИЧНЫЙ', 12, 1),
(1627, 'СТРЕМИТЬСЯ', 10, 1),
(1628, 'ЗАПИСАТЬ', 8, 2),
(1629, 'КОЛМОГОРОВ', 10, 1),
(1630, 'ВЫЧИСЛЕНИЕ', 10, 2),
(1631, '11989680', 8, 1),
(1632, '1083', 4, 1),
(1633, 'УПЛОТНИТЬ', 9, 1),
(1634, 'ОПРЕДЕЛЕНИЕ', 11, 2),
(1635, 'СЖИМАТЬСЯ', 9, 1),
(1636, '7448185838', 10, 1),
(1637, 'КОНКРЕТНЫЙ', 10, 2),
(1638, '0125', 4, 1),
(1639, 'МАТЕМАТИЧЕСКИЙ', 14, 2),
(1640, 'СОСТОЯТЬ', 8, 4),
(1641, 'ВСЕЛЕННАЯ', 9, 1),
(1642, 'КАЗАТЬСЯ', 8, 4),
(1643, 'САНТИМЕТР', 9, 1),
(1644, 'АНКОЛМОГОРОВ', 12, 1),
(1645, 'СТЕН', 4, 1),
(1646, 'ВЗЯТЬСЯ', 7, 2),
(1647, '00', 2, 1),
(1648, 'H', 1, 1),
(1649, 'ПОЯВИТЬСЯ', 9, 3),
(1650, 'СВЯЗЬ', 5, 3),
(1651, 'ДОПУСТИМЫЙ', 10, 1);
INSERT INTO `words` (`id`, `value`, `length`, `weight`) VALUES
(1652, 'ЗЗ', 2, 1),
(1653, 'РАСПОЛОЖИТЬ', 11, 2),
(1654, 'ПРОГРАММИРОВАНИЕ', 16, 3),
(1655, 'Е', 1, 1),
(1656, 'ОТРЕЗКА', 7, 2),
(1657, '102', 3, 1),
(1658, 'ПРОЦЕНТ', 7, 1),
(1659, 'КРАТКИЙ', 7, 2),
(1660, 'ДЕНЬГА', 6, 1),
(1661, 'БИНАРНЫЙ', 8, 2),
(1662, 'ПОДВОХ', 6, 1),
(1663, 'ПОХИЩАТЬ', 8, 1),
(1664, 'ИССЛЕДОВАНИЕ', 12, 1),
(1665, 'НЕОГРАНИЧЕННЫЙ', 14, 1),
(1666, 'ДОКАЗАТЕЛЬСТВО', 14, 1),
(1667, 'СЛЕВА', 5, 1),
(1668, 'НАПРАВО', 7, 1),
(1669, 'ПРИНАДЛЕЖАТЬ', 12, 1),
(1670, 'ЗАКОННЫЙ', 8, 1),
(1671, 'АРИФМЕТИК', 9, 1),
(1672, 'ДОЛЯ', 4, 1),
(1673, 'ПРАВООБЛАДАТЕЛЬ', 15, 1),
(1674, 'ЗНАЧИТ', 6, 2),
(1675, 'ТРИ', 3, 3),
(1676, 'ВЗЛОМАТЬ', 8, 1),
(1677, 'НЮАНС', 5, 1),
(1678, 'O', 1, 1),
(1679, 'СОЛНЦЕ', 6, 1),
(1680, 'ЧЕЛОВЕЧЕСТВО', 12, 2),
(1681, 'ЛИТЕРАТУРА', 10, 1),
(1682, 'ПОЯВЛЯТЬСЯ', 10, 1),
(1683, 'ОБРАТНЫЙ', 8, 2),
(1684, 'АЗ', 2, 1),
(1685, 'ЦИФРОВОЙ', 8, 1),
(1686, 'ОБ', 2, 7),
(1687, 'НУЛЬ', 4, 1),
(1688, 'РАСЧЕТ', 6, 2),
(1689, 'ЧАСТÓТ', 6, 1),
(1690, 'УВЕЛИЧЕНИЕ', 10, 1),
(1691, 'ПЛАНЕТ', 6, 1),
(1692, 'ПОВТОРНО', 8, 1),
(1693, 'ЛИБО', 4, 3),
(1694, 'ХРАНЕНИЕ', 8, 4),
(1695, 'ЗЕМЛЯ', 5, 1),
(1696, 'АНАЛИЗ', 6, 2),
(1697, 'ПОСТЕПЕННО', 10, 1),
(1698, 'РЕЧЬ', 4, 3),
(1699, 'ВИДИМЫЙ', 7, 1),
(1700, 'КОЛОССАЛЬНЫЙ', 12, 1),
(1701, 'СУПЕРСЖАТИЕ', 11, 1),
(1702, 'РАСПРЕДЕЛЕНИЕ', 13, 1),
(1703, 'ВЫЧИСЛИТЕЛЬНЫЙ', 14, 1),
(1704, 'СЛОЖНОСТЬ', 9, 1),
(1705, 'ПОЗВОЛЯТЬ', 9, 12),
(1706, 'ПРОБЛЕМАТИКА', 12, 1),
(1707, 'ВСЯКИЙ', 6, 2),
(1708, 'ТЕОРЕМА', 7, 1),
(1709, '2008', 4, 1),
(1710, 'СОГЛАСНО', 8, 1),
(1711, 'СЛЕДОВАТЬ', 9, 6),
(1712, 'ВЫШЕСКАЗАННЫЙ', 13, 1),
(1713, 'ВСЕЛЕНСКИЙ', 10, 1),
(1714, 'Г', 1, 1),
(1715, 'ОЧЕРЕДНОЙ', 9, 1),
(1716, 'ПЕРВООСНОВА', 11, 1),
(1717, 'РАЗЛИЧНЫЙ', 9, 5),
(1718, 'ИСПОЛЬЗОВАНИЕ', 13, 12),
(1719, 'ЭЛЕМЕНТАРНО', 11, 1),
(1720, 'ТРАТИТЬ', 7, 4),
(1721, 'КРИТИЧНЫЙ', 9, 1),
(1722, 'ДРАГОЦЕННЫЙ', 11, 1),
(1723, 'УДОСТОВЕРИТЬСЯ', 14, 1),
(1724, 'ЗАМЕДЛЯТЬ', 9, 1),
(1725, 'ГАРОЛЬД', 7, 1),
(1726, 'СУЩЕСТВЕННО', 11, 1),
(1727, 'ЧАС', 3, 1),
(1728, 'ТЕЧЕНИЕ', 7, 1),
(1729, 'PERSON', 6, 1),
(1730, 'ПРИВЫЧНЫЙ', 9, 3),
(1731, 'НАРУШИТЬ', 8, 1),
(1732, 'ТОЛКОВЫЙ', 8, 1),
(1733, 'ВЕЩИЙ', 5, 4),
(1734, 'КО', 2, 3),
(1735, 'СТАБИЛЬНОСТЬ', 12, 1),
(1736, 'ПРЕДЛОЖЕНИЕ', 11, 1),
(1737, 'БЫСТРЫЙ', 7, 7),
(1738, 'ЯЗЫК', 4, 7),
(1739, 'ПОДОРВАТЬ', 9, 1),
(1740, 'АРИФМЕТИКА', 10, 1),
(1741, 'ВЕЧНЫЙ', 6, 1),
(1742, 'ПРОВЕРЯТЬ', 9, 3),
(1743, 'РАВНО', 5, 3),
(1744, 'ПРИКРЫТИЕ', 9, 1),
(1745, 'СЕЯТЬ', 5, 1),
(1746, 'МОЛОДАЯ', 7, 1),
(1747, 'ГЕНИЙ', 5, 1),
(1748, 'INTEREST', 8, 1),
(1749, 'S02E11', 6, 1),
(1750, 'OF', 2, 2),
(1751, 'ЛИСТОЧЕК', 8, 1),
(1752, '1963', 4, 1),
(1753, 'ИНОСТРАННЫЙ', 11, 1),
(1754, '830', 3, 1),
(1755, 'HTTPCOMPRESSIONRUDOWNLOADARTICLESTIKOLMOGOROV_1965_THREE_WAY_PDFRAR', 67, 1),
(1756, 'МАЛИНЕЦКИЙ', 10, 1),
(1757, 'ИЗД-ВЫЙ', 7, 1),
(1758, 'ОСУЩЕСТВЛЕНИЕ', 13, 1),
(1759, 'ОТНЮДЬ', 6, 1),
(1760, '200', 3, 3),
(1761, 'ПОГРУЗИТЬСЯ', 11, 1),
(1762, 'РАЗМЫШЛЕНИЕ', 11, 1),
(1763, 'КИБЕРНЕТИК', 10, 1),
(1764, 'МЕГАБАЙТ', 8, 1),
(1765, 'ОБУСЛОВИТЬ', 10, 1),
(1766, 'ЕСТЕСТВЕННО', 11, 1),
(1767, 'УРСС', 4, 1),
(1768, '2001', 4, 1),
(1769, 'ПОВТОРИТЬ', 9, 1),
(1770, 'ИЗД', 3, 1),
(1771, 'ВЫРАЖЕНИЕ', 9, 3),
(1772, 'НЕЛИНЕЙНЫЙ', 10, 2),
(1773, 'ДИНАМИК', 7, 1),
(1774, 'РАЗЪЯСНИТЬ', 10, 1),
(1775, '3-Е', 3, 1),
(1776, 'ЗАСТАИВАТЬСЯ', 12, 1),
(1777, 'РАСКРЫТЬ', 8, 1),
(1778, 'ПРИМЕНЯТЬ', 9, 2),
(1779, 'ЭТАП', 4, 3),
(1780, 'ВВЕРГНУТЬ', 9, 1),
(1781, 'НИ', 2, 8),
(1782, 'СКОРЫЙ', 6, 4),
(1783, 'ЗАРАНЕЕ', 7, 1),
(1784, 'КОММЕНТАРИЙ', 11, 4),
(1785, 'РАЗГРОМНЫЙ', 10, 1),
(1786, 'ОБЫЧНО', 6, 4),
(1787, 'БЕЗДОКАЗАТЕЛЬНЫЙ', 16, 1),
(1788, 'ИЗВЕСТНЫЙ', 9, 5),
(1789, 'ПОВИННЫЙ', 8, 1),
(1790, 'БОЛЕЗНЕННЫЙ', 11, 1),
(1791, 'ПРОДАВАТЬ', 9, 1),
(1792, 'ЗАСЕКРЕТИТЬ', 11, 1),
(1793, 'ОБЪЕДИНИТЬ', 10, 2),
(1794, 'НЕСЖИМАЕМЫЙ', 11, 1),
(1795, 'СОЕДИНИТЬ', 9, 1),
(1796, 'СПОСОБ', 6, 6),
(1797, 'МЫШЛЕНИЕ', 8, 1),
(1798, 'ПРАВДА', 6, 3),
(1799, 'УПЛОТНЯТЬСЯ', 11, 1),
(1800, 'ОГРАНИЧЕННЫЙ', 12, 3),
(1801, 'УПЛОТНЕНИЕ', 10, 1),
(1802, 'НАПИСАНИЕ', 9, 8),
(1803, 'ПОЗДНИЙ', 7, 4),
(1804, 'ОСИЛИТЬ', 7, 1),
(1805, 'ПРИЗНАТЬ', 8, 1),
(1806, 'ЧЕСТНО', 6, 1),
(1807, 'ДОЧИТАТЬ', 8, 1),
(1808, 'КОМБИНАТОРНЫЙ', 13, 1),
(1809, 'РАССМАТРИВАТЬСЯ', 15, 1),
(1810, 'ОКОЛО', 5, 2),
(1811, 'СТРОГИЙ', 7, 1),
(1812, '099995', 6, 1),
(1813, 'ЗАНЯТЬ', 6, 2),
(1814, 'СТАТИСТИЧЕСКИЙ', 14, 1),
(1815, 'ВКРАТЦЕ', 7, 1),
(1816, 'ХАОТИЧНЫЙ', 9, 1),
(1817, 'УПОРЯДОЧИТЬ', 11, 1),
(1818, 'МЕРА', 4, 3),
(1819, 'НАУЧНЫЙ', 7, 1),
(1820, 'ЖУРНАЛ', 6, 1),
(1821, 'НОБЕЛЕВКА', 9, 1),
(1822, 'МЫСЛЕННЫЙ', 9, 1),
(1823, 'ХАОТИЧЕСКИЙ', 11, 1),
(1824, 'ДОКАЗЫВАТЬ', 10, 1),
(1825, 'СОПОСТАВЛЕНИЕ', 13, 1),
(1826, 'ПЕРЕСКАЗАТЬ', 11, 1),
(1827, 'ВЗАИМООДНОЗНАЧНЫЙ', 17, 1),
(1828, 'ИЗЛОЖЕНИЕ', 9, 1),
(1829, 'ПРОВОДИТЬ', 9, 2),
(1830, 'КОЭФФИЦИЕНТ', 11, 1),
(1831, 'ПРОХОД', 6, 1),
(1832, 'МОЩНОСТЬ', 8, 1),
(1833, 'МЕНЬШИЙ', 7, 2),
(1834, 'ОПЯТЬ-ТАКИ', 10, 1),
(1835, 'ОКРУГЛЯТЬ', 9, 1),
(1836, 'КОРОЧА', 6, 1),
(1837, 'ИСХОДНЫЙ', 8, 4),
(1838, 'ДОКАЗАТЬ', 8, 1),
(1839, 'НАЙТИСЬ', 7, 2),
(1840, 'КОЛМОГОРОВСКИЙ', 14, 1),
(1841, 'ИНСТРУМЕНТАРИЙ', 14, 1),
(1842, 'БОЛЬШОЙ', 7, 4),
(1843, 'ОГРАНИЧЕНИЕ', 11, 1),
(1844, 'COMPRESSIONRUDOWNLOADARTICLESTIKOLMOGOROV_1965_THREE_WAY_PDFRAR', 63, 1),
(1845, 'КИЛОБАЙТ', 8, 3),
(1846, '100', 3, 5),
(1847, 'СМОЧЬ', 5, 6),
(1848, '375000', 6, 1),
(1849, 'ЛЮБА', 4, 6),
(1850, 'Π', 1, 1),
(1851, 'WWWCOMPRESSIONRUARCTESTDESCRIPTCOMP-HISTHTM', 43, 1),
(1852, 'ШЕЯ', 3, 1),
(1853, 'НАЧИНАЕТСЯSILICON', 17, 1),
(1854, 'УГОЛОК', 6, 1),
(1855, 'АДРЕНАЛИН', 9, 1),
(1856, 'ПРОСВЕЩЕННЫЙ', 12, 1),
(1857, 'МАКСИМАЛЬНО', 11, 1),
(1858, 'ПРОЧИЙ', 6, 1),
(1859, 'ИНТЕЛЛЕКТУАЛЬНЫЙ', 16, 1),
(1860, 'АВТОРСКИЙ', 9, 1),
(1861, 'VALLEY', 6, 1),
(1862, 'СТАРТАП', 7, 1),
(1863, 'ОТВЕТИТЬ', 8, 3),
(1864, 'ГЛУХАЯ', 6, 1),
(1865, 'BASIC', 5, 1),
(1866, 'НЕЖЕЛИ', 6, 1),
(1867, 'НЕДОВОЛЬСТВО', 12, 1),
(1868, 'СЕГМЕНТ', 7, 1),
(1869, 'ВИДНО', 5, 3),
(1870, 'ПРЕДМЕТНЫЙ', 10, 1),
(1871, 'ВЫЛОЖИТЬ', 8, 1),
(1872, 'РУССКОЯЗЫЧНЫЙ', 13, 2),
(1873, 'ВВОДИТЬ', 7, 1),
(1874, 'БЕСКОНЕЧНОСТЬ', 13, 1),
(1875, 'ЭЛЕКТРОННЫЙ', 11, 1),
(1876, 'ДОБАВЛЯТЬ', 9, 9),
(1877, 'МУЗЫКА', 6, 2),
(1878, 'FAQ', 3, 1),
(1879, 'ЗАМЕЧАНИЕ', 9, 1),
(1880, 'PENDING', 7, 1),
(1881, 'КРИТИЧЕСКИЙ', 11, 1),
(1882, 'ВСЕРЬЕЗ', 7, 1),
(1883, 'КОРЫСТНЫЙ', 9, 1),
(1884, 'ОТКРЫТИЕ', 8, 2),
(1885, 'НЕВОЗМОЖНОСТЬ', 13, 2),
(1886, 'ОБСУЖДАТЬ', 9, 2),
(1887, 'КНИГА', 5, 4),
(1888, 'PATENTS', 7, 1),
(1889, 'ПОВЫСИТЬ', 8, 2),
(1890, 'ИЗОБРАЖЕНИЕ', 11, 3),
(1891, 'УВЕЛИЧИТЬ', 9, 2),
(1892, 'СОБСТВЕННОСТЬ', 13, 1),
(1893, 'УЧЕБНЫЙ', 7, 1),
(1894, 'ИЛЛЮСТРАЦИЯ', 11, 2),
(1895, 'КАРТИНКА', 8, 2),
(1896, 'СЕЙЧАС', 6, 7),
(1897, 'КАЧЕСТВО', 8, 7),
(1898, 'ВЕРОЛОМНЫЙ', 10, 1),
(1899, 'ОТКУДА', 6, 1),
(1900, 'ТРИЛЛИОН', 8, 1),
(1901, 'МОБИЛЬНЫЙ', 9, 2),
(1902, 'СОЗДАВАТЬСЯ', 11, 1),
(1903, 'НАСЧИТЫВАТЬСЯ', 13, 1),
(1904, 'НЕХВАТКА', 8, 1),
(1905, '25', 2, 1),
(1906, '500', 3, 1),
(1907, 'ОБРАТНО', 7, 2),
(1908, 'ПЛУТОН', 6, 1),
(1909, 'ТУДА', 4, 2),
(1910, 'ВЫСТАВИТЬ', 9, 1),
(1911, 'КОМПАКТ-ДИСК', 12, 1),
(1912, 'ЕЖЕДНЕВНО', 9, 2),
(1913, 'УТЕРЯТЬ', 7, 1),
(1914, 'ОЦЕНКА', 6, 1),
(1915, '487', 3, 1),
(1916, '2011', 4, 1),
(1917, 'БЕССИЛЬНЫЙ', 10, 1),
(1918, 'ЭФФЕКТИВНЫЙ', 11, 2),
(1919, 'ВЗРЫВ', 5, 1),
(1920, 'СГЕНЕРИРОВАТЬ', 13, 2),
(1921, '18', 2, 2),
(1922, 'ПОНИМАТЬ', 8, 5),
(1923, 'СУДЯ', 4, 2),
(1924, 'БЕССЛЕДНО', 9, 1),
(1925, 'ТРЛН', 4, 1),
(1926, '2012', 4, 1),
(1927, 'НЕВЕРНЫЙ', 8, 2),
(1928, 'ТЕПЛО', 5, 2),
(1929, 'АТМОСФЕРА', 9, 1),
(1930, 'МАТРИЦА', 7, 1),
(1931, 'СООТВЕТСТВУЮЩИЙ', 15, 4),
(1932, 'ВЫДЕЛЯТЬ', 8, 2),
(1933, 'ПОТРЕБЛЯТЬ', 10, 2),
(1934, 'ОГРОМНЫЙ', 8, 3),
(1935, 'ЭНЕРГИЯ', 7, 1),
(1936, 'ОТДЫХАТЬ', 8, 1),
(1937, 'ОБУЗДАТЬ', 8, 1),
(1938, 'ПРОРЫВ', 6, 1),
(1939, 'ЗАХОДИТЬ', 8, 2),
(1940, 'ТУПИК', 5, 1),
(1941, 'ПОТРЕБНОСТЬ', 11, 1),
(1942, 'НАСУЩНЫЙ', 8, 1),
(1943, 'ПОЧЕМУ-ТО', 9, 2),
(1944, 'НЕПРЕРЫВНО', 10, 1),
(1945, 'ЭЛЕКТРОНИКА', 11, 1),
(1946, 'УВЕЛИЧИВАТЬ', 11, 2),
(1947, 'ГИГАНТСКИЙ', 10, 1),
(1948, 'СООРУЖЕНИЕ', 10, 1),
(1949, 'ПОСТОЯННО', 9, 3),
(1950, 'АВТ', 3, 1),
(1951, 'СТАНОВИТЬСЯ', 11, 4),
(1952, 'ПЛАВУЧИЙ', 8, 1),
(1953, 'УВЫ', 3, 1),
(1954, 'МАССА', 5, 1),
(1955, 'ОКЕАН', 5, 1),
(1956, 'МИРОВОЙ', 7, 1),
(1957, 'СУША', 4, 1),
(1958, 'ПЕРЕПРАВЛЯТЬСЯ', 14, 1),
(1959, 'СЛУЖЕБНЫЙ', 9, 1),
(1960, 'ЗАВЛЕКАТЬ', 9, 1),
(1961, 'НАЗАД', 5, 5),
(1962, 'СХОДИТЬ', 7, 1),
(1963, 'РЕВОЛЮЦИОННЫЙ', 13, 1),
(1964, 'ДОСЕЛЕ', 6, 1),
(1965, 'БУРНО', 5, 1),
(1966, 'ПРОХОДИТЬ', 9, 3),
(1967, 'КАМЕНЬ', 6, 2),
(1968, 'СПОТЫКАТЬСЯ', 11, 1),
(1969, 'ИЗУЧЕНИЕ', 8, 2),
(1970, 'ЗАИНТЕРЕСОВАТЬСЯ', 16, 1),
(1971, 'ХЕШ-СУММА', 9, 1),
(1972, 'ГЕНЕРАТОР', 9, 1),
(1973, 'КОМБИНАЦИЯ', 10, 3),
(1974, 'ПРЕДЛАГАТЬСЯ', 12, 1),
(1975, 'СТАЛКИВАТЬСЯ', 12, 3),
(1976, 'АРХИВАТОР', 9, 1),
(1977, 'БУРНЫЙ', 6, 1),
(1978, 'ОЗНАКОМИТЬСЯ', 12, 2),
(1979, 'ОСОБО', 5, 1),
(1980, 'УПЕРЕТЬ', 7, 1),
(1981, 'ПЕРВООТКРЫВАТЕЛЬ', 16, 1),
(1982, 'СОВЕТОВАТЬ', 10, 2),
(1983, 'ЭКСПЕРТ', 7, 1),
(1984, 'МНОГОЧИСЛЕННЫЙ', 14, 1),
(1985, 'ПЕРВОПРОХОДЕЦ', 13, 1),
(1986, 'СУЩЕСТВЕННЫЙ', 12, 1),
(1987, 'РАВНОМЕРНЫЙ', 11, 1),
(1988, 'СКОЛЬКО-НИБУДЬ', 14, 1),
(1989, 'УДАТЬСЯ', 7, 2),
(1990, 'ОЧЕРЕДЬ', 7, 4),
(1991, 'ВЫЧИСЛЯТЬСЯ', 11, 2),
(1992, 'ВЕРНОСТЬ', 8, 2),
(1993, 'УТВЕРЖДЕНИЕ', 11, 1),
(1994, 'ЗААРХИВИРОВАТЬ', 14, 1),
(1995, 'RAR', 3, 1),
(1996, 'БУДЬ-ТО', 7, 1),
(1997, 'ZIP', 3, 1),
(1998, 'ОГРАНИЧИВАТЬСЯ', 14, 1),
(1999, 'ГРУСТЬ', 6, 1),
(2000, 'УСРЕДНЕНИЕ', 10, 1),
(2001, 'ЧАСТОТА', 7, 2),
(2002, 'ЗАКОДИРОВАТЬ', 12, 1),
(2003, 'ОСНОВАТЬ', 8, 1),
(2004, 'БАЗИРОВАТЬСЯ', 12, 2),
(2005, 'НАСКОК', 6, 1),
(2006, 'ВСТРЕЧАТЬСЯ', 11, 2),
(2007, 'ДОСТИГАТЬ', 9, 1),
(2008, 'ГЛАЗ', 4, 2),
(2009, 'ОДИНАКОВЫЙ', 10, 3),
(2010, 'ОТДЕЛЬНЫЙ', 9, 6),
(2011, 'ОСУЩЕСТВИТЬ', 11, 1),
(2012, 'СОКРАЩЕНИЕ', 10, 1),
(2013, 'ПРЕКРАТИТЬ', 10, 1),
(2014, 'ПРОБИТЬ', 7, 1),
(2015, 'СОБЛЮДАТЬСЯ', 11, 1),
(2016, 'ВНЕ', 3, 2),
(2017, 'УНИКАЛЬНОСТЬ', 12, 2),
(2018, 'ОТРИЦАТЕЛЬНЫЙ', 13, 1),
(2019, '2965-296', 8, 1),
(2020, 'БИТОВЫЙ', 7, 1),
(2021, 'ТИП', 3, 6),
(2022, 'ВНОСИТЬ', 7, 2),
(2023, 'УПОРЯДОЧЕННОСТЬ', 15, 1),
(2024, 'БАНКА', 5, 1),
(2025, 'ДАЛЕКИЙ', 7, 2),
(2026, 'ХАКЕР', 5, 1),
(2027, '0128-01285', 10, 1),
(2028, 'ПРОДЕЛАТЬ', 9, 2),
(2029, 'ЗОНА', 4, 1),
(2030, 'ВСТАВКА', 7, 2),
(2031, 'ОБНАРУЖИТЬСЯ', 12, 1),
(2032, 'ЗАПРЕТНЫЙ', 9, 1),
(2033, 'ОПРЕДЕЛЯТЬ', 10, 1),
(2034, '201', 3, 1),
(2035, 'ЗАТЕМ', 5, 3),
(2036, '01', 2, 1),
(2037, 'ЗВЕЗДОЧКА', 9, 2),
(2038, 'УМЕНЬШАТЬ', 9, 1),
(2039, 'УБИРАТЬ', 7, 1),
(2040, '111H0101H0011', 13, 1),
(2041, '111000101000011', 15, 1),
(2042, '00000000000200', 14, 1),
(2043, 'ВЫШЕИЗЛОЖЕННЫЙ', 14, 1),
(2044, 'ФРАГМЕНТА111H01201H00211', 24, 1),
(2045, 'УЧЕТ', 4, 2),
(2046, 'ТЕПЛОВ', 6, 1),
(2047, 'СМЕРТЬ', 6, 1),
(2048, '163617', 6, 1),
(2049, 'ЗАТО', 4, 3),
(2050, '54539', 5, 1),
(2051, 'ИЗЪЯТЬ', 6, 1),
(2052, '8-РИЧНЫЙ', 8, 1),
(2053, 'РАЗМЕЩЕНИЕ', 10, 1),
(2054, 'УДАЛЕНИЕ', 8, 1),
(2055, '7610719618-74481858381625337798', 31, 1),
(2056, 'УМЕНЬШЕНИЕ', 10, 2),
(2057, 'СОСТАВИТЬ', 9, 2),
(2058, 'РАЗНОСТЬ', 8, 2),
(2059, '7448185', 7, 1),
(2060, 'ПРЕВРАТИТЬ', 10, 2),
(2061, '7-РИЧНЫЙ', 8, 1),
(2062, 'АЛФАВИТ', 7, 1),
(2063, '2960509361', 10, 1),
(2064, 'ОБОЗНАЧАТЬ', 10, 1),
(2065, '1767350', 7, 1),
(2066, 'МАНИПУЛЯЦИЯ', 11, 1),
(2067, '13757030', 8, 1),
(2068, 'ЗАПИСЫВАТЬ', 10, 4),
(2069, 'БУМАЖКА', 7, 1),
(2070, 'ПОДОБРАТЬ', 9, 2),
(2071, '3-БИТНЫЙ', 8, 1),
(2072, '1712811', 7, 1),
(2073, 'СООТВЕТСТВЕННО', 14, 2),
(2074, 'МАШИННЫЙ', 8, 2),
(2075, 'ПРЕВРАТИТЬСЯ', 12, 1),
(2076, '10101', 5, 1),
(2077, 'ПРОДВИГАТЬСЯ', 12, 1),
(2078, 'НАСТОЛЬКО', 9, 2),
(2079, 'ШУТКА', 5, 2),
(2080, 'РАНЕЕ', 5, 2),
(2081, 'КАКОЙ-ЛИБО', 10, 2),
(2082, 'ВНИМАТЕЛЬНО', 11, 1),
(2083, 'НЕКИЙ', 5, 5),
(2084, 'АТОМ', 4, 1),
(2085, 'КРОЛИЧИЙ', 8, 1),
(2086, 'НОРА', 4, 1),
(2087, 'КРОЛИК', 6, 1),
(2088, 'ИНТЕРЕСНО', 9, 7),
(2089, 'БЕЛЫЕ', 5, 1),
(2090, 'ПЯТНО', 5, 1),
(2091, 'ПОПРОСТУ', 8, 3),
(2092, 'ЧЕГО', 4, 5),
(2093, 'ИЗУЧИТЬ', 7, 1),
(2094, 'ПРИСТАЛЬНО', 10, 1),
(2095, 'РАССМАТРИВАТЬ', 13, 3),
(2096, 'ИДЕАЛЬНЫЙ', 9, 3),
(2097, 'НАХОДИТЬ', 8, 2),
(2098, 'БРЕШЬ', 5, 1),
(2099, 'ПРОТИВОПОЛОЖНЫЙ', 15, 1),
(2100, 'ПОДХОДИТЬ', 9, 2),
(2101, 'ПЛОСКОСТЬ', 9, 1),
(2102, 'СФЕРА', 5, 1),
(2103, 'ПОДДАВАТЬСЯ', 11, 2),
(2104, 'НИКАКОЙ', 7, 2),
(2105, 'СОСТОЯНИЕ', 9, 4),
(2106, 'ОЧЕВИДНО', 8, 3),
(2107, 'ДОЛЖНЫЙ', 7, 8),
(2108, '111000LT101GT000011', 19, 1),
(2109, 'СНАЧАЛА', 7, 4),
(2110, 'НАПОДОБИЕ', 9, 3),
(2111, '110101', 6, 1),
(2112, '1110001201000011', 16, 1),
(2113, 'ПРЕДЫДУЩИЙ', 10, 3),
(2114, 'КРОМЕ', 5, 6),
(2115, '234200', 6, 1),
(2116, 'СВЕДЕНИЕ', 8, 1),
(2117, '2001550-2342001767350', 21, 1),
(2118, 'ОБНАРУЖИТЬ', 10, 2),
(2119, '010', 3, 1),
(2120, 'АКТИВНЫЙ', 8, 1),
(2121, 'КОДОВЫЙ', 7, 1),
(2122, 'ПОСРЕДИНЕ', 9, 1),
(2123, 'БОК', 3, 1),
(2124, 'ПОСЛЕДОВАТЕЛЬНО', 15, 2),
(2125, 'ЗАМЕНЯТЬ', 8, 2),
(2126, '111000110101000010111', 21, 1),
(2127, '1110001LT101GT010000LT101GT11', 29, 1),
(2128, '3320810439', 10, 1),
(2129, '20015502000000001000775', 23, 1),
(2130, 'ВЫДЕЛЕНИЕ', 9, 2),
(2131, 'QUOTLTQUOT', 10, 1),
(2132, 'QUOTGTQUOT', 10, 1),
(2133, '1625337798-163617-1083220189', 28, 1),
(2134, 'ВНЕШНИЙ', 7, 3),
(2135, 'МОНТИРОВАНИЕ', 12, 1),
(2136, 'ДОСТУП', 6, 8),
(2137, 'ANDROID', 7, 1),
(2138, 'FILE', 4, 2),
(2139, 'ВНУТРЕННИЙ', 10, 2),
(2140, 'ВСТРОИТЬ', 8, 1),
(2141, 'COLUMNS', 7, 1),
(2142, 'NULL', 4, 4),
(2143, 'ПОИСК', 5, 8),
(2144, 'ХЭШ', 3, 1),
(2145, 'MOUNT', 5, 1),
(2146, 'ОКРУЖЕНИЕ', 9, 1),
(2147, 'RAWSECONDARYSTORAGESSTR', 23, 1),
(2148, 'STORAGE', 7, 1),
(2149, 'STRINGBUILDER', 13, 1),
(2150, 'TESTANDADDCOLUMNS1', 18, 1),
(2151, 'MAPPPATH', 8, 1),
(2152, 'СТАНДАРТНЫЙ', 11, 6),
(2153, 'SETBASEPATHSTORAGESGET0GETPATH', 30, 1),
(2154, 'ДИРЕКТОРИЯ', 10, 2),
(2155, 'STORAGES', 8, 1),
(2156, 'STORAGEHELPERGETINSTANCE', 24, 1),
(2157, 'LINUX', 5, 1),
(2158, 'LIST', 4, 2),
(2159, 'ENVIRONMENT', 11, 1),
(2160, 'MOUNTDEVICETYPEREMOVABLE_SD_CARD', 32, 1),
(2161, 'RAWSECONDARYSTORAGES', 20, 1),
(2162, 'MOUNTDEVICETYPEEXTERNAL_SD_CARD', 31, 1),
(2163, 'STACKOVERFLOW', 13, 2),
(2164, 'КОНФИГУРАЦИЯ', 12, 6),
(2165, 'QUOT', 4, 2),
(2166, 'COLUMNSLENGTH', 13, 1),
(2167, 'LINESPLITQUOT', 13, 1),
(2168, 'ЗАМЕЧАТЬ', 8, 1),
(2169, 'CONTINUE', 8, 1),
(2170, 'STORAGEHELPER', 13, 1),
(2171, 'ВЫЧИСЛЯТЬ', 9, 2),
(2172, 'ТОЧНЫЙ', 6, 3),
(2173, 'PUBLIC', 6, 7),
(2174, 'ПАПКА', 5, 4),
(2175, 'INTERNAL', 8, 1),
(2176, 'ГУГЛ', 4, 1),
(2177, 'ХРАНИЛИЩЕ', 9, 1),
(2178, 'EXTERNAL', 8, 1),
(2179, 'THE', 3, 3),
(2180, 'CARD', 4, 1),
(2181, 'ДЕНЬ', 4, 2),
(2182, 'ДРОБЛЕНИЕ', 9, 1),
(2183, 'ПОСТАРАТЬСЯ', 11, 1),
(2184, 'LINECONTAINSQUOTFUSEQUOT', 24, 1),
(2185, 'INTERNALEXTERNAL', 16, 1),
(2186, 'НИГДЕ', 5, 2),
(2187, 'MOUNTCONCATCOLUMNS1', 19, 1),
(2188, 'РАЗМЕСТИТЬ', 10, 1),
(2189, 'QUOTNQUOT', 9, 1),
(2190, 'FINALLY', 7, 1),
(2191, 'ДУБЛИРОВАНИЕ', 12, 1),
(2192, 'КАРТИНА', 7, 1),
(2193, 'STORAGEEMULATED0', 16, 1),
(2194, 'STORAGESDCARD0', 14, 1),
(2195, 'CATCH', 5, 1),
(2196, 'EXCEPTION', 9, 1),
(2197, 'E', 1, 3),
(2198, 'STORAGEEMULATEDLEGACY', 21, 1),
(2199, 'ИТАК', 4, 6),
(2200, 'UPD1', 4, 1),
(2201, 'ТЕРМИНОЛОГИЯ', 12, 2),
(2202, 'FILLDEVICESPROCESSTRY', 21, 1),
(2203, 'RUNTIMEGETRUNTIME', 17, 1),
(2204, 'PROC', 4, 1),
(2205, 'TRY', 3, 1),
(2206, 'RUNTIMEEXECQUOTMOUNTQUOT', 24, 1),
(2207, 'BITBUCKET', 9, 1),
(2208, 'УЧЕСТЬ', 6, 1),
(2209, 'ОПРЕДЕЛЯТЬСЯ', 12, 2),
(2210, 'СМОТНТИРОВАТЬ', 13, 1),
(2211, 'IS', 2, 3),
(2212, 'PROCGETINPUTSTREAM', 18, 1),
(2213, 'LINECONTAINSQUOTSECUREQUOT', 26, 1),
(2214, 'LINECONTAINSQUOTASECQUOT', 24, 1),
(2215, 'LINECONTAINSQUOTFATQUOT', 23, 1),
(2216, 'НАЧИНАТЬСЯ', 10, 4),
(2217, 'TF', 2, 1),
(2218, 'BRREADLINE', 10, 1),
(2219, 'LINE', 4, 1),
(2220, 'ISR', 3, 1),
(2221, 'INPUTSTREAMREADERIS', 19, 1),
(2222, 'BR', 2, 1),
(2223, 'WHILE', 5, 1),
(2224, 'BUFFEREDREADERISR', 17, 1),
(2225, 'BEAN', 4, 1),
(2226, 'TMPHASHTOSTRINGHASHCODE', 23, 1),
(2227, 'MPREFERENCESCONTAINSPREFS_BASEBATH', 34, 1),
(2228, 'РАССУЖДЕНИЕ', 11, 1),
(2229, 'СОХРАНЯТЬСЯ', 11, 2),
(2230, 'TMPHASHAPPENDFILELENGTH', 23, 1),
(2231, 'TMPHASHAPPENDDIRGETUSABLESPACE', 30, 1),
(2232, 'ПОНИМАНИЕ', 9, 3),
(2233, 'DIRLISTFILES', 12, 1),
(2234, 'FILEISFILE', 10, 1),
(2235, 'TMPHASHAPPENDFILEGETNAME', 24, 1),
(2236, 'ПОДРОБНЫЙ', 9, 2),
(2237, 'GETEXTERNALMOUNTEDDEVICESSIZE', 29, 1),
(2238, 'СОРЕВНОВАНИЕ', 12, 1),
(2239, 'ВЫТАСКИВАТЬ', 11, 1),
(2240, 'СОХРАННЕНЫЙ', 11, 1),
(2241, 'MPREFERENCESGETSTRINGPREFS_BASEBATH', 35, 1),
(2242, 'MBASEPATH', 9, 1),
(2243, 'СТОЛКНУТЬСЯ', 11, 1),
(2244, 'GETFILESDIRGETPARENT', 20, 1),
(2245, 'БАЗА', 4, 6),
(2246, 'ARRAYLISTLTMOUNTDEVICEGT', 24, 1),
(2247, 'GETREMOVABLEMOUNTEDDEVICES', 26, 1),
(2248, 'STORAGESSIZE', 12, 1),
(2249, 'СЪЕМНЫЙ', 7, 1),
(2250, 'TMPHASHAPPENDDIRGETTOTALSPACE', 29, 1),
(2251, 'TMPHASH', 7, 1),
(2252, 'ИДЕНТИЧНОСТЬ', 12, 1),
(2253, 'ТУГОЙ', 5, 1),
(2254, 'ПОДСМОТРЕТЬ', 11, 1),
(2255, 'ПРОВЕДЕНИЕ', 10, 1),
(2256, 'РАЗРАБАТЫВАТЬ', 13, 4),
(2257, 'ПОДРОБНО', 8, 4),
(2258, 'CONTEXT', 7, 1),
(2259, 'МНОГОПОЛЬЗОВАТЕЛЬСКИЙ', 21, 1),
(2260, 'РЕЖИМ', 5, 2),
(2261, 'HASH', 4, 1),
(2262, 'CALCHASHPRIVATE', 15, 1),
(2263, 'DIR', 3, 1),
(2264, 'CALCHASHFILE', 12, 1),
(2265, 'КАТАЛОГ', 7, 2),
(2266, 'ОПРЕДЕЛИТЬ', 10, 1),
(2267, 'ПРОСТРАНСТВО', 12, 1),
(2268, 'СОВЕТ', 5, 3),
(2269, 'ОБХОДИТЬ', 8, 1),
(2270, 'КОРЕНЬ', 6, 1),
(2271, 'JELLY', 5, 1),
(2272, 'FAT', 3, 1),
(2273, 'EXTERNAL_SD_CARD', 16, 1),
(2274, 'MOUNTDEVICETYPE', 15, 1),
(2275, 'ENUM', 4, 1),
(2276, 'REMOVABLE_SD_CARD', 17, 1),
(2277, 'ОСУЩЕСТВЛЯТЬ', 12, 1),
(2278, 'НАЧИНАТЬ', 8, 4),
(2279, '19', 2, 1),
(2280, 'ABSTRACT', 8, 1),
(2281, 'GETEXTERNALFILESDIRS', 20, 1),
(2282, 'ВЫДЕЛИТЬ', 8, 1),
(2283, 'ТРОГАТЬ', 7, 1),
(2284, 'СИСТЕМНЫЙ', 9, 1),
(2285, 'QUOTSECONDARY_STORAGEQUOT', 25, 1),
(2286, 'ЧИТАЕМОСТЬ', 10, 1),
(2287, 'REMOVABLE', 9, 1),
(2288, 'ЗАПОМИНАТЬ', 10, 2),
(2289, 'ХИРУРГИЧЕСКИЙ', 13, 1),
(2290, 'GETEXTERNALSTORAGEDIRECTORY', 27, 1),
(2291, 'KITKAT', 6, 1),
(2292, '44', 2, 2),
(2293, 'ПРЕДОСТАВЛЯТЬ', 13, 3),
(2294, 'ВЫПОЛНЕНИЕ', 10, 2),
(2295, 'ВМЕШАТЕЛЬСТВО', 13, 1),
(2296, 'СОДЕРЖАТЬ', 9, 5),
(2297, 'ЯДРО', 4, 1),
(2298, 'СЛОТ', 4, 1),
(2299, 'ВСЕЗНАЮЩИЙ', 10, 1),
(2300, 'МНОЖЕСТВО', 9, 4),
(2301, 'ОБРАТИТЬСЯ', 10, 1),
(2302, 'ВСТАВИТЬ', 8, 2),
(2303, 'ЗАШИТЬ', 6, 1),
(2304, 'ЗНАНИЕ', 6, 3),
(2305, 'ВЕРНУТЬ', 7, 2),
(2306, 'MOUNTDEVICE', 11, 1),
(2307, 'TYPE', 4, 3),
(2308, 'SD', 2, 1),
(2309, 'ПРИМОНТИРОВАНЫЙ', 15, 1),
(2310, 'МЕНЯТЬСЯ', 8, 1),
(2311, 'РАЗБИТЬ', 7, 1),
(2312, 'ОПИСАТЬ', 7, 6),
(2313, 'ЗАЩИТИТЬ', 8, 1),
(2314, 'УМОЛЧАНИЕ', 9, 4),
(2315, 'СМЕРТНЫЙ', 8, 1),
(2316, 'ПРИМОНТИРОВАТЬ', 14, 1),
(2317, 'ЗАСТАВИТЬ', 9, 2),
(2318, 'СТОРОНА', 7, 5),
(2319, 'ИСКАТЬ', 6, 5),
(2320, 'ВЕРНУТЬСЯ', 9, 3),
(2321, 'QUOTFATQUOT', 11, 1),
(2322, 'ХАРАКТЕРИСТИКА', 14, 2),
(2323, 'ХАРАКТЕРИЗОВАТЬСЯ', 17, 1),
(2324, 'QUOTFUSEQUOT', 12, 1),
(2325, 'ПРИМЕЧАНИЕ', 10, 2),
(2326, 'ЧЕТКИЙ', 6, 1),
(2327, 'ТЕЛЕФОН', 7, 2),
(2328, 'КОМАНДА', 7, 6),
(2329, 'СПИСОК', 6, 4),
(2330, 'ФОРМАТ', 6, 2),
(2331, 'СМОНТИРОВАТЬ', 12, 1),
(2332, 'TESTANDADDPATH', 14, 1),
(2333, 'ANDROIDOSENVIRONMENTMEDIA_MOUNTED', 33, 1),
(2334, 'ANDROIDOSENVIRONMENTGETEXTERNALSTORAGESTATEEQUALS', 49, 1),
(2335, '22', 2, 1),
(2336, 'РЕМУВАБЛ', 8, 1),
(2337, 'PATHTRIMISEMPTY', 15, 1),
(2338, '2ГБ', 3, 1),
(2339, 'РАЗДЕЛИТЕЛЬ', 11, 1),
(2340, 'FILLDEVICESENVIREMENTSTRING', 27, 1),
(2341, 'GETABSOLUTEPATH', 15, 1),
(2342, 'ANDROIDOSENVIRONMENTGETEXTERNALSTORAGEDIRECTORY', 47, 1),
(2343, 'SYSTEMGETENVQUOTSECONDARY_STORAGEQUOT', 37, 1),
(2344, 'АНДРОЙД', 7, 1),
(2345, 'RAWSECONDARYSTORAGE', 19, 1),
(2346, 'SPLITFILEPATHSEPARATOR', 22, 1),
(2347, 'TESTANDADDRAWSECONDARYSTORAGE', 29, 1),
(2348, 'ВНИЗУ', 5, 1),
(2349, 'FINAL', 5, 1),
(2350, 'ARRAY', 5, 5),
(2351, 'ALL', 3, 1),
(2352, 'RAWSECONDARYSTORAGESSTRISEMPTY', 30, 1),
(2353, 'SECONDARY', 9, 1),
(2354, 'SD-CARDS', 8, 1),
(2355, 'INTO', 4, 1),
(2356, 'SPLITED', 7, 1),
(2357, 'КОРРЕКТНО', 9, 1),
(2358, 'NBSPNBSPNBSPNBSP', 16, 1),
(2359, 'NBSP', 4, 1),
(2360, 'СТЕК', 4, 2),
(2361, 'ДЕРЕВО', 6, 2),
(2362, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPBREAK', 69, 1),
(2363, 'ВЕРШИНА', 7, 1),
(2364, 'ОПЕРАТОР', 8, 5),
(2365, 'ГЕНЕРИРОВАТЬ', 12, 1),
(2366, 'АРГУМЕНТ', 8, 2),
(2367, 'FPU', 3, 1),
(2368, 'ESP', 3, 1),
(2369, 'РЕКУРСИВНЫЙ', 11, 1),
(2370, 'ГРАФИК', 6, 1),
(2371, 'КОМПИЛЯТОР', 10, 2),
(2372, 'ОПЕРАЦИЯ', 8, 3),
(2373, 'X', 1, 2),
(2374, 'ОПЕРАНД', 7, 1),
(2375, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSP', 32, 1),
(2376, 'ST0', 3, 1),
(2377, 'ВХОДНОЙ', 7, 1),
(2378, 'ПЛАТФОРМА', 9, 2),
(2379, 'NBSPNBSPNBSPNBSPRETURNNBSPRESULT', 32, 1),
(2380, 'JIT', 3, 1),
(2381, 'СОГЛАШЕНИЕ', 10, 1),
(2382, 'FLOAT', 5, 1),
(2383, 'ГЕНЕРАЦИЯ', 9, 2),
(2384, 'УЗЕЛ', 4, 1),
(2385, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPRETURNNBSPCALCTREEFROMROOTROOT-GTLEFTNBSPXNBSPNBSPCALCTREEFROMROOTROOT-GTRIGHTNBSPX', 131, 1),
(2386, 'PUSHNBSPX', 9, 1),
(2387, 'КАЛЬКУЛЯТОР', 11, 1),
(2388, 'ЭЛЕМЕНТАРНЫЙ', 12, 1),
(2389, 'ПОЛОЖИТЬ', 8, 1),
(2390, 'NBSPNBSPNBSPNBSPIFROOT-GTTYPENBSPNBSPOPERANDVAR', 47, 1),
(2391, 'УКАЗАТЕЛЬ', 9, 1),
(2392, 'EAX', 3, 1),
(2393, 'КОНСТАНТА', 9, 1),
(2394, 'СТЕКОВЫЙ', 8, 1),
(2395, 'ОПТИМИЗИРОВАТЬ', 14, 2),
(2396, 'ВЫПОЛНЯТЬСЯ', 11, 2),
(2397, 'C', 1, 3),
(2398, 'КОМПИЛЯЦИЯ', 10, 2),
(2399, 'ГЛУБИНА', 7, 1),
(2400, 'НАБОР', 5, 2),
(2401, 'ДОВОЛЬНО', 8, 7),
(2402, '2000', 4, 2),
(2403, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCASENBSPOPERATORDIV', 67, 1),
(2404, 'ЗАМЕР', 5, 1),
(2405, 'JIT-КОМПИЛЯЦИЯ', 14, 1),
(2406, 'ПРЕДСТАВИТЬ', 11, 3),
(2407, 'ЗАМЕРЯТЬ', 8, 1),
(2408, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCASENBSPOPERATORMUL', 67, 1),
(2409, 'NBSPNBSPNBSPNBSPRESULTNBSPNBSPENDNBSP-NBSPSTARTNBSPNBSPDOUBLECLOCKS_PER_SEC', 75, 1),
(2410, 'NBSPNBSPNBSPNBSPENDNBSPNBSPCLOCK', 32, 1),
(2411, 'NBSPNBSPNBSPNBSPELSENBSPIFROOT-GTTYPENBSPNBSPOPERANDNEGVAR', 58, 1),
(2412, 'РЕПОЗИТОРИЙ', 11, 1),
(2413, 'НАЧАЛО', 6, 3),
(2414, 'ПРОЦЕССОР', 9, 1),
(2415, 'NBSPNBSPNBSPNBSPFORNBSPINBSPNBSP0NBSPINBSPAMPLTNBSPITERSNBSPI', 61, 1),
(2416, 'NBSPNBSPNBSPNBSPINTNBSPI', 24, 1),
(2417, 'NBSPNBSPNBSPNBSPDOUBLENBSPRESULT', 32, 1),
(2418, 'NBSPNBSPNBSPNBSPCLOCK_TNBSPSTARTNBSPEND', 39, 1),
(2419, 'NBSPNBSPNBSPNBSPSTARTNBSPNBSPCLOCK', 34, 1),
(2420, 'NBSPNBSPNBSPNBSPIFROOT-GTLEFTNBSPAMPAMPAMPAMPNBSPROOT-GTRIGHT', 61, 1),
(2421, 'NBSPNBSPNBSPNBSPELSENBSPIFROOT-GTTYPENBSPNBSPOPERANDCONST', 57, 1),
(2422, 'НЕОБХОДИМОСТЬ', 13, 2),
(2423, 'ВЫЧИСЛИТЬ', 9, 1),
(2424, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCASENBSPOPERATORPLUS', 68, 1),
(2425, 'ПОСТРОИТЬ', 9, 1),
(2426, 'ПЛАВАТЬ', 7, 1),
(2427, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCASENBSPOPERATORMINUS', 69, 1),
(2428, 'ОПРЕДЕЛИМЫЙ', 11, 1),
(2429, 'NBSPNBSPNBSPNBSPELSE', 20, 1),
(2430, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPSWITCHROOT-GTTYPE', 49, 1),
(2431, 'TYPEDEFNBSPSTRUCT', 17, 1),
(2432, 'ОБРАЩЕНИЕ', 9, 1),
(2433, 'ПЕРЕХОД', 7, 2),
(2434, 'НЕПОЛНЫЙ', 8, 2),
(2435, 'ПОСТРОЕНИЕ', 10, 3),
(2436, 'УЧАСТОК', 7, 1),
(2437, 'ОБРАБАТЫВАТЬ', 12, 2),
(2438, 'ВСТРЕТИТЬ', 9, 1),
(2439, 'НОТАЦИЯ', 7, 1),
(2440, 'ПОЛЬСКИЙ', 8, 1),
(2441, 'ВСПОМНИТЬ', 9, 3),
(2442, 'РАЗБОР', 6, 1),
(2443, 'ПРОИЗВОДИТЕЛЬНОСТЬ', 18, 2),
(2444, 'УСЛОВНЫЙ', 8, 1),
(2445, 'КОНСТАНТНЫЙ', 11, 1),
(2446, 'NBSPNBSPNBSPNBSPBYTEARRAYNBSPCODENBSPNBSPRESULTCODE', 51, 1),
(2447, 'MUL', 3, 1),
(2448, 'ИНСТРУКЦИЯ', 10, 1),
(2449, 'ОПТИМИЗАЦИЯ', 11, 2),
(2450, 'ИНТЕРПРЕТАТОР', 13, 1),
(2451, 'GENERATECODE', 12, 1),
(2452, 'VIRTUALPROTECT', 14, 1),
(2453, 'СНЯТЬ', 5, 1),
(2454, 'ЭДАКИЙ', 6, 1),
(2455, 'NBSPNBSP_IN_NBSPNBSPNBSPLPVOIDNBSPLPADDRESSNBSPАДРЕСNBSPНАЧАЛАNBSPРЕГИОНАNBSPВNBSPПАМЯТЬ', 88, 1),
(2456, 'NBSPNBSP_IN_NBSPNBSPNBSPSIZE_TNBSPDWSIZENBSPРАЗМЕРNBSPРЕГИОНАNBSPВNBSPПАМЯТЬ', 76, 1),
(2457, 'NBSPNBSP_IN_NBSPNBSPNBSPDWORDNBSPFLNEWPROTECTNBSPНОВЫЕNBSPПАРАМЕТРЫNBSPДОСТУПАNBSPДЛЯNBSPСТРАНИЦNBSPВNBSPРЕГИОН', 111, 1),
(2458, 'ОБЛАСТЬ', 7, 4),
(2459, 'РАЗРЕШЕНИЕ', 10, 1),
(2460, 'ОТСУТСТВИЕ', 10, 2),
(2461, 'РУХНУТЬ', 7, 1),
(2462, 'WINDOWS', 7, 1),
(2463, 'WINAPI', 6, 1),
(2464, 'MSD', 3, 1),
(2465, 'BOOLNBSPWINAPINBSPVIRTUALPROTECT', 32, 1),
(2466, 'ВЕРНЕЕ', 6, 1),
(2467, 'ЗАДАТЬ', 6, 1),
(2468, 'ОТРАБОТАТЬ', 10, 1),
(2469, 'КОД-ВЫЧИСЛИТЕЛЬ', 15, 1),
(2470, 'НОРМАЛЬНО', 9, 2),
(2471, 'ФУНКЦИЯ-ОБЕРТКА', 15, 1),
(2472, 'NBSPNBSPNBSPNBSPGENADD_ESP_4CODENBSPСНИМАЕМNBSPЛИШНЕЕNBSPДВОЙНОЕNBSPСЛОВОNBSPСОNBSPСТЕК', 87, 1),
(2473, 'NBSPNBSPNBSPNBSPGENRETCODENBSPВЫХОДИМNBSPИЗNBSPФУНКЦИЯ', 54, 1),
(2474, 'NBSPNBSPNBSPNBSPGENFLD_DWORD_PTR_ESPCODE', 40, 1),
(2475, 'NBSPNBSPNBSPNBSPGENERATECODERTREE-GTROOTNBSPCODENBSPГЕНЕРИРУЕМNBSPКОД-ВЫЧИСЛИТЕЛЬ', 81, 1),
(2476, 'VOIDNBSPGENERATECODETREENBSPTREENBSPBYTEARRAYNBSPRESULTCODE', 59, 1),
(2477, 'NBSPNBSPNBSPNBSPGENMOV_EAX_ESP_4CODENBSPПОМЕЩАЕМNBSPВNBSPEAXNBSPЗНАЧЕНИЕNBSPАРГУМЕНТ', 84, 1),
(2478, 'VOIDNBSPGENFCHSBYTEARRAYNBSPCODE', 32, 1),
(2479, 'VOIDNBSPGENFMUL_DWORD_PTR_ESPBYTEARRAYNBSPCODE', 46, 1),
(2480, 'FCHS', 4, 1),
(2481, 'ИНВЕРТИРОВАТЬ', 13, 1),
(2482, 'ГАМ', 3, 1),
(2483, 'МИНУС', 5, 3),
(2484, 'СМЕНИТЬ', 7, 2),
(2485, 'ОПКОД', 5, 1),
(2486, 'VOIDNBSPGENPUSH_IMM32BYTEARRAYNBSPCODENBSPINT32_TNBSPPVALUE', 59, 1),
(2487, 'VOIDNBSPGENFADD_DWORD_PTR_ESPBYTEARRAYNBSPCODE', 46, 1),
(2488, 'VOIDNBSPGENFSUB_DWORD_PTR_ESPBYTEARRAYNBSPCODE', 46, 1),
(2489, 'VOIDNBSPGENFLD_DWORD_PTR_ESPBYTEARRAYNBSPCODE', 45, 1),
(2490, 'VOIDNBSPGENFSTPBYTEARRAYNBSPCODENBSPVOIDNBSPDSTADDRESS', 54, 1),
(2491, 'VOIDNBSPGENADD_ESP_4BYTEARRAYNBSPCODE', 37, 1),
(2492, 'VOIDNBSPGENMOV_EAX_PTR_ESP_4BYTEARRAYNBSPCODE', 45, 1),
(2493, 'ВЫРАЖЕНИЯVOIDNBSPGENERATECODERTREENODENBSPROOTNBSPBYTEARRAYNBSPRESULTCODE', 73, 1),
(2494, 'ТИП-КОНТЕЙНЕР', 13, 1),
(2495, 'BYTEARRAY', 9, 1),
(2496, 'NBSPNBSPNBSPNBSPINTNBSPSIZENBSPРАЗМЕРNBSPВЫДЕЛЕННОЙNBSPПАМЯТЬ', 61, 1),
(2497, 'NBSPNBSP_OUT_NBSPNBSPPDWORDNBSPLPFLOLDPROTECTNBSPУКАЗАТЕЛЬNBSPНАNBSPПЕРЕМЕННУЮNBSPКУДАNBSPСОХРАНИТЬNBSPСТАРЫЕNBSPПАРАМЕТРЫNBSPДОСТУП', 132, 1),
(2498, 'БУФЕР', 5, 1),
(2499, 'NBSPNBSPNBSPNBSPINTNBSPDATASIZENBSPФАКТИЧЕСКИЙNBSPРАЗМЕРNBSPХРАНЯЩИХСЯNBSPДАННЫЙ', 80, 1),
(2500, 'NBSPNBSPNBSPNBSPCHARNBSPDATANBSPУКАЗАТЕЛЬNBSPНАNBSPДАННЫЙ', 57, 1),
(2501, 'VOIDNBSPBYTEARRAYAPPENDDATABYTEARRAYNBSPARRAYNBSPCONSTNBSPCHARNBSPDATANBSPINTNBSPDATASIZE', 89, 1),
(2502, 'VOIDNBSPBYTEARRAYFREEBYTEARRAYNBSPARRAY', 39, 1),
(2503, 'NBSPBYTEARRAY', 13, 1),
(2504, 'BYTEARRAYNBSPBYTEARRAYCREATEINTNBSPINITIALSIZE', 46, 1),
(2505, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPGENFSTP_DWORD_PTR_ESPCODEСОХРАНЯЕМNBSPРЕЗУЛЬТАТNBSPВNBSPСТЕКNBSPST0NBSP-AMPGTNBSPESP', 116, 1),
(2506, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPGENFDIV_DWORD_PTR_ESPCODENBSPВЫПОЛНЯЕМNBSPДЕЛЕНИЕNBSPРЕЗУЛЬТАТNBSPСОХРАНИТЬСЯNBSPВNBSPST0', 153, 1),
(2507, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPGENFLD_DWORD_PTR_ESPCODENBSPМЕНЯТЬ', 66, 1),
(2508, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPGENFCHSCODENBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPЗНАК', 103, 1),
(2509, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPGENPUSH_EAXCODENBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPЗАГРУЖАЕМNBSPВNBSPСТЕК', 109, 1),
(2510, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPGENPUSH_EAXCODENBSPВNBSPEAXNBSPЛЕЖТNBSPАРГУМЕНТNBSPФУНКЦИЯ', 90, 1),
(2511, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPGENERATECODERROOT-GTRIGHTNBSPCODE', 65, 1),
(2512, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPGENERATECODERROOT-GTLEFTNBSPCODE', 64, 1),
(2513, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPGENFSTP_DWORD_PTR_ESPCODEВОЗВРАЩАЕМNBSPВNBSPСТЕК', 80, 1),
(2514, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPGENPUSH_IMM32CODENBSPINT32_TAMPAMPROOT-GTVALUE', 78, 1),
(2515, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPGENFSUB_DWORD_PTR_ESPCODENBSPВЫПОЛНЯЕМNBSPВЫЧИТАНИЕNBSPРЕЗУЛЬТАТNBSPСОХРАНИТЬСЯNBSPВNBSPST0', 155, 1),
(2516, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPGENFMUL_DWORD_PTR_ESPCODENBSPВЫПОЛНЯЕМNBSPУМНОЖЕНИЕNBSPРЕЗУЛЬТАТNBSPСОХРАНИТЬСЯNBSPВNBSPST0', 155, 1),
(2517, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPGENFADD_DWORD_PTR_ESPCODENBSPВЫПОЛНЯЕМNBSPСЛОЖЕНИЕNBSPРЕЗУЛЬТАТNBSPСОХРАНИТЬСЯNBSPВNBSPST0', 154, 1),
(2518, 'ИNBSPСНИМАЕМNBSPЕГОNBSPСОNBSPСТЕК', 33, 1),
(2519, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPGENFLD_DWORD_PTR_ESPCODEЗАГРУЖАЕМNBSPВNBSPFPUNBSPЛЕВЫЙNBSPОПЕРАНД', 97, 1),
(2520, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPGENADD_ESP_4CODENBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSP', 80, 1),
(2521, 'ЗАДУМЫВАТЬСЯ', 12, 1),
(2522, 'СИЛА', 4, 2),
(2523, 'ВЛИЯТЬ', 6, 1),
(2524, 'УВЕРИТЬ', 7, 2),
(2525, 'УВЕЛИЧИТЬСЯ', 11, 1),
(2526, 'ИЗБЕГАТЬ', 8, 2),
(2527, 'ЛИШНИЙ', 6, 1),
(2528, 'ГЛУПЫЙ', 6, 1),
(2529, 'НЕДОСТАТОК', 10, 5),
(2530, 'КОНЧЕНЫЙ', 8, 1),
(2531, 'БЛАГОТВОРНО', 11, 1),
(2532, 'КРАЙНЕ', 6, 1),
(2533, 'ВЫИГРЫВАТЬ', 10, 1),
(2534, 'СООТВЕТСТВЕННЫЙ', 15, 1),
(2535, '94', 2, 1),
(2536, 'КАЖЕТСЯ', 7, 2),
(2537, 'СБРОС', 5, 1),
(2538, 'КОНВЕЙЕР', 8, 1),
(2539, 'ЛИНЕЙНЫЙ', 8, 2),
(2540, 'АБСОЛЮТНО', 9, 1),
(2541, 'НЕПЛОХО', 7, 1),
(2542, 'ПОЧЕМУ', 6, 2),
(2543, 'ПРОЧТЕНИЕ', 9, 1),
(2544, 'ВЫНЕСЕНИЕ', 9, 1),
(2545, 'BITBUCKETORGINFORMHUNTERJITHABR', 31, 1),
(2546, 'ГЛАВА', 5, 1),
(2547, 'СОВЕРШЕННЫЙ', 11, 1),
(2548, 'ВДОХНОВИТЬ', 10, 1),
(2549, 'ОСА', 3, 1),
(2550, 'ЗАВИСЕТЬ', 8, 4),
(2551, 'БЛИЗКИЕ', 7, 2),
(2552, 'УПРОСТИТЕЛЬ', 11, 1),
(2553, 'МАКСИМУМ', 8, 1),
(2554, 'РЕСУРС', 6, 2),
(2555, 'ПЕРЕНОС', 7, 1),
(2556, 'АБСТРАГИРОВАНИЕ', 15, 1),
(2557, 'ОЧЕВИДНЫЙ', 9, 2),
(2558, 'ОПЕРАЦИОННЫЙ', 12, 2),
(2559, 'КООРДИНАТА', 10, 1),
(2560, 'Y', 1, 2),
(2561, 'RESULTNBSPNBSPFRUN5NBSPRESULTNBSPNBSP10', 39, 1),
(2562, 'ПРОВЕСТИ', 8, 2),
(2563, 'FNBSPNBSPCOMPILETREETREE', 24, 1),
(2564, 'TREENBSPNBSPBUILDTREEFOREXPRESSIONQUOTX5QUOT', 44, 1),
(2565, 'COMPILEDFUNCNBSPF', 17, 1),
(2566, 'FLOATNBSPRESULT', 15, 1),
(2567, 'СРАВНИВАТЬ', 10, 2),
(2568, 'ПОДЕЛИТЬ', 8, 1),
(2569, 'ПРОФИЛИРОВАТЬ', 13, 1),
(2570, 'УНАРНЫЙ', 7, 1),
(2571, 'TREENBSPTREE', 12, 1),
(2572, 'NBSPNBSPNBSPNBSPBYTEARRAYNBSPCODE', 33, 1),
(2573, 'NBSPNBSPNBSPNBSPCODENBSPNBSPBYTEARRAYCREATE2NBSPНАЧАЛЬНЫЙNBSPРАЗМЕРNBSPКОНТЕЙНЕРАNBSP-NBSP2NBSPБАЙТ', 99, 1),
(2574, 'NBSPNBSPNBSPNBSPGENERATECODETREENBSPCODENBSPГЕНЕРИРУЕМNBSPКОД', 61, 1),
(2575, 'NBSPNBSPNBSPNBSPDWORDNBSPOLDP', 29, 1),
(2576, 'NBSPNBSPNBSPNBSPCOMPILEDFUNCNBSPRESULT', 38, 1),
(2577, 'ФУНКЦИИ-КОМПИЛЯТОР', 18, 1),
(2578, 'COMPILEDFUNCNBSPCOMPILETREETREENBSPTREE', 39, 1),
(2579, 'NBSPNBSPNBSPNBSPVIRTUALPROTECTCODE-GTDATANBSPCODE-GTDATASIZENBSPPAGE_EXECUTE_READWRITENBSPAMPOLDPNBSPДАЕМNBSPПРАВАNBSPНАNBSPИСПОЛНЕНИЕ', 134, 1),
(2580, 'NBSPNBSPNBSPNBSPRESULTCODENBSPNBSPCODE', 38, 1),
(2581, 'NBSPNBSPNBSPNBSPFUNCNBSPRUNNBSPУКАЗАТЕЛЬNBSPНАNBSPФУНКЦИЯ', 57, 1),
(2582, 'NBSPCOMPILEDFUNC', 16, 1),
(2583, 'NBSPNBSPNBSPNBSPBYTEARRAYNBSPCODENBSPКОНТЕЙНЕРNBSPСNBSPКОД', 58, 1),
(2584, 'COMPILEDFUNC', 12, 1),
(2585, 'NBSPNBSPNBSPNBSPRESULTRUNNBSPNBSPFUNCRESULTCODE-GTDATA', 54, 1),
(2586, 'CLOCKS_PER_SEC', 14, 1),
(2587, 'ВЫШЕ', 4, 1),
(2588, 'УКАЗАННЫЙ', 9, 3),
(2589, 'КРАСНЫЙ', 7, 1),
(2590, 'ЧЕРНЫЙ', 6, 1),
(2591, 'КОМПИЛИРОВАТЬ', 13, 1),
(2592, 'СИНИЙ', 5, 1),
(2593, 'ВОЗРАСТАТЬ', 10, 1),
(2594, 'РЕГУЛИРУЕМЫЙ', 12, 1),
(2595, 'ПОГРЕШНОСТЬ', 11, 1),
(2596, 'МНОГОКРАТНЫЙ', 12, 1),
(2597, 'DOUBLENBSPMEASURETIMEJITTREENBSPTREENBSPINTNBSPITERS', 52, 1),
(2598, 'ВЛИЯНИЕ', 7, 2),
(2599, 'СИЛЬНЫЙ', 7, 1),
(2600, 'NBSPNBSPNBSPNBSPCOMPILEDFUNCNBSPF', 33, 1),
(2601, 'NBSPNBSPNBSPNBSPFNBSPNBSPCOMPILETREETREE', 40, 1),
(2602, 'ТЕСТЕР', 6, 1),
(2603, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCALCTREETREENBSPFLOATNBSPINBSPNBSP1000', 70, 1),
(2604, 'DOUBLENBSPMEASURETIMENORMALTREENBSPTREENBSPINTNBSPITERS', 55, 1),
(2605, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPFRUNFLOATNBSPINBSPNBSP1000', 58, 1),
(2606, 'NBSPNBSPNBSPNBSPCOMPILEDFUNCFREEF', 33, 1),
(2607, 'БЕССМЫСЛЕННЫЙ', 13, 1),
(2608, 'ГЕНЕРИРОВАТЬСЯ', 14, 1),
(2609, 'CALCTREEFROMROOT', 16, 1),
(2610, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCASENBSPOPERATORDIV', 51, 1),
(2611, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPRETURNNBSPCALCTREEFROMROOTROOT-GTLEFTNBSPXNBSP-NBSPCALCTREEFROMROOTROOT-GTRIGHTNBSPX', 132, 1),
(2612, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCASENBSPOPERATORMUL', 51, 1),
(2613, 'ОКУПИТЬСЯ', 9, 1),
(2614, 'ЛИХВА', 5, 1),
(2615, 'СВОДИТЬСЯ', 9, 2),
(2616, 'FLOATNBSPCALCEXPRESSIONFLOATNBSPX', 33, 1),
(2617, 'NBSPNBSPNBSPNBSPRETURNNBSPXNBSPNBSPXNBSPNBSP5NBSPNBSPXNBSP-NBSP2', 64, 1),
(2618, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCASENBSPOPERATORMINUS', 53, 1),
(2619, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCASENBSPOPERATORPLUS', 52, 1),
(2620, 'РЕАЛИЗОВАТЬСЯ', 13, 1),
(2621, 'РЕКУРСИИFLOATNBSPCALCTREEFROMROOTTREENODENBSPROOTNBSPFLOATNBSPX', 63, 1),
(2622, 'ЗАДАННЫЙ', 8, 1),
(2623, 'МИНИ-КОМПИЛЯТОР', 15, 1),
(2624, 'ВКЛЮЧАТЬСЯ', 10, 1),
(2625, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPRETURNNBSPROOT-GTVALUE', 54, 1),
(2626, 'NBSPNBSPNBSPNBSPSWITCHROOT-GTTYPE', 33, 1),
(2627, 'NBSPNBSPNBSPNBSPIFROOT-GTTYPENBSPNBSPOPERANDCONST', 49, 1),
(2628, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPRETURNNBSP-X', 44, 1),
(2629, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPRETURNNBSPX', 43, 1),
(2630, 'NBSPNBSPNBSPNBSPIFROOT-GTTYPENBSPNBSPOPERANDNEGVAR', 50, 1),
(2631, 'ПРИНИМАТЬ', 9, 2),
(2632, '_CDECL', 6, 1),
(2633, 'FUNC', 4, 1),
(2634, 'ПРОТОТИП', 8, 1),
(2635, 'TYPEDEFNBSPFLOATNBSP_CDECLNBSPFUNCFLOAT', 39, 1),
(2636, 'СПРАВА', 6, 2),
(2637, 'ЛЕВЫЙ', 5, 1),
(2638, 'ПЕРЕДАВАТЬСЯ', 12, 4),
(2639, 'КРАЙНИЙ', 7, 1),
(2640, 'C-DECLARATION', 13, 1),
(2641, 'АРХИТЕКТУРА', 11, 4),
(2642, 'СХОЖИЙ', 6, 2),
(2643, 'ОРИЕНТИРОВАТЬСЯ', 15, 1),
(2644, 'X86', 3, 1),
(2645, 'ЗАМЕТИТЬ', 8, 6),
(2646, 'IA32', 4, 1),
(2647, 'ОПТИМАЛЬНЫЙ', 11, 1),
(2648, 'ПРИМА', 5, 1),
(2649, 'NBSPTREENODETYPE', 16, 1),
(2650, 'NBSPNBSPNBSPNBSPOPERANDNEGVARNBSPОПЕРАНДNBSP-NBSPПЕРЕМЕННАЯNBSPВЗЯТАЯNBSPСNBSPМИНУСОМNBSPДЛЯNBSPОБРАБОТКИNBSPУНАРНОГОNBSPМИНУС', 126, 1),
(2651, 'JAVA', 4, 1),
(2652, 'РЕБЕНОК', 7, 1),
(2653, 'ЛИСТ', 4, 1),
(2654, 'СПУСК', 5, 1),
(2655, 'БАЙТ-КОД', 8, 1),
(2656, 'ПРЕОБРАЗОВАТЬСЯ', 15, 1),
(2657, 'ПОДОЙТИ', 7, 1),
(2658, 'FLASH', 5, 1),
(2659, 'ПРОСТОТА', 8, 4),
(2660, 'ПРЕДСТАВЛЕНИЕ', 13, 3),
(2661, 'ACTIONSCRIPT', 12, 1),
(2662, 'ПРИОРИТЕТ', 9, 1),
(2663, 'РАЗБИВАТЬ', 9, 2),
(2664, 'НАЗЫВАТЬСЯ', 10, 1),
(2665, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPFLOATNBSPVALUENBSPNBSPNBSPNBSPNBSPNBSPNBSPЗНАЧЕНИЕNBSPДЛЯNBSPУЗЛА-КОНСТАНТА', 107, 1),
(2666, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPTREENODENBSPRIGHTNBSPNBSPNBSPССЫЛКАNBSPДЛЯNBSPПРАВОГОNBSPПОТОМОК', 96, 1),
(2667, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPTREENODETYPENBSPTYPENBSPТИПNBSPУЗНУТЬ', 69, 1),
(2668, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPTREENODENBSPLEFTNBSPNBSPNBSPNBSPССЫЛКАNBSPНАNBSPЛЕВОГОNBSPПОТОМОК', 97, 1),
(2669, 'ВОЗМОЖНЫЙ', 9, 2),
(2670, 'TYPEDEFNBSPENUM', 15, 1),
(2671, 'NBSPNBSPNBSPNBSPOPERANDCONSTNBSPNBSPОПЕРАНДNBSP-NBSPКОНСТАНТА', 61, 1),
(2672, 'NBSPNBSPNBSPNBSPOPERANDVARNBSPNBSPNBSPNBSPОПЕРАНДNBSP-NBSPПЕРЕМЕННЫЙ', 68, 1),
(2673, 'NBSPNBSPNBSPNBSPOPERATORDIVNBSPNBSPNBSPОПЕРАТОРNBSPРАЗДЕЛИТЬ', 60, 1),
(2674, 'NBSPNBSPNBSPNBSPOPERATORMULNBSPNBSPNBSPОПЕРАТОРNBSPУМНОЖИТЬ', 59, 1),
(2675, 'NBSPNBSPNBSPNBSPOPERATORPLUSNBSPNBSPОПЕРАТОРNBSPПЛЮС', 52, 1),
(2676, 'NBSPNBSPNBSPNBSPOPERATORMINUSNBSPОПЕРАТОРNBSPМИНУС', 50, 1),
(2677, 'NBSPNBSPNBSPNBSPSTRUCTNBSPTREENODE', 34, 1),
(2678, 'NBSPNBSPNBSPNBSPTYPEDEFNBSPSTRUCTNBSPTREENODENBSPTREENODE', 57, 1),
(2679, 'ПОШАГОВЫЙ', 9, 1),
(2680, 'ВИРТУАЛЬНЫЙ', 11, 1),
(2681, 'МАШИНА', 6, 1),
(2682, 'ИГРАТЬ', 6, 1),
(2683, 'КЛЮЧЕВОЙ', 8, 1),
(2684, 'TREENODE', 8, 1),
(2685, 'ОБЪЕМНЫЙ', 8, 1),
(2686, 'ПРИБАВЛЕНИЕ', 11, 1),
(2687, 'УПОМЯНУТЬ', 9, 3),
(2688, 'POP', 3, 1),
(2689, 'NBSPMOVNBSPESPNBSPЗНАЧЕНИЕ', 26, 1),
(2690, 'СНЯТИЕ', 6, 1),
(2691, 'СРАВНИТЕЛЬНО', 12, 1),
(2692, 'ПОМЕСТИТЬ', 9, 2),
(2693, 'ИЗБАВЛЯТЬСЯ', 11, 1),
(2694, 'ВОЗВРАТ', 7, 1),
(2695, 'ЕДИНСТВЕННЫЙ', 12, 3),
(2696, 'SUBNBSPESPNBSP4', 15, 1),
(2697, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCODENBSPNBSPQUOTMULQUOTNBSPВЫПОЛНЯЕМNBSPУМНОЖЕНИЕ', 113, 1),
(2698, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCODENBSPNBSPQUOTDIVQUOTNBSPВЫПОЛНЯЕМNBSPДЕЛЕНИЕ', 111, 1),
(2699, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCODENBSPNBSPQUOTSUBQUOTNBSPВЫПОЛНЯЕМNBSPВЫЧИТАНИЕ', 113, 1),
(2700, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCODENBSPNBSPQUOTADDQUOTNBSPВЫПОЛНЯЕМNBSPСЛОЖЕНИЕ', 112, 1),
(2701, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCODENBSPNBSPQUOTPOPQUOTNBSPДВАNBSPЗНАЧЕНИЕ', 74, 1),
(2702, 'СЛОЖЕНИЕ', 8, 1),
(2703, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCODENBSPNBSPQUOTPUSHNBSPRESULTQUOTNBSPСОХРАНЯЕМNBSPВNBSPСТЕКNBSPРЕЗУЛЬТАТNBSPМАТЕМАТИЧЕСКОЙNBSPОПЕРАЦИЯ', 135, 1),
(2704, 'PUSHNBSPЗНАЧЕНИЕ', 16, 1),
(2705, 'ВЫЧЕСТЬ', 7, 1),
(2706, 'УМНОЖЕНИЕ', 9, 1),
(2707, 'MOVNBSPEAXNBSPESPNBSP-NBSP4', 27, 1),
(2708, 'FDIV', 4, 1),
(2709, 'FMUL', 4, 1),
(2710, 'FADD', 4, 1),
(2711, 'FSUB', 4, 1),
(2712, 'FADDNBSPDWORDNBSPPTRNBSPESP', 27, 1),
(2713, 'FSUBNBSPDWORDNBSPPTRNBSPESP', 27, 1),
(2714, 'FSTPNBSPESPNBSPУДАЛИТЬNBSPЗНАЧЕНИЕNBSPСNBSPВЕРХУШКИNBSPFPUNBSPСТЕКАNBSPИNBSPСОХРАНИТЬNBSPЕГОNBSPВNBSPЯЧЕЙКУNBSPПАМЯТИNBSPПОNBSPАДРЕСУNBSPЛЕЖАЩЕМУNBSPВNBSPESP', 157, 1),
(2715, 'ЗАГРУЖАТЬСЯ', 11, 1),
(2716, 'FMULNBSPDWORDNBSPPTRNBSPESP', 27, 1),
(2717, 'FDIVNBSPDWORDNBSPPTRNBSPESP', 27, 1),
(2718, 'FLDNBSPESPNBSPЗАГРУЗИТЬNBSPВNBSPST0NBSPЗНАЧЕНИЕNBSPХРАНЯЩЕЕСЯNBSPПОNBSPАДРЕСУNBSPСОДЕРЖАЩЕМУСЯNBSPВNBSPESP', 106, 1),
(2719, 'ХРАНИТЬСЯ', 9, 1),
(2720, 'ВМЕЩАТЬ', 7, 1),
(2721, '80', 2, 2),
(2722, 'ОБРАЗОВАТЬ', 10, 1),
(2723, 'ЗАПЯТАЯ', 7, 1),
(2724, 'X87', 3, 1),
(2725, 'ST1', 3, 1),
(2726, 'ЗАГРУЗИТЬ', 9, 1),
(2727, 'FLD', 3, 1),
(2728, 'ST7', 3, 1),
(2729, 'АДРЕСОВАТЬ', 10, 1),
(2730, 'ST2', 3, 1),
(2731, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCODENBSPNBSPQUOTPOPQUOTNBSPСНИМАЕМNBSPСОNBSPСТЕК', 80, 1),
(2732, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCODENBSPNBSPQUOTPUSHNBSPQUOTNBSPNBSPROOT-GTVALUENBSPКЛАДЕМNBSPВNBSPСТЕКNBSPКОНСТАНТА', 116, 1),
(2733, 'ADDNBSPESPNBSP0XCNBSPВОССТАНАВЛИВАЕМNBSPУКАЗАТЕЛЬNBSPНАNBSPСТЕКNBSP3NBSPАРГУМЕНТАNBSPПОNBSP4NBSPБАЙТАNBSPКАКNBSPРАЗNBSPЗАЙМУТNBSP0XCNBSPБАЙТ', 140, 1),
(2734, 'POPNBSPEBPNBSPВОССТАНАВЛИВАЕМNBSPУКАЗАТЕЛЬNBSPСТЕКОВОГОNBSPФРЕЙМ', 64, 1),
(2735, 'ПОДАВАТЬСЯ', 10, 1),
(2736, 'КОРМИТЬ', 7, 1),
(2737, 'ПРОИЗВЕСТИ', 10, 1),
(2738, 'CALLNBSPFUNCNBSPСАМNBSPВЫЗОВ', 28, 1),
(2739, 'PUSHNBSPARG1', 12, 1),
(2740, 'СОХРАННОСТЬ', 11, 1),
(2741, 'EDX', 3, 1),
(2742, 'УСКОРИТЬ', 8, 3),
(2743, 'ЦЕЛОЧИСЛЕННЫЙ', 13, 1),
(2744, 'ЧАСТНЫЙ', 7, 1),
(2745, 'ECX', 3, 1),
(2746, 'ОТВЕЧАТЬ', 8, 1),
(2747, 'PUSHNBSPARG3NBSPКЛАДЕМNBSPВNBSPСТЕКNBSPАРГУМЕНТЫNBSPВNBSPПОРЯДКЕNBSPСПРАВАNBSPНАNBSPЛЕВОNBSPПЕРВЫЙNBSPАРГУМЕНТNBSPВNBSPКОНЕЦ', 124, 1),
(2748, 'PUSHNBSPARG2', 12, 1),
(2749, 'PUSHNBSPEBPNBSPСОХРАНЯЕМNBSPУКАЗАТЕЛЬNBSPСТЕКОВОГОNBSPФРЕЙМ', 59, 1),
(2750, 'ВОССТАНАВЛИВАТЬ', 15, 1),
(2751, 'ВЫЗЫВАЮЩИЙ', 10, 1),
(2752, 'ПЕРЕВОД', 7, 2),
(2753, 'ПРАВИЛО', 7, 2),
(2754, 'ПСЕВДОКОД', 9, 1),
(2755, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCODENBSPNBSPQUOTPUSHNBSPXQUOTNBSPКЛАДЕМNBSPВNBSPСТЕКNBSPЗНАЧЕНИЕNBSPАРГУМЕНТАNBSPПЕРЕМЕННЫЙ', 123, 1),
(2756, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPCODENBSPNBSPQUOTPUSHNBSP-XQUOTNBSPКЛАДЕМNBSPВNBSPСТЕКNBSPЗНАЧЕНИЕNBSPАРГУМЕНТАNBSPСОNBSPСМЕНОЙNBSPЗНАК', 134, 1),
(2757, 'NBSPNBSPNBSPNBSPГЕНЕРИРУЕМNBSPКОДNBSPДЛЯNBSPРОДИТЕЛЬСКОГОNBSPЭЛЕМЕНТ', 68, 1),
(2758, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPGENERATECODERROOT-GTLEFTNBSPCODENBSPКОДNBSPВЫЧИСЛЕНИЯNBSPДОЧЕРНИХNBSPЭЛЕМЕНТ', 108, 1),
(2759, 'ДЕЙСТВАSTATICNBSPVOIDNBSPGENERATECODERTREENODENBSPROOTNBSPBYTEARRAYNBSPCODE', 75, 1),
(2760, 'NBSPNBSPNBSPNBSPNBSPNBSPNBSPNBSPGENERATECODERROOT-GTRIGHTNBSPCODENBSPСНАЧАЛАNBSPДОЛЖЕНNBSPСГЕНЕРИРОВАТЬСЯ', 105, 1),
(2761, 'ПЕРЕВЕСТИ', 9, 2),
(2762, 'ОПЕРИРОВАТЬ', 11, 1),
(2763, 'ПРЕДСТАТЬ', 9, 1),
(2764, 'СПЕРВА', 6, 1),
(2765, 'PUSHNBSP5', 9, 1),
(2766, 'АССЕМБЛЕР', 9, 1),
(2767, 'НАПОМИНАТЬ', 10, 2),
(2768, 'SUB', 3, 1),
(2769, 'ADD', 3, 3),
(2770, 'PUSHNBSP2', 9, 1),
(2771, 'ВСТРЕТИТЬСЯ', 11, 1),
(2772, 'JIT-КОМПИЛЯТОР', 14, 1),
(2773, 'НОМЕР', 5, 1),
(2774, 'ЗВОНОК', 6, 1),
(2775, 'ЗВОНИТЬ', 7, 1),
(2776, 'CID', 3, 1),
(2777, 'JABBER', 6, 1),
(2778, 'СООБЩЕНИЕ', 9, 1),
(2779, '922', 3, 1),
(2780, 'ИНЖЕНЕР', 7, 1),
(2781, 'ПЕРЕАДРЕСАЦИЯ', 13, 1),
(2782, 'СОТРУДНИК', 9, 2),
(2783, 'ПРЯМАЯ', 6, 1),
(2784, 'EXTEN', 5, 1),
(2785, 'ИСХОДЯЩИЙ', 9, 1),
(2786, 'ASTERISK', 8, 1),
(2787, 'ОПОВЕЩЕНИЕ', 10, 1),
(2788, 'ПОСТУПАТЬ', 9, 1),
(2789, 'АСТЕРИСК', 8, 1),
(2790, 'STRFTIMEEPOCHC', 14, 1),
(2791, 'ТРУБКА', 6, 1),
(2792, '74951111111', 11, 1),
(2793, 'ЗАНЯТЫЙ', 7, 1),
(2794, 'ОРГАНИЗАЦИЯ', 11, 2),
(2795, 'ПОДНИМАТЬ', 9, 1),
(2796, 'СЕРВЕР', 6, 6),
(2797, 'УДОБСТВО', 8, 1),
(2798, '911', 3, 1),
(2799, 'ПОЗВОНИТЬ', 9, 1),
(2800, 'DESTINATION', 11, 1),
(2801, 'ANSWER', 6, 1),
(2802, 'ИТ-ОТДЕЛ', 8, 1),
(2803, 'ОТПРАВКА', 8, 2),
(2804, 'ПЕРЕЗВАНИВАТЬ', 13, 1),
(2805, 'НЕПОНЯТНО', 9, 2),
(2806, 'ETCASTERISKJABBERCONF', 21, 1),
(2807, 'ТП', 2, 1),
(2808, 'МЕСЯЦ', 5, 5),
(2809, '9999', 4, 1),
(2810, 'РЕШЕТКА', 7, 1),
(2811, 'RING', 4, 1),
(2812, 'АБОНЕНТ', 7, 1),
(2813, 'VALUE', 5, 2),
(2814, 'ПРОПУСКАТЬ', 10, 1),
(2815, 'FIXED', 5, 1),
(2816, 'ПРОВАЙДЕР', 9, 1),
(2817, 'ВЕБ-ИНТЕРФЕЙС', 13, 2),
(2818, 'FREEPBX', 7, 1),
(2819, 'ME', 2, 3),
(2820, 'ETCASTERISKXMPP_CUSTOMCONF', 26, 1),
(2821, 'ASTERISKJABBER', 14, 1),
(2822, 'AUTH_POLICYACCEPT', 17, 1),
(2823, 'TYPECLIENT', 10, 1),
(2824, 'SERVERHOSTJABBERCOMPANY-NAMESU', 30, 1),
(2825, 'SECRETPAW0RD', 12, 1),
(2826, 'USERNAMEPBXCOMPANY-NAMESU', 25, 1),
(2827, 'AUTOREGISTERYES', 15, 1),
(2828, 'AUTOPRUNEYES', 12, 1),
(2829, 'GENERAL', 7, 1),
(2830, 'DEBUGYES', 8, 1),
(2831, 'FOLOW', 5, 1),
(2832, 'XMPPК', 5, 1),
(2833, 'EJABBERD', 8, 1),
(2834, 'ШИФРОВАНИЕ', 10, 2),
(2835, 'РАЗРЫВ', 6, 1),
(2836, 'РАЗВЕРНУТЬ', 10, 3),
(2837, 'PORT5222', 8, 1),
(2838, 'ПОСТУПЛЕНИЕ', 11, 1),
(2839, 'JABBER-СЕРВЕР', 13, 1),
(2840, 'АТС', 3, 1),
(2841, 'МОНИТОРИНГ', 10, 1),
(2842, 'ПРИЕМ', 5, 3),
(2843, 'PBXCOMPANY-NAMESU', 17, 1),
(2844, 'AM', 2, 1),
(2845, 'ПЕРЕЗАПУСКАТЬ', 13, 1),
(2846, 'ВКЛЮЧАТЬ', 8, 3),
(2847, 'ДЕБАГ', 5, 2),
(2848, 'ОФИС', 4, 2),
(2849, 'ДОПИСАТЬ', 8, 3),
(2850, 'ЗАЛЕЗАТЬ', 8, 1),
(2851, 'ТЕЛЕФОННЫЙ', 10, 1),
(2852, 'CONNECTED', 9, 1),
(2853, 'CONNECTIONS', 11, 1),
(2854, 'SHOW', 4, 1),
(2855, 'КОНСОЛЬ', 7, 2),
(2856, 'ПОДНЯТИЕ', 8, 1),
(2857, 'ПРИМЕНИТЬСЯ', 11, 1),
(2858, 'КОНФИЧЬ', 7, 3),
(2859, 'RESTART', 7, 1),
(2860, 'SERVICE', 7, 2),
(2861, 'ОПОЗДАНИЕ', 9, 1),
(2862, 'JABBER-КЛИЕНТ', 13, 1),
(2863, 'ЧАСТЫЙ', 6, 1),
(2864, 'ЗАПРЕТИТЬ', 9, 2),
(2865, 'ETCASTERISKEXTENSIONS_CUSTOMCONF', 32, 1),
(2866, 'TIMEOUT100', 10, 1),
(2867, 'BUDDYUSERNAME1COMPANY-NAMESUUSERNAME2COMPANY-NAMESUUSERNAME3COMPANY-NAMESU', 74, 1),
(2868, 'USESASLYES', 10, 1),
(2869, 'STATUSAVAILABLE', 15, 1),
(2870, 'STATUSMESSAGEI', 14, 1),
(2871, 'ГУГЛОВСКИЙ', 10, 1),
(2872, '99991JABBERSENDASTERISKJABBERUSERNAME1COMPANY-NAMESUCALLERIDALL', 63, 1),
(2873, 'ПРИШЛЫЙ', 7, 2),
(2874, '9999NHUNGUP', 11, 1),
(2875, '9999NJABBERSENDASTERISKJABBERUSERNAME3COMPANY-NAMESUCALLERIDALL', 63, 1),
(2876, 'ПУБЛИЧНЫЙ', 9, 1),
(2877, '9999NJABBERSENDASTERISKJABBERUSERNAME2COMPANY-NAMESUCALLERIDALL', 63, 1),
(2878, 'USETLSYES', 9, 1),
(2879, 'ПРИЯТНЫЙ', 8, 1),
(2880, 'ГУДОК', 5, 1),
(2881, 'СБРАСЫВАТЬСЯ', 12, 1),
(2882, 'RINGALL', 7, 1),
(2883, 'ОДНОВРЕМЕННО', 12, 2),
(2884, 'НЕДОСТУПНЫЙ', 11, 1),
(2885, 'БЕРЕТ', 5, 1),
(2886, 'ПРАВИЛЬНОСТЬ', 12, 1),
(2887, 'ДОЗВОНИТЬСЯ', 11, 1),
(2888, 'ПРОБОВАТЬ', 9, 2),
(2889, 'ПЕРЕЧИСЛЕННЫЙ', 13, 1),
(2890, 'ЗАВЕРШЕНИЕ', 10, 1),
(2891, 'SKIP', 4, 1),
(2892, 'ВКЛЮЧЕНИЕ', 9, 1),
(2893, 'BUZY', 4, 1),
(2894, 'AGENT', 5, 1),
(2895, 'ФИЛИАЛ', 6, 1),
(2896, 'ЛЕГКОЗАПОМИНАТЬСЯ', 17, 1),
(2897, 'ЕДИНЫЙ', 6, 2),
(2898, 'РАЗЪЕЗД', 7, 1),
(2899, 'СРЕДНИЙ', 7, 3),
(2900, 'ФИЛИАЛЬНЫЙ', 10, 1),
(2901, 'ТЕХПОДДЕРЖКА', 12, 1),
(2902, 'ПЕРЕАДРЕСОВЫВАТЬСЯ', 18, 1),
(2903, 'КОНТЕКСТ', 8, 3),
(2904, 'ПОЗВОЛИТЬ', 9, 6),
(2905, 'ОТБИВАТЬ', 8, 1),
(2906, 'ПРИЙТИ', 6, 1),
(2907, 'APPLICATIONS', 12, 1),
(2908, 'GROUPS', 6, 1),
(2909, 'GROUP', 5, 3),
(2910, 'ПРОБЛЕМЫ1', 9, 1),
(2911, 'СРОЧНЫЙ', 7, 1),
(2912, 'ПОДСТАВЛЯТЬСЯ', 13, 1),
(2913, 'КРИВАЯ', 6, 1),
(2914, 'ПЕРЕСТАТЬ', 9, 1),
(2915, 'КТО-НИБУДЬ', 10, 2),
(2916, 'ОБЕД', 4, 1),
(2917, 'ПЕРЕКУР', 7, 1),
(2918, 'ПЕРЕАДРЕСОВАТЬСЯ', 16, 1);
INSERT INTO `words` (`id`, `value`, `length`, `weight`) VALUES
(2919, 'ГОЛОС', 5, 1),
(2920, 'УЗНАВАНИЕ', 9, 1),
(2921, 'GSM', 3, 1),
(2922, 'РАЗВИТОЙ', 8, 1),
(2923, 'НАВЫК', 5, 1),
(2924, 'ПОЧТИ', 5, 2),
(2925, 'РАЗГОВОР', 8, 1),
(2926, 'ФРАЗА', 5, 1),
(2927, 'ЛИНИЯ', 5, 1),
(2928, 'ПР', 2, 1),
(2929, 'КОМПЕТЕНТНЫЙ', 12, 1),
(2930, 'ОБЩАТЬСЯ', 8, 2),
(2931, 'ПРОДОЛЖАТЬСЯ', 12, 1),
(2932, 'ПРИВЫЧКА', 8, 1),
(2933, 'ВНЕДРЕНИЕ', 9, 1),
(2934, 'ПРИВЯЗАННОСТЬ', 13, 1),
(2935, 'ЛИЧНЫЙ', 6, 1),
(2936, 'ИТ-СОТРУДНИК', 12, 1),
(2937, 'NAME', 4, 5),
(2938, 'УСТРАИВАТЬ', 10, 2),
(2939, 'РЬЯНЫЙ', 6, 1),
(2940, 'СТОРОННИК', 9, 1),
(2941, 'ЗВОНКОВЫЙ', 9, 1),
(2942, 'ПРЕКРАТИТЬСЯ', 12, 1),
(2943, 'ПРИВЫКНУТЬ', 10, 2),
(2944, 'ПРОПУСТИТЬ', 10, 1),
(2945, 'УВЕДОМЛЕНИЕ', 11, 2),
(2946, 'MONEY', 5, 1),
(2947, 'AMOUNTINKOPECS', 14, 1),
(2948, 'ПРИМИТИВ', 8, 1),
(2949, 'DECIMAL', 7, 1),
(2950, 'OTHER', 5, 1),
(2951, 'РУБЛЬ', 5, 1),
(2952, 'LONG', 4, 1),
(2953, 'STATIC', 6, 1),
(2954, 'OTHERAMOUNTINKOPECS', 19, 1),
(2955, 'КОПЕЙКА', 7, 1),
(2956, 'M2', 2, 1),
(2957, 'OPERATOR', 8, 1),
(2958, 'PRIVATE', 7, 1),
(2959, 'M1', 2, 1),
(2960, 'ВАЛЮТА', 6, 1),
(2961, 'EQUALSMONEY', 11, 1),
(2962, 'MONEYAMOUNTINKOPECS', 19, 1),
(2963, 'ПРИВЕДЕНИЕ', 10, 1),
(2964, 'KOPECFACTOR', 11, 1),
(2965, 'ОДЕРЖИМОСТЬ', 11, 1),
(2966, 'АНТИПАТТЕРН', 11, 1),
(2967, 'ДЕНЕЖНЫЙ', 8, 1),
(2968, 'РАЗРЕШИТЬ', 9, 1),
(2969, 'НЕЯВНЫЙ', 7, 1),
(2970, 'TRUE', 4, 1),
(2971, 'АБСТРАКЦИЯ', 10, 1),
(2972, '200M', 4, 1),
(2973, 'OVERRIDE', 8, 1),
(2974, 'ACCEPTEDINRUB', 13, 1),
(2975, 'DISPENSEDTOTALCASHAMOUNTINKOPECS', 32, 1),
(2976, 'GET', 3, 3),
(2977, 'КОПЕЕК2РУБ', 10, 1),
(2978, 'НАРВАТЬСЯ', 9, 1),
(2979, 'AMOUNTINRUBLES', 14, 1),
(2980, 'КОНСТРУКТОР', 11, 5),
(2981, 'АНАЛОГИЧНЫЙ', 11, 3),
(2982, 'ФАУЛЕР', 6, 1),
(2983, '32', 2, 2),
(2984, 'ДЕРЖАТЬ', 7, 1),
(2985, 'GTGT', 4, 1),
(2986, 'GETHASHCODE', 11, 1),
(2987, 'M1AMOUNTINKOPECS', 16, 1),
(2988, 'ADDMONEY', 8, 1),
(2989, 'OBJGETHASHCODE', 14, 1),
(2990, 'SUBTRACTMONEY', 13, 1),
(2991, 'GETHASHCODEMONEY', 16, 1),
(2992, 'ПОЛАГАТЬСЯ', 10, 1),
(2993, 'XEQUALSY', 8, 1),
(2994, 'РЕФАКТОРИНГ', 11, 2),
(2995, 'DOUBLE', 6, 1),
(2996, 'НОРМАЛЬНЫЙ', 10, 1),
(2997, 'M2AMOUNTINKOPECS', 16, 1),
(2998, 'GTMONEY', 7, 1),
(2999, 'УБИТЬ', 5, 1),
(3000, '-MONEY', 6, 1),
(3001, 'M1ADDM2', 7, 1),
(3002, 'M1SUBTRACTM2', 12, 1),
(3003, 'M1EQUALSM2', 10, 1),
(3004, 'EQUALSOBJECT', 12, 1),
(3005, 'СКОМПИЛИРОВАТЬСЯ', 16, 2),
(3006, 'ВВИДУ', 5, 2),
(3007, 'M', 1, 1),
(3008, 'ПРИПИСАТЬ', 9, 1),
(3009, 'FACTOR', 6, 1),
(3010, 'ЦЕНТОВЫЙ', 8, 1),
(3011, 'СРАВНЕНИЕ', 9, 4),
(3012, 'ПРОБА', 5, 1),
(3013, 'НЕЗАВИСИМОСТЬ', 13, 1),
(3014, 'MONEY200', 8, 1),
(3015, 'НРАВИТЬСЯ', 9, 3),
(3016, 'КАТЕГОРИЧЕСКИЙ', 14, 1),
(3017, 'ИБО', 3, 1),
(3018, 'РЕЗЮМЕ', 6, 1),
(3019, 'CONVERSION', 10, 1),
(3020, 'ИСПЫТЫВАТЬ', 10, 1),
(3021, 'IMPLICIT', 8, 1),
(3022, 'STRUCT', 6, 1),
(3023, 'КОТОР', 5, 5),
(3024, 'ПРОЧУВСТВОВАТЬ', 14, 1),
(3025, 'ДОЛГ', 4, 1),
(3026, 'ЗАБЫТЬ', 6, 2),
(3027, 'РАСПОЛЗТИСЬ', 11, 1),
(3028, 'ПЕРЕПИСАТЬ', 10, 3),
(3029, 'IP-АДРЕС', 8, 1),
(3030, 'ZIPCODE', 7, 1),
(3031, 'HASMISMATCHBETWEENCOUNTERSDISPENSINGCOMPLETEDEVENTARGS', 54, 1),
(3032, 'ГОВНОКОД', 8, 1),
(3033, 'НОВИЧОК', 7, 2),
(3034, 'ДАВНО', 5, 2),
(3035, 'НАТКНУТЬСЯ', 10, 1),
(3036, 'ВЕЗТИ', 5, 1),
(3037, 'ВИДИМО', 6, 1),
(3038, 'РАЗРАБОТКА', 10, 5),
(3039, 'ИЗНАЧАЛЬНО', 10, 1),
(3040, 'EVENTARGS', 9, 1),
(3041, 'EXPECTEDCHANGEINRUB', 19, 1),
(3042, 'IEQUALITYCOMPARERLTMONEYGT', 26, 1),
(3043, 'ICOMPARABLELTMONEYGT', 20, 1),
(3044, 'READONLY', 8, 1),
(3045, 'CONST', 5, 1),
(3046, 'ЭКОНОМИЯ', 8, 1),
(3047, 'РАССЧИТАТЬ', 10, 1),
(3048, 'ПЕРЕГРУЗКА', 10, 2),
(3049, 'ОПУСТИТЬ', 8, 1),
(3050, 'MONEYDECIMAL', 12, 1),
(3051, 'AMOUNTINRUB', 11, 1),
(3052, 'AMOUNTINKOPECSINKOPECS', 22, 1),
(3053, 'DECIMALAMOUNTINKOPECS', 21, 1),
(3054, 'COMPARETOMONEY', 14, 1),
(3055, '-1', 2, 1),
(3056, 'MONEYAMOUNTINRUBLES', 19, 1),
(3057, 'FROMRUBLESDECIMAL', 17, 1),
(3058, 'DECIMALROUNDAMOUNTINRUB', 23, 1),
(3059, 'MONEYLONG', 9, 1),
(3060, 'THISAMOUNTINKOPECS', 18, 1),
(3061, 'FROMKOPECSLONG', 14, 1),
(3062, 'БЫСТРЕНЬКО', 10, 1),
(3063, 'МЕСИВО', 6, 1),
(3064, 'ПЯТЬ', 4, 2),
(3065, 'EXPECTEDCHANGEINRUBRUBTOKOP', 27, 1),
(3066, 'EVENTARGSCHANGEAMOUNTKOPTORUB', 29, 1),
(3067, 'EVENTARGSUNDELIVEREDCHANGEAMOUNT', 32, 1),
(3068, 'EVENTARGSSTATEDISPENSEDTOTALCASHAMOUNT', 38, 1),
(3069, 'EVENTARGSSTATEACCEPTEDTOTALCASHAMOUNTKOPTORUB', 45, 1),
(3070, 'RUBTOKOP', 8, 1),
(3071, 'KOPTORUB', 8, 1),
(3072, 'ПРИЗНАК', 7, 1),
(3073, 'МЕТОДЫ-РАСШИРЕНИЕ', 17, 1),
(3074, 'КОНВЕРТАЦИЯ', 11, 1),
(3075, 'OBJECT', 6, 1),
(3076, 'ATMEL', 5, 1),
(3077, 'L21', 3, 1),
(3078, 'SAM', 3, 1),
(3079, 'SMART', 5, 1),
(3080, 'AVR', 3, 1),
(3081, 'ARM', 3, 1),
(3082, 'ЧИП', 3, 1),
(3083, 'СЕМЕЙСТВО', 9, 1),
(3084, 'ATMEGA', 6, 1),
(3085, 'ОФИЦИАЛЬНЫЙ', 11, 2),
(3086, 'ЭНЕРГОПОТРЕБЛЕНИЕ', 17, 1),
(3087, 'АНДРЕАС', 7, 1),
(3088, 'КОНТРОЛЛЕР', 10, 3),
(3089, '2015', 4, 1),
(3090, 'ПРОДУКТИВНОСТЬ', 14, 1),
(3091, 'ДОМЕН', 5, 1),
(3092, 'МК', 2, 1),
(3093, 'ОЗУ', 3, 1),
(3094, 'ФЛЭШ', 4, 1),
(3095, 'КБ', 2, 1),
(3096, '48', 2, 1),
(3097, 'CORTEX-M0', 9, 1),
(3098, 'ЙЕЛАНД', 6, 1),
(3099, 'PICOPOWER', 9, 1),
(3100, 'ПРОИЗВОДСТВО', 12, 1),
(3101, 'ST', 2, 1),
(3102, '32-БИТНЫЙ', 9, 1),
(3103, '363В', 4, 1),
(3104, 'РАЗДЕЛЬНЫЙ', 10, 2),
(3105, '162В', 4, 1),
(3106, '64', 2, 2),
(3107, 'TOUCH-ПАНЕЛЬ', 12, 1),
(3108, 'СИНХРОНИЗИРОВАТЬ', 16, 1),
(3109, 'РАССКАЗЫВАТЬ', 12, 1),
(3110, 'НАКОНЕЦ-ТО', 10, 1),
(3111, 'ПОНИЖЕННЫЙ', 10, 1),
(3112, 'СНИЗИТЬ', 7, 1),
(3113, 'ПОЛНОСТЬЮ', 9, 10),
(3114, 'ИЗМЕНИТЬ', 8, 2),
(3115, 'SWD-ДЕБАГ', 9, 1),
(3116, 'СПАТЬ', 5, 1),
(3117, 'FAKEFACTFELIS', 13, 1),
(3118, 'СОН', 3, 1),
(3119, 'ОТКЛЮЧАТЬСЯ', 11, 1),
(3120, 'СОТЫ', 4, 1),
(3121, 'ПОВОД', 5, 2),
(3122, 'МЕНЕДЖЕР', 8, 1),
(3123, 'ANDREAS', 7, 1),
(3124, 'МАРКЕТИНГ', 9, 1),
(3125, 'EIELAND', 7, 1),
(3126, 'ТРАДИЦИОННЫЙ', 12, 1),
(3127, '35', 2, 1),
(3128, 'МКАМГЦ', 6, 1),
(3129, 'ПРОБУЖДЕНИЕ', 11, 1),
(3130, 'UPDATE', 6, 1),
(3131, 'ВЗАИМОДЕЙСТВОВАТЬ', 17, 1),
(3132, 'ЗАМАНЧИВЫЙ', 10, 1),
(3133, 'CLION', 5, 1),
(3134, 'INTELLIJ', 8, 1),
(3135, 'ЗВУЧАТЬ', 7, 2),
(3136, 'XPLAINED', 8, 1),
(3137, 'МАКЕТИРОВАНИЕ', 13, 1),
(3138, '54', 2, 1),
(3139, 'ПРОДАВАТЬСЯ', 11, 1),
(3140, 'СЕНТЯБРЬ', 8, 1),
(3141, 'ЖЕЛАЮЩИЙ', 8, 2),
(3142, 'ПОДТЯНУТЬ', 9, 1),
(3143, 'СРЕДА', 5, 1),
(3144, 'ПРИЛИЧНЫЙ', 9, 1),
(3145, 'ПЛАГИН', 6, 2),
(3146, 'ТОРОПИТЬСЯ', 10, 1),
(3147, 'STM32', 5, 1),
(3148, 'ПЕРЕСЕСТЬ', 9, 1),
(3149, 'ECLIPSE', 7, 1),
(3150, 'СТОИМОСТЬ', 9, 1),
(3151, 'ОТЛАДОЧНЫЙ', 10, 1),
(3152, 'ЗАПУСКАТЬ', 9, 1),
(3153, 'СПИТЬ', 5, 1),
(3154, 'ПОПКОРН', 7, 1),
(3155, 'ПЕРИФЕРИЙНЫЙ', 12, 1),
(3156, 'ЗАБИРАТЬСЯ', 10, 1),
(3157, 'НЕИСПОЛЬЗУЕМЫЙ', 14, 1),
(3158, 'ЗАПАСАТЬСЯ', 10, 1),
(3159, 'NOTEPAD', 7, 1),
(3160, 'ЗАПИТАТЬ', 8, 1),
(3161, 'ФОТОГРАФИЯ', 10, 2),
(3162, 'ARSTECHNICACOM', 14, 1),
(3163, 'СОВМЕСТНО', 9, 1),
(3164, 'STUDIO', 6, 1),
(3165, 'ДИАГРАММА', 9, 2),
(3166, 'НИЖЕ', 4, 1),
(3167, 'ОСТАТОЧНЫЙ', 10, 1),
(3168, 'НАФАРШИРОВАННОСТЬ', 17, 1),
(3169, 'ДОПОТОПНОСТЬ', 12, 1),
(3170, 'РАЗВИВАТЬ', 9, 1),
(3171, 'ПОКЛОННИК', 9, 1),
(3172, 'НАДЕЖНОСТЬ', 10, 1),
(3173, 'ПЕРЕЙТИ', 7, 3),
(3174, 'КОПАТЬ', 6, 1),
(3175, 'ПРИКАЗАТЬ', 9, 1),
(3176, 'РУКОВОДСТВО', 11, 1),
(3177, 'ДОПИЛИВАНИЕ', 11, 1),
(3178, 'УМИРАТЬ', 7, 1),
(3179, 'ПОХОЖЕ', 6, 1),
(3180, 'МЫСЛЬ', 5, 3),
(3181, 'ФУНКЦИОНАЛЬНОСТЬ', 16, 1),
(3182, 'ГОНКА', 5, 1),
(3183, 'ВСТУПИТЬ', 8, 1),
(3184, 'IOT', 3, 1),
(3185, 'РАЗРАБОТАТЬ', 11, 1),
(3186, '1996', 4, 1),
(3187, 'ЗАСЛУЖИВАТЬ', 11, 1),
(3188, 'НОВОСТЬ', 7, 2),
(3189, 'МИМО', 4, 1),
(3190, 'ВОСЬМИБИТНЫЙ', 12, 1),
(3191, 'НАДЕЖНЫЙ', 8, 1),
(3192, 'ВЕЧНО', 5, 1),
(3193, 'БЕЗНАДЕЖНО', 10, 1),
(3194, 'УСТАРЕЛЫЙ', 9, 1),
(3195, 'AVR32', 5, 1),
(3196, 'ПОПУЛЯРНОСТЬ', 12, 3),
(3197, 'ОБРЕСТИ', 7, 1),
(3198, 'ПРЕЗЕНТАЦИЯ', 11, 1),
(3199, 'LIN', 3, 1),
(3200, 'SPI', 3, 1),
(3201, 'I2C', 3, 1),
(3202, 'SERCOM', 6, 1),
(3203, 'COMMUNICATION', 13, 1),
(3204, 'SERIAL', 6, 1),
(3205, 'USART', 5, 1),
(3206, '30', 2, 2),
(3207, 'ИМХИЙ', 5, 1),
(3208, 'ДВОР', 4, 1),
(3209, 'ХОСТ', 4, 3),
(3210, 'ШЕСТЬ', 5, 1),
(3211, 'INTERFACES', 10, 1),
(3212, 'ЦАП', 3, 1),
(3213, 'AES', 3, 1),
(3214, 'ГСЧ', 3, 1),
(3215, 'CRC-32', 6, 1),
(3216, 'QFN', 3, 1),
(3217, 'TQFP', 4, 1),
(3218, 'ШИФРОВАТЬСЯ', 11, 1),
(3219, 'ЛЮБИТЕЛЬ', 8, 2),
(3220, 'АЦП', 3, 1),
(3221, 'УСИЛИТЕЛЬ', 9, 1),
(3222, 'IO', 2, 1),
(3223, '51', 2, 1),
(3224, 'HS', 2, 1),
(3225, 'CORTEX-M7', 9, 1),
(3226, 'ПОГОНЯТЬ', 8, 1),
(3227, 'E70', 3, 1),
(3228, 'S70', 3, 1),
(3229, 'ПРЕСС-РЕЛИЗ', 11, 1),
(3230, 'ВЫСТАВКА', 8, 1),
(3231, 'УЛЬТРАНИЗКИЙ', 12, 1),
(3232, 'ПОТРЕБЛЕНИЕ', 11, 1),
(3233, 'РЕГУЛИРОВКА', 11, 1),
(3234, 'ФИШКА', 5, 1),
(3235, 'ПЛЮС', 4, 3),
(3236, 'ТАЙМЕРОВ-СЧЕТЧИК', 16, 1),
(3237, 'USB', 3, 1),
(3238, 'КАЛЕНДАРЬ', 9, 1),
(3239, 'МГЦ', 3, 1),
(3240, '256', 3, 1),
(3241, 'КОРПУС', 6, 1),
(3242, 'РАНО', 4, 1),
(3243, 'ЗАКАПЫВАТЬ', 10, 1),
(3244, 'UTF8', 4, 1),
(3245, 'ТРЮК', 4, 1),
(3246, 'VARTMPMYSQLSOCK', 15, 1),
(3247, 'PORT', 4, 1),
(3248, 'РЕДАКТИРОВАТЬ', 13, 1),
(3249, 'PHP', 3, 8),
(3250, 'ПРИСУТСТВОВАТЬ', 14, 1),
(3251, 'PKG', 3, 1),
(3252, 'ETCRCLOCAL', 10, 1),
(3253, 'MYSQL', 5, 3),
(3254, '20M', 3, 1),
(3255, 'СЛУЖБА', 6, 2),
(3256, 'SHELL', 5, 1),
(3257, 'SECURE', 6, 1),
(3258, 'CLIENT', 6, 1),
(3259, '3306', 4, 1),
(3260, 'APACHE24', 8, 1),
(3261, 'SOCKET', 6, 1),
(3262, 'PFSENSE', 7, 1),
(3263, 'USRSBINSERVICE', 14, 1),
(3264, '16M', 3, 1),
(3265, 'MAX_ALLOWED_PACKET', 18, 1),
(3266, 'KEY_BUFFER_SIZE', 15, 1),
(3267, 'ADVANCED', 8, 1),
(3268, 'МУСКУЛ', 6, 1),
(3269, 'SYSTEM', 6, 1),
(3270, 'APACHE', 6, 1),
(3271, 'SORT_BUFFER_SIZE', 16, 1),
(3272, 'EXTENSIONS', 10, 1),
(3273, 'RCCONF', 6, 1),
(3274, '512K', 4, 1),
(3275, 'START', 5, 1),
(3276, 'СТАРТОВЫЙ', 9, 1),
(3277, '2M', 2, 1),
(3278, 'SERVER-ID', 9, 1),
(3279, 'DEFAULT-CHARACTER-SET', 21, 1),
(3280, 'LOG-BINMYSQL-BIN', 16, 1),
(3281, 'MYSQLDUMP', 9, 1),
(3282, 'MYISAMCHK', 9, 1),
(3283, 'NO-AUTO-REHASH', 14, 1),
(3284, 'QUICK', 5, 1),
(3285, 'BINLOG_FORMATMIXED', 18, 1),
(3286, '8K', 2, 1),
(3287, 'NET_BUFFER_LENGTH', 17, 1),
(3288, 'READ_BUFFER_SIZE', 16, 1),
(3289, '256K', 4, 1),
(3290, 'TABLE_OPEN_CACHE', 16, 1),
(3291, 'MYSQLD', 6, 1),
(3292, 'SKIP-EXTERNAL-LOCKING', 21, 1),
(3293, '1M', 2, 1),
(3294, 'READ_RND_BUFFER_SIZE', 20, 1),
(3295, 'MYISAM_SORT_BUFFER_SIZE', 23, 1),
(3296, 'UTF8_UNICODE_CI', 15, 1),
(3297, 'CHARACTER_SET_SERVER', 20, 1),
(3298, 'CHARACTER_SET_CLIENT', 20, 1),
(3299, 'COLLATION_SERVER', 16, 1),
(3300, 'NAMES', 5, 1),
(3301, '8M', 2, 1),
(3302, 'INIT-CONNECTSET', 15, 1),
(3303, 'CHARACTER_SET_FILESYSTEM', 24, 1),
(3304, 'MBSTRINGINTERNAL_ENCODING', 25, 1),
(3305, 'ВИРТУАЛ', 7, 1),
(3306, 'ВКУС', 4, 1),
(3307, 'НАСТРАИВАТЬ', 11, 1),
(3308, 'ПЕРЕГРУЖАТЬСЯ', 13, 1),
(3309, 'АВТОМАТ', 7, 1),
(3310, 'ЗАПУСКАТЬСЯ', 11, 2),
(3311, 'ETCRCLOCALRUNNING', 17, 1),
(3312, 'MYSQL-SERVER', 12, 1),
(3313, 'BITRIX', 6, 1),
(3314, '127001', 6, 1),
(3315, 'БИТРИКС', 7, 1),
(3316, 'ПОСЛЕДУЮЩИЙ', 11, 1),
(3317, 'СКЛАДСКОЙ', 9, 1),
(3318, 'USRLOCALETCRCD', 14, 1),
(3319, 'DISPLAY_ERRORSOFF', 17, 1),
(3320, 'ЗАНОВО', 6, 1),
(3321, 'ETCRCPHP_INI_SETUP', 18, 1),
(3322, 'ГЕНЕРИТЬСЯ', 10, 1),
(3323, 'WRITE_BUFFER', 12, 1),
(3324, 'MYSQLHOTCOPY', 12, 1),
(3325, 'INTERACTIVE-TIMEOUT', 19, 1),
(3326, 'PHPINI', 6, 1),
(3327, 'MBSTRING', 8, 1),
(3328, 'UTF-8', 5, 2),
(3329, 'ВОРСИНКА', 8, 1),
(3330, 'ON', 2, 2),
(3331, 'OFF', 3, 1),
(3332, 'DISPLAY_STARTUP_ERRORSOFF', 25, 1),
(3333, 'ВЫСКАКИВАТЬ', 11, 1),
(3334, 'EXTENSIONMYSQLISO', 17, 1),
(3335, 'MBSTRINGFUNC_OVERLOAD', 21, 1),
(3336, 'EXTENSIONMYSQLSO', 16, 1),
(3337, 'READ_BUFFER', 11, 1),
(3338, 'ВЕБМИН', 6, 1),
(3339, 'РАДОСТЬ', 7, 2),
(3340, 'ПАКЕДЖ', 6, 1),
(3341, 'ПЕРЛОВЫЙ', 8, 1),
(3342, 'ПХПЭШНЫЙ', 8, 1),
(3343, 'ОБЕРТКА', 7, 1),
(3344, 'ШЛЮЗ', 4, 1),
(3345, 'ПЕРВОНАЧАЛЬНО', 13, 1),
(3346, 'ФОКУС', 5, 1),
(3347, 'ХОСТИТЬ', 7, 1),
(3348, 'СЦЕНАРИЙ', 8, 2),
(3349, 'ОТСУТСТВОВАТЬ', 13, 1),
(3350, 'ПОЛНОЦЕННЫЙ', 11, 2),
(3351, 'MYSQLSO', 7, 1),
(3352, 'PFSENSESO', 9, 1),
(3353, 'RCLOCAL', 7, 1),
(3354, 'SSH2SO', 6, 1),
(3355, 'ТД', 2, 3),
(3356, 'ОТЛИЧИЕ', 7, 5),
(3357, 'FREEBSD', 7, 1),
(3358, 'ГОЛЫЙ', 5, 1),
(3359, 'Т К', 3, 1),
(3360, '55', 2, 1),
(3361, 'PHP55-MYSQLI', 12, 1),
(3362, 'ЖЕЛАТЕЛЬНЫЙ', 11, 1),
(3363, 'СТАРТОВАТЬ', 10, 1),
(3364, 'ЧИСТИТЬ', 7, 1),
(3365, 'TMP', 3, 1),
(3366, 'СОКЕТ', 5, 2),
(3367, 'КЛАСТЬ', 6, 1),
(3368, 'ЗАГРУЗКА', 8, 1),
(3369, 'MYSQL_ENABLEQUOTYESQUOT', 23, 1),
(3370, 'ETCDEFAULTSRCCONF', 17, 1),
(3371, 'APACHE24_ENABLEQUOTYESQUOT', 26, 1),
(3372, 'PHP55-MYSQL', 11, 1),
(3373, 'MOD_PHP55', 9, 1),
(3374, 'ОСВОБОДИТЬ', 10, 1),
(3375, 'БЕКАП', 5, 1),
(3376, 'LIGHTHTTP', 9, 1),
(3377, 'WEBCONFIGURATOR', 15, 1),
(3378, 'ENABLE', 6, 1),
(3379, 'INSTALL', 7, 2),
(3380, 'MYSQL56-SERVER', 14, 1),
(3381, 'TCP', 3, 1),
(3382, '88', 2, 1),
(3383, 'USRLOCALETCMYCNF', 16, 1),
(3384, 'FAMP', 4, 1),
(3385, 'РУССКИЙ', 7, 1),
(3386, 'ФИКСИТЬ', 7, 1),
(3387, 'СЛЫШАТЬ', 7, 2),
(3388, 'IT-ЖАРГОН', 9, 1),
(3389, 'ЯНДЕКС', 6, 1),
(3390, 'ТЕСТАТЬ', 7, 1),
(3391, 'ПОПУЛЯРНЫЙ', 10, 4),
(3392, 'ЗАИМСТВОВАНИЕ', 13, 1),
(3393, 'АНГЛИЙСКИЙ', 10, 1),
(3394, 'РОД', 3, 1),
(3395, 'АПДЕЙТАТЬ', 9, 1),
(3396, 'ЗАМЕЧАТЕЛЬНО', 12, 1),
(3397, 'ДИАЛЕКТ', 7, 1),
(3398, 'OPEN-SOURCE', 11, 1),
(3399, 'ПОДЕЙСТВОВАТЬ', 13, 1),
(3400, 'ЖЕНСКИЙ', 7, 1),
(3401, 'ВЫСТРЕЛ', 7, 1),
(3402, 'УДАЧНО', 6, 1),
(3403, 'КАКАТЬ', 6, 2),
(3404, 'ЖАРГОННЫЙ', 9, 1),
(3405, 'НОРМА', 5, 1),
(3406, 'МУЖСКОЙ', 7, 1),
(3407, 'КОСЯК', 5, 1),
(3408, 'СЛОВЕЧКО', 8, 1),
(3409, 'ВОЛЬНЫЙ', 7, 1),
(3410, 'ПРЕКРАСНО', 9, 1),
(3411, 'ВОЙТИ', 5, 2),
(3412, 'КАТЕГОРИЯ', 9, 1),
(3413, 'СОХРАНЕНИЕ', 10, 2),
(3414, 'ОБЩЕМ-ТО', 8, 1),
(3415, 'ПРИВИТЬ', 7, 1),
(3416, 'ОБОСНОВАТЬ', 10, 1),
(3417, 'ВЯНУТЬ', 6, 1),
(3418, 'ГРАМОТНЫЙ', 9, 2),
(3419, 'УВАЖАТЬ', 7, 1),
(3420, 'УХО', 3, 1),
(3421, 'ОСЛЫШАТЬ', 8, 1),
(3422, 'ОСОБЫЙ', 6, 2),
(3423, 'ПРИДАВАТЬ', 9, 1),
(3424, 'РЕДКИЙ', 6, 2),
(3425, 'ВАЖНО', 5, 2),
(3426, 'СООТНОШЕНИЕ', 11, 1),
(3427, 'ОТЛИЧАТЬСЯ', 10, 3),
(3428, 'ПОФИКСАТЬ', 9, 1),
(3429, 'ПРОАПДЕЙТАТЬ', 12, 1),
(3430, 'КОНТРОЛЬНЫЙ', 11, 2),
(3431, 'ПРИСВОЕНИЕ', 10, 1),
(3432, 'OPENSTREETMAP', 13, 1),
(3433, 'ВЕРНЫЙ', 6, 2),
(3434, 'СЧИТАТЬСЯ', 9, 1),
(3435, 'ЗАКРЕПИТЬ', 9, 1),
(3436, 'ВОЗНИКАТЬ', 9, 1),
(3437, 'СОМНЕНИЕ', 8, 2),
(3438, 'ПРОВЕРКА', 8, 1),
(3439, 'ВЫСТУПАТЬ', 9, 1),
(3440, 'ЧАСТОТНОСТЬ', 11, 1),
(3441, 'ПОИСКОВЫЙ', 9, 1),
(3442, 'ВЫДАЧА', 6, 1),
(3443, 'ЛОГИЧНО', 7, 1),
(3444, 'ЗАИМСТВОВАТЬ', 12, 1),
(3445, 'ПОНЯТНЫЙ', 8, 2),
(3446, 'ЕСТЕСТВЕННЫЙ', 12, 1),
(3447, 'СООТВЕСТВОВАТЬ', 14, 1),
(3448, 'ЗАИМСТОВАННЫЙ', 13, 1),
(3449, 'ЗАИМСТВОВАННО-ИСКОВЕРКАТЬ', 25, 1),
(3450, 'ЧУЖЕРОДНЫЙ', 10, 1),
(3451, 'ПРЕДЛОГ', 7, 1),
(3452, 'СОЮЗ', 4, 1),
(3453, 'БОГАТЫЙ', 7, 1),
(3454, 'САМОБЫТНЫЙ', 10, 1),
(3455, 'НЕУСТАННО', 9, 1),
(3456, 'НАПОЛНЯТЬ', 9, 1),
(3457, 'IT-ЗАНЯТЫЙ', 10, 1),
(3458, 'НАСЕЛЕНИЕ', 9, 1),
(3459, 'МЫСЛИТЬ', 7, 1),
(3460, 'ЗАМЕЧАТЕЛЬНЫЙ', 13, 1),
(3461, 'ВО-ВТОРЫХ', 9, 3),
(3462, 'ОБА', 3, 3),
(3463, 'РАСПРОСТРАНИТЬ', 14, 1),
(3464, 'ТЕСТИТЬ', 7, 1),
(3465, '434', 3, 1),
(3466, '547', 3, 1),
(3467, 'БЕЗОБИДНЫЙ', 10, 1),
(3468, 'ПОИСКОВИК', 9, 1),
(3469, 'ПО-НАШЕМУ', 9, 1),
(3470, 'СОГЛАСНЫЙ', 9, 1),
(3471, 'АПДЕЙТИТЬ', 9, 1),
(3472, 'БЕЗОГОВОРОЧНО', 13, 1),
(3473, 'АПДЕЙТАЯТЬ', 10, 1),
(3474, 'СПРЯЖЕНИЕ', 9, 1),
(3475, 'ВЫЛЕЗАТЬ', 8, 1),
(3476, 'ИНОЗЕМНЫЙ', 9, 1),
(3477, 'НУТРО', 5, 1),
(3478, 'ВО-ПЕРВЫХ', 9, 4),
(3479, '156', 3, 1),
(3480, 'ИСКОВЕРКАТЬ', 11, 1),
(3481, 'ЧУЖАЯ', 5, 1),
(3482, 'СЛУХ', 4, 1),
(3483, '580', 3, 1),
(3484, 'ГРАНЬ', 5, 1),
(3485, '228', 3, 1),
(3486, '1000', 4, 1),
(3487, 'ИКОНКА', 6, 1),
(3488, 'НАДПИСЬ', 7, 1),
(3489, 'ПИКТОГРАММА', 11, 1),
(3490, 'КНОПКА', 6, 1),
(3491, 'TWITTER', 7, 1),
(3492, 'ЯСНО', 4, 2),
(3493, 'TWEETBOT', 8, 1),
(3494, 'TWITTERA', 8, 1),
(3495, 'СПРЯТАТЬ', 8, 1),
(3496, 'КОРОТКО', 7, 1),
(3497, 'НЕПОНЯТНЫЙ', 10, 1),
(3498, 'TUMBLR', 6, 1),
(3499, 'ЯСНОСТЬ', 7, 1),
(3500, 'ЯВНО', 4, 3),
(3501, 'СЕЙ', 3, 1),
(3502, 'ДОВОДИТЬСЯ', 10, 1),
(3503, 'ШАНС', 4, 1),
(3504, 'ИСПОЛНЯТЬ', 9, 2),
(3505, 'ИНТЕРПРЕТИРОВАТЬ', 16, 1),
(3506, 'ДВОЯКО', 6, 1),
(3507, 'ПОНЯТНОСТЬ', 10, 1),
(3508, 'ОСТОРОЖНЫЙ', 10, 1),
(3509, 'CALENDAR', 8, 1),
(3510, 'РЕДИЗАЙН', 8, 1),
(3511, 'INSTAGRAM', 9, 1),
(3512, 'НАПРЯМУЮ', 8, 3),
(3513, 'ПЕРЕПИСКА', 9, 1),
(3514, 'ФОТО', 4, 1),
(3515, 'ОТПРАВИТЬ', 9, 1),
(3516, 'ГЛАВНЫЙ', 7, 7),
(3517, 'RDIO', 4, 1),
(3518, 'ПРОЯСНЯТЬСЯ', 11, 1),
(3519, 'ГРОМКОСТЬ', 9, 1),
(3520, 'ДОРОЖКА', 7, 1),
(3521, 'ПРОИГРЫВАТЬ', 11, 1),
(3522, 'РАЗОБРАТЬСЯ', 11, 3),
(3523, 'АУДИОПЛЕЕР', 10, 1),
(3524, 'СПОРНЫЙ', 7, 1),
(3525, 'APP', 3, 3),
(3526, 'СЛУЧАТЬСЯ', 9, 2),
(3527, 'ИКОНКУ-ГАМБУРГЕР', 16, 1),
(3528, 'ЛЮБО', 4, 1),
(3529, 'ОКЬ', 3, 1),
(3530, 'ВХОДЯЩИЙ', 8, 1),
(3531, 'ПРИЕМЛЕМЫЙ', 10, 1),
(3532, 'STORE', 5, 1),
(3533, 'FACEBOOK', 8, 1),
(3534, 'БЕРЕЧЬ', 6, 1),
(3535, 'GMAIL', 5, 1),
(3536, 'ВЫУЧИТЬ', 7, 1),
(3537, 'ДЭЙВИД', 6, 1),
(3538, 'ДИЗАЙНЕР', 8, 1),
(3539, 'STAR', 4, 1),
(3540, 'СМИТ', 4, 1),
(3541, 'ИЗОБРЕСТИ', 9, 1),
(3542, 'КОНЦЕПЦИЯ', 9, 1),
(3543, 'XEROX', 5, 1),
(3544, 'СНИМКА', 6, 1),
(3545, 'ВЗГЛЯНИТЕ-КА', 12, 1),
(3546, 'СПОСОБНЫЙ', 9, 1),
(3547, 'ЦЕЛОВАТЬ', 8, 1),
(3548, 'ПОДРЯД', 6, 1),
(3549, 'UI', 2, 1),
(3550, 'НАГРУЗИТЬ', 9, 1),
(3551, 'ОБРЕТАТЬ', 8, 1),
(3552, 'ПОЛЬЗОВАТЕЛЬСКИЙ', 16, 1),
(3553, 'РАЗРУШИТЬ', 9, 1),
(3554, 'ДЛИННО', 6, 1),
(3555, 'JANATEM', 7, 1),
(3556, 'ПОГОВОРИТЬ', 10, 2),
(3557, 'ЧАСТЬЮ', 6, 1),
(3558, 'ПИСЬМЕННОСТЬ', 12, 1),
(3559, 'МЕСТНЫЙ', 7, 1),
(3560, 'ХВАТАТЬ', 7, 1),
(3561, 'СТАЛЬ', 5, 5),
(3562, 'АЭРОПОРТ', 8, 1),
(3563, 'МЕЖДУНАРОДНЫЙ', 13, 1),
(3564, 'ПЕРЕДАЧА', 8, 1),
(3565, 'НЕГРАМОТНЫЙ', 11, 1),
(3566, 'ОБЩЕСТВЕННЫЙ', 12, 1),
(3567, 'ОСОБЕННО', 8, 3),
(3568, 'СЛУЖИТЬ', 7, 1),
(3569, 'ПИСЬМО', 6, 1),
(3570, 'APPLE', 5, 1),
(3571, 'ПРЕДНАЗНАЧЕНИЕ', 14, 1),
(3572, 'ЗАПРОСТО', 8, 1),
(3573, 'СПРАВЕДЛИВО', 11, 1),
(3574, 'ПОЧТОВЫЙ', 8, 1),
(3575, 'ИЗЪЯН', 5, 1),
(3576, 'ЗАКАНЧИВАТЬСЯ', 13, 1),
(3577, 'ПО-ВИДИМОМУ', 11, 1),
(3578, 'РАЗРУШАТЬ', 9, 1),
(3579, 'СБИВАТЬ', 7, 1),
(3580, 'ТОЛК', 4, 1),
(3581, 'ПРОДУКТ', 7, 2),
(3582, 'ЗАДУМАТЬСЯ', 10, 2),
(3583, 'ЗАСТАВЛЯТЬ', 10, 1),
(3584, 'ЗАПАДНЯ', 7, 1),
(3585, 'АКТУАЛЬНО', 9, 1),
(3586, 'ЭКРАН', 5, 1),
(3587, 'TWITTERА', 8, 1),
(3588, 'БЕЛЬЕ', 5, 1),
(3589, 'СТИРКА', 6, 1),
(3590, 'ЗНАЧКОВЫЙ', 9, 1),
(3591, 'РОН', 3, 1),
(3592, 'ЗАПУТАТЬСЯ', 10, 1),
(3593, 'ОСОЗНАТЬ', 8, 1),
(3594, 'PHPIXIE', 7, 12),
(3595, 'РОССИЯ', 6, 1),
(3596, 'ИНТЕРЕСНЫЙ', 10, 5),
(3597, 'УКРАИНА', 7, 1),
(3598, 'ГРУП', 4, 1),
(3599, 'ВОЗРАСТНОЙ', 10, 1),
(3600, 'ФРЕЙМВОРОК', 10, 4),
(3601, 'ПОБЕДИТЬ', 8, 1),
(3602, 'YII2', 4, 1),
(3603, 'ФРЕЙМВОРКОВЫЙ', 13, 4),
(3604, 'ОПРОС', 5, 1),
(3605, 'ОПУБЛИКИРОВАТЬ', 14, 1),
(3606, 'SITEPOINT', 9, 1),
(3607, 'ПЕРСОНАЛЬНЫЙ', 12, 1),
(3608, 'ПРОГОЛОСОВАТЬ', 13, 1),
(3609, '7800', 4, 1),
(3610, 'LTPHP', 5, 2),
(3611, 'TEMPLATE', 8, 1),
(3612, 'РАСШИРЕНИЕ', 10, 4),
(3613, 'DIRECTORY', 9, 1),
(3614, 'INCLUDE', 7, 1),
(3615, 'ЛОКАТОР', 7, 2),
(3616, 'HAML', 4, 1),
(3617, 'НАСЛЕДОВАНИЕ', 12, 1),
(3618, 'CONFIG', 6, 2),
(3619, 'HTML', 4, 1),
(3620, 'PREFIX', 6, 1),
(3621, 'IMPLEMENTS', 10, 1),
(3622, 'RESOLVER', 8, 1),
(3623, 'LOCATOR', 7, 2),
(3624, '__DIR__TEMPLATES', 16, 1),
(3625, 'SITE', 4, 1),
(3626, 'QUOT3DEVQUOT', 12, 1),
(3627, 'LOCATORS', 8, 1),
(3628, 'LAYOUTPHP', 9, 1),
(3629, 'ВКЛЮЧАЯ', 7, 5),
(3630, 'FAIRYPHP', 8, 1),
(3631, '_NAME', 5, 1),
(3632, 'LTTITLEGT', 9, 1),
(3633, 'ВЗГЛЯНУТЬ', 9, 1),
(3634, 'РОДИТЕЛЬСКИЙ', 12, 2),
(3635, 'ШАБЛОНИЗАТОР', 12, 1),
(3636, 'THEMEHOME', 9, 1),
(3637, 'ИСКАТЬСЯ', 8, 1),
(3638, 'THEME', 5, 1),
(3639, 'THIS-GTRESOLVEFAIRY', 19, 1),
(3640, 'SITELAYOUT', 10, 1),
(3641, '__DIR__FALLBACK', 15, 1),
(3642, 'TEMPLATES', 9, 1),
(3643, 'ГРУППИРОВАТЬ', 12, 1),
(3644, 'DRIECTORY', 9, 1),
(3645, '3-Х', 3, 1),
(3646, 'ПРЕФИКС', 7, 1),
(3647, 'SLICE-GTARRAYDATA', 17, 1),
(3648, '__DIR__SITE', 11, 1),
(3649, 'TEMPLATEEXAMPLES', 16, 1),
(3650, 'CD', 2, 1),
(3651, 'КОМПОЗЕР', 8, 1),
(3652, 'CURL', 4, 1),
(3653, 'HTTPSGETCOMPOSERORGINSTALLER', 28, 1),
(3654, '-SS', 3, 1),
(3655, 'HTTPSGITHUBCOMPHPIXIETEMPLATE', 29, 1),
(3656, 'CLONE', 5, 1),
(3657, 'ДТЬ', 3, 1),
(3658, 'GIT', 3, 1),
(3659, 'COMPOSERPHAR', 12, 1),
(3660, 'СТАРШИЙ', 7, 1),
(3661, '53', 2, 2),
(3662, 'HHVM', 4, 1),
(3663, '7', 1, 3),
(3664, 'QUICKSTARTPHP', 13, 1),
(3665, 'ПОКРЫТИЕ', 8, 2),
(3666, 'АНАЛОГИЧИНА', 11, 1),
(3667, 'THIS-GTESCAPESTRING', 19, 1),
(3668, 'PHPIXIETEMPLATEEXTENSIONSEXTENSION', 34, 1),
(3669, 'ЭКРАНИРОВАНИЕ', 13, 1),
(3670, 'METHODS', 7, 1),
(3671, 'ARRAYESCAPE', 11, 1),
(3672, 'HTMLSPECIALCHARSSTRING', 22, 1),
(3673, 'ESCAPESTRING', 12, 1),
(3674, 'ENT_QUOTES', 10, 1),
(3675, 'ECHO', 4, 3),
(3676, 'OUTPUTSTRING', 12, 1),
(3677, '_', 1, 1),
(3678, 'ALIASES', 7, 1),
(3679, 'ПРЕДПОЧИТАТЬ', 12, 1),
(3680, 'УДОБНОСТЬ', 9, 1),
(3681, 'НАЗНАЧИТЬ', 9, 1),
(3682, 'THIS-GTOUTPUTNAME', 17, 1),
(3683, 'FALLBACKS', 9, 1),
(3684, 'QUOT170QUOT', 11, 1),
(3685, 'QUOTMTHAMLMTHAMLQUOT', 20, 1),
(3686, 'HAMLFORMAT', 10, 1),
(3687, 'ВРАППЕР', 7, 1),
(3688, 'QUOTPHPIXIESLICEQUOT', 20, 1),
(3689, 'QUOTPHPIXIETEMPLATEQUOT', 23, 1),
(3690, 'ПОДРУЖИТЬ', 9, 1),
(3691, 'MTHAMLMTHAML', 12, 1),
(3692, 'COMPOSERJSON', 12, 1),
(3693, 'QUOTREQUIREQUOT', 15, 1),
(3694, 'PHPIXIETEMPLATEFORMATSFORMAT', 28, 1),
(3695, 'PROTECTED', 9, 3),
(3696, 'CONTENTS', 8, 1),
(3697, 'COMPILEFILE', 11, 1),
(3698, 'FILE_GET_CONTENTSFILE', 21, 1),
(3699, 'THIS-GTMTHAML-GTCOMPILESTRINGCONTENTS', 37, 1),
(3700, 'ARRAYHAML', 9, 1),
(3701, 'HANDLEDEXTENSIONS', 17, 1),
(3702, '__CONSTRUCT', 11, 2),
(3703, 'MTHAML', 6, 1),
(3704, 'THIS-GTMTHAML', 13, 1),
(3705, 'MTHAMLENVIRONMENTPHP', 20, 1),
(3706, 'ВКУСНЫЙ', 7, 1),
(3707, 'ПРОИЗВОЛЬНЫЙ', 12, 1),
(3708, 'БЛОЧНЫЙ', 7, 1),
(3709, 'ДОБАВИТЬСЯ', 10, 2),
(3710, 'ПРЕДОСТАВИТЬ', 12, 3),
(3711, 'ИТД', 3, 3),
(3712, 'КЭШИРОВАНИЕ', 11, 1),
(3713, 'ТРАНСЛИРОВАТЬ', 13, 1),
(3714, 'ПОДГРУЗКА', 9, 1),
(3715, 'THIS-GTBLOCKTITLE', 17, 1),
(3716, 'ДОСТУПНО', 8, 1),
(3717, 'СВЕРХУ', 6, 1),
(3718, 'ВНИЗ', 4, 1),
(3719, 'THIS-GTCHILDCONTENT', 19, 1),
(3720, 'THIS-GTLAYOUTLAYOUT', 19, 1),
(3721, 'TWIG', 4, 1),
(3722, 'РАСШИРЯТЬ', 9, 2),
(3723, 'GTLTH2GT', 8, 1),
(3724, 'FAIRY', 5, 4),
(3725, 'THIS-GTSTARTBLOCKTITLE', 22, 1),
(3726, 'PAGE', 4, 1),
(3727, 'THIS-GTENDBLOCK', 15, 1),
(3728, 'LTH2GTHELLO', 11, 1),
(3729, 'РЕНДЕРИНГ', 9, 1),
(3730, 'DEFAULTEXTENSION', 16, 1),
(3731, 'SLICE-GTARRAYDATAARRAY', 22, 1),
(3732, 'COMPILER', 8, 1),
(3733, 'CACHEDIRECTORY', 14, 1),
(3734, 'PHPIXIESLICE', 12, 1),
(3735, 'SLICE', 5, 2),
(3736, 'ВСПОМОГАТЕЛЬНЫЙ', 15, 1),
(3737, 'КОНФИГА', 7, 1),
(3738, '__DIR__CACHE', 12, 1),
(3739, 'PHPIXIETEMPLATESLICE', 20, 1),
(3740, 'АДАПТИРОВАТЬ', 12, 1),
(3741, 'АВТОМАТИЧЕСКИЙ', 14, 2),
(3742, 'HAMLCOMPILER', 12, 1),
(3743, 'КОМПИЛИРОВАТЬСЯ', 15, 2),
(3744, 'КЭШИРОВАТЬСЯ', 12, 1),
(3745, 'ПРИДУМАТЬ', 9, 3),
(3746, 'ВКУСНЯШКА', 9, 1),
(3747, 'РОУТ', 4, 2),
(3748, 'ILLUSION', 8, 1),
(3749, 'HEADERS', 7, 1),
(3750, 'ИСКЛЮЧЕНИЕ', 10, 3),
(3751, 'ЗАГОЛОВОК', 9, 1),
(3752, 'TRIXIE', 6, 3),
(3753, 'ПЕРЕКИДЫВАНИЕ', 13, 1),
(3754, 'ДЕСТРУКТОР', 10, 1),
(3755, 'STUPIDHTTP', 10, 1),
(3756, 'МОДИФИЦИРОВАННЫЙ', 16, 1),
(3757, 'ИЗБЕЖАТЬ', 8, 3),
(3758, 'ВЫЙТИ', 5, 2),
(3759, 'ОБРАБОТЧИК', 10, 1),
(3760, 'STOPSERVER', 10, 1),
(3761, 'ВИСЕТЬ', 6, 1),
(3762, 'ОСТАНАВЛИВАТЬСЯ', 15, 1),
(3763, 'ЗАКОНЧИТЬСЯ', 11, 1),
(3764, 'ПОТОК', 5, 1),
(3765, 'ПРЕДЕЛЬНО', 9, 1),
(3766, 'НАВЕРНЯКА', 9, 2),
(3767, 'ЗАДАВАТЬ', 8, 2),
(3768, 'ARRAYCONTENT-TYPE', 17, 1),
(3769, 'TEXTPLAIN', 9, 1),
(3770, 'CLIENT-GTSTOPSERVER', 19, 1),
(3771, 'ОСТАНОВКА', 9, 1),
(3772, 'ILLUSION-GTROUTEPIXIE', 21, 1),
(3773, 'ИНСТРУМЕНТ', 10, 1),
(3774, '4747', 4, 1),
(3775, 'PHPIXIEILLUSIONSTARTPORT', 24, 1),
(3776, 'ILLUSION-GTROUTEPIXIEFAIRY', 26, 1),
(3777, 'FILE_GET_CONTENTSURL', 20, 1),
(3778, 'MOCK', 4, 2),
(3779, 'ТОКЕН', 5, 1),
(3780, 'КУК', 3, 1),
(3781, 'ФРЕЙМВОРК', 9, 11),
(3782, 'ПАРОЛЬ', 6, 1),
(3783, 'УКРАСТЬ', 7, 1),
(3784, 'IP', 2, 1),
(3785, 'LARAVEL', 7, 2),
(3786, 'REMEMBER', 8, 1),
(3787, 'РАНДОМНЫЙ', 9, 1),
(3788, 'ГОДНОСТЬ', 8, 1),
(3789, 'ФАКТИЧЕСКИЙ', 11, 4),
(3790, 'СРОК', 4, 1),
(3791, 'ЗАЛОГИНИТЬСЯ', 12, 1),
(3792, 'УЯЗВИМОСТЬ', 10, 1),
(3793, 'АВТОРИЗАЦИЯ', 11, 1),
(3794, 'ТАБЛИЧКА', 8, 2),
(3795, 'ЛОГИН', 5, 1),
(3796, 'ВКЛЮЧИТЬ', 8, 3),
(3797, 'ПУНКТ', 5, 1),
(3798, 'НУЖДАТЬСЯ', 9, 1),
(3799, 'TOKEN', 5, 1),
(3800, 'УНИКАЛЬНЫЙ', 10, 1),
(3801, 'USER_ID', 7, 1),
(3802, 'EXPIRES_ON', 10, 1),
(3803, 'ВАЛИДНОСТЬ', 10, 1),
(3804, 'ЛОГИНИТЬ', 8, 1),
(3805, 'ПРИМИТИВНЫЙ', 11, 1),
(3806, 'ДОВЕРЯТЬ', 8, 1),
(3807, 'КОНТРАСТ', 8, 1),
(3808, 'БЕЗОПАСНОСТЬ', 12, 1),
(3809, 'КРИТИК', 6, 1),
(3810, 'ПРОДЕМОНСТРИРОВАТЬ', 18, 1),
(3811, 'НЕПОНИМАНИЕ', 11, 1),
(3812, 'ВОСПРИНЯТЬ', 10, 1),
(3813, 'СОЗДАТЕЛЬ', 9, 2),
(3814, 'СДАЛАТЬ', 7, 1),
(3815, 'УПРОЩЕННЫЙ', 10, 2),
(3816, 'НАВЕСТИ', 7, 1),
(3817, 'БОНУС', 5, 2),
(3818, 'ПРИВЯЗКА', 8, 2),
(3819, 'НАМНОГО', 7, 6),
(3820, 'ТРУДНЫЙ', 7, 2),
(3821, 'ПРОЦЕДУРА', 9, 1),
(3822, 'ИМПЛЕМЕНТАЦИЯ', 13, 3),
(3823, 'УЗНАТЬ', 6, 1),
(3824, 'ИМПЛЕМЕНТИРОВАТЬ', 16, 1),
(3825, 'ЯВЛЯТЬ', 6, 3),
(3826, 'ПОДБИРАТЬ', 9, 1),
(3827, 'ШИФРОВКА', 8, 1),
(3828, 'ЗАШИФРОВАТЬ', 11, 1),
(3829, 'ОТРУБАТЬ', 8, 1),
(3830, 'ГИДРА', 5, 1),
(3831, 'ИМПЕРСОНИРОВАТЬ', 15, 1),
(3832, 'ОПУБЛИКОВАТЬ', 12, 3),
(3833, 'ПОДДЕЛЬНЫЙ', 10, 1),
(3834, 'ВЗГЛЯД', 6, 3),
(3835, 'ЗАКРЫТЬ', 7, 1),
(3836, 'ДЫРА', 4, 1),
(3837, 'ТАКИ', 4, 4),
(3838, 'ОДНАЖДЫ', 7, 1),
(3839, 'СЮДА', 4, 1),
(3840, 'МАКДОНАЛЬДС', 11, 1),
(3841, 'REMEMBER_ME', 11, 1),
(3842, 'ПЕРЕХВАТИТЬ', 11, 2),
(3843, 'ПАКЕСТИ', 7, 1),
(3844, 'ДВЕРЬ', 5, 1),
(3845, 'HARTBLEED', 9, 1),
(3846, 'OPENSSL', 7, 1),
(3847, 'АККАУНТ', 7, 1),
(3848, 'НАВСЕГДА', 8, 1),
(3849, 'ЗАХВАТЧИК', 9, 1),
(3850, 'ЗАЙТИ', 5, 2),
(3851, 'БЕЗОПАСНО', 9, 1),
(3852, 'QUERY', 5, 3),
(3853, 'ELF', 3, 1),
(3854, 'MONGODB', 7, 2),
(3855, 'OR', 2, 2),
(3856, '-GTWHERETYPE', 12, 1),
(3857, 'КОЛОНКА', 7, 2),
(3858, 'CASTLE', 6, 1),
(3859, 'MINAMOUNT', 9, 1),
(3860, '__CONSTRUCTSLICE', 16, 1),
(3861, 'AND', 3, 3),
(3862, 'WHERE', 5, 2),
(3863, 'ВЛОЖИТЬ', 7, 2),
(3864, '-GT_ANDTYPE', 11, 1),
(3865, '-GTWHEREAMOUNTGT', 16, 1),
(3866, 'AMOUNT', 6, 1),
(3867, 'PLACEHOLDER', 11, 1),
(3868, 'BATTLEFIELD', 11, 1),
(3869, 'ATTACK', 6, 1),
(3870, '-GT_ANDNAME', 11, 1),
(3871, '-GTHAVINGCOUNT', 14, 2),
(3872, 'LEVEL', 5, 1),
(3873, 'ИНДЕКС', 6, 2),
(3874, 'CONFIGPHP', 9, 1),
(3875, 'THIS-GTBACKGROUND', 17, 1),
(3876, '-GTORWHEREFUNCTIONQ', 19, 1),
(3877, 'Q', 1, 1),
(3878, 'ОПЦИЯ', 5, 1),
(3879, 'НЕЗАВИСИМЫЙ', 11, 1),
(3880, 'ПРОСЧИТАТЬ', 10, 1),
(3881, 'МЕСТЕКЛАСС', 10, 1),
(3882, 'СТАНДАРТ', 8, 3),
(3883, 'ACTIVE', 6, 1),
(3884, 'PLACEHOLDER-GT_ANDSTATUS', 24, 1),
(3885, 'STATUSACTIVE', 12, 1),
(3886, 'CODE', 4, 1),
(3887, 'Q-GTADDPLACEHOLDERAND', 21, 1),
(3888, 'ПОХОЖИЙ', 7, 4),
(3889, 'ОСТАНОВИТЬСЯ', 12, 2),
(3890, 'BUILDERS', 8, 2),
(3891, 'ФИГУРАЛЬНЫЙ', 11, 1),
(3892, 'СТРОИТЕЛЬ', 9, 2),
(3893, 'CONDITION', 9, 2),
(3894, 'PSR-2', 5, 1),
(3895, 'PLACEHOLDERS', 12, 1),
(3896, 'СРАВНИВАТЬСЯ', 12, 2),
(3897, 'КОРОБКА', 7, 1),
(3898, 'ОСОБЕННЫЙ', 9, 1),
(3899, 'СТРИНГ', 6, 1),
(3900, 'ЛАКОНИЧНО', 9, 1),
(3901, 'НАЗВАНИЕ', 8, 2),
(3902, 'ПРИСТАВИТЬ', 10, 1),
(3903, 'XORHAVING', 9, 1),
(3904, 'СОКРАТИТЬ', 9, 1),
(3905, 'ORWHERENOT', 10, 1),
(3906, 'SQL', 3, 3),
(3907, 'HAVING', 6, 2),
(3908, 'ИЗМЕНИТЬСЯ', 10, 1),
(3909, 'COVERAGE', 8, 1),
(3910, 'ИСПРАВИТЬ', 9, 2),
(3911, '-GT_XORMAX', 10, 1),
(3912, '-GTORWHEREID', 12, 1),
(3913, '-GTXORHAVINGMAX', 15, 1),
(3914, '-GT_ORID', 8, 1),
(3915, 'ДОБАВЛЕНИЕ', 10, 3),
(3916, 'ПРЯМО', 5, 1),
(3917, 'TURRETS_AMOUNT', 14, 1),
(3918, 'ПОКРЫТЬ', 7, 2),
(3919, 'THIS-GTBATTLEFIELD', 18, 1),
(3920, 'РАЗБИЕНИЕ', 9, 2),
(3921, 'LEVELCONFIG', 11, 1),
(3922, 'BACKGROUNDCONFIG-GTGETTURRETSAMOUNT', 35, 1),
(3923, 'BATTLEFIELDCONFIG-GTSLICEBATTLEFIELD', 36, 1),
(3924, 'BACKGROUNDCONFIG-GTGETBACKGROUND', 32, 1),
(3925, 'THIS-GTCASTLE', 13, 1),
(3926, 'CASTLECONFIG-GTSLICECASTLE', 26, 1),
(3927, 'УБЕДИТЬСЯ', 9, 1),
(3928, 'FOREST', 6, 2),
(3929, 'TURRETS', 7, 1),
(3930, 'АГНОСТИЧЕСКИЙ', 13, 1),
(3931, 'KNIGHT', 6, 1),
(3932, 'ATTACKERS', 9, 1),
(3933, 'BACKGROUND', 10, 1),
(3934, 'ИГРОК', 5, 1),
(3935, 'ЗАХВАТИТЬ', 9, 2),
(3936, 'ЗАМОКНУТЬ', 9, 1),
(3937, 'PALADIN', 7, 1),
(3938, 'SLICES', 6, 1),
(3939, 'CONFIG-GTGETBATTLEFIELDCASTLETURRETSAMOUNT', 42, 1),
(3940, 'HEAL', 4, 1),
(3941, 'SPELL', 5, 1),
(3942, 'ЧТЕНИЕ', 6, 1),
(3943, 'БАН', 3, 1),
(3944, 'FORESTMEADOWFORESTNAME', 22, 1),
(3945, 'CONFIGFORESTMEADOWFAIRYPHP', 26, 1),
(3946, 'FAIRYNAME', 9, 1),
(3947, 'CONFIGFORESTMEADOWPHP', 21, 1),
(3948, 'CONFIGFORESTPHP', 15, 1),
(3949, 'MEADOWFORESTNAME', 16, 1),
(3950, 'ЗАБАНИТЬ', 8, 1),
(3951, 'АЙПИШКА', 7, 1),
(3952, 'ИГРА', 4, 1),
(3953, 'ОБЕЩАТЬ', 7, 2),
(3954, 'DATABASE', 8, 1),
(3955, 'ВСЕГО-ЛИТЬ', 10, 1),
(3956, 'КОНЕКТ', 6, 1),
(3957, 'СПЕЦИФИЧЕСКИЙ', 13, 1),
(3958, 'ЧЕГО-ТО', 7, 1),
(3959, 'GITIGNORE', 9, 1),
(3960, 'КОММИТИТЬ', 9, 1),
(3961, '-FAIRYPHP', 9, 1),
(3962, 'FORESTMEADOWFAIRYNAME', 21, 1),
(3963, '-MEADOW', 7, 1),
(3964, '-FOREST', 7, 1),
(3965, '-FORESTPHP', 10, 1),
(3966, 'БУДУЩИЙ', 7, 3),
(3967, 'CATEGORY_ID', 11, 1),
(3968, 'ПАРСЕР', 6, 1),
(3969, 'ORM', 3, 4),
(3970, 'PARSER', 6, 1),
(3971, 'ПРОДВИНУТЬ', 10, 1),
(3972, '-GT_ORID5', 9, 1),
(3973, '-GT_ANDID7', 10, 1),
(3974, 'TRIXIETEST', 10, 1),
(3975, 'СПЕЦИАЛЬНЫЙ', 11, 1),
(3976, 'ЛЕГКИЙ', 6, 5),
(3977, 'TINKERBELL', 10, 1),
(3978, '-GTWHERENAME', 12, 1),
(3979, 'ДРАЙВЕР', 7, 1),
(3980, 'PDO', 3, 2),
(3981, 'НАПЕРЕД', 7, 1),
(3982, 'PHPUNIT', 7, 1),
(3983, 'QUERY-GTWHERECATEGORY_ID', 24, 1),
(3984, 'ТРИВИАЛЬНЫЙ', 11, 2),
(3985, 'QUERY-GTJOINPIXIES', 18, 1),
(3986, 'СИНТАКС', 7, 1),
(3987, 'CONCATNAME', 10, 1),
(3988, 'JOINON', 6, 1),
(3989, 'СОЗДАТЬСЯ', 9, 1),
(3990, 'QUERY-GTWHEREFAIRIESIDPIXIESID', 30, 1),
(3991, 'НЕДАЛЕКО', 8, 1),
(3992, 'ФИНАЛЬНЫЙ', 9, 1),
(3993, 'ARRAYTEST', 9, 1),
(3994, 'QUERY-GTWHEREEXPR', 17, 1),
(3995, '166', 3, 1),
(3996, '1151', 4, 1),
(3997, 'EXPR', 4, 1),
(3998, 'THIS-GTDB-GTEXPRCONCATNAME', 26, 1),
(3999, 'ОТНОСИТЬСЯ', 10, 2),
(4000, 'ПАРСИНГ', 7, 1),
(4001, 'ВЫБРАСЫВАНИЕ', 12, 1),
(4002, 'РАЗДЕЛЕНИЕ', 10, 1),
(4003, 'СВЯЗЫВАНИЕ', 10, 2),
(4004, 'КАСТОМНЫЙ', 9, 1),
(4005, 'ВЫНЕСТИ', 7, 1),
(4006, 'QUERY-GTONFAIRIESIDPIXIESID', 27, 1),
(4007, 'ПАРСАЮТЬСЯ', 10, 1),
(4008, 'QUERY-GTONFAIRIESCOUNTGTPIXIESCOUNT', 35, 1),
(4009, 'RUNNER', 6, 1),
(4010, '-GTEND_WHERE_GROUP', 18, 1),
(4011, '57', 2, 1),
(4012, 'ПАРСЕРОВ', 8, 1),
(4013, 'НЕВЕРОЯТНО', 10, 1),
(4014, '-GTOR_HAVINGCOUNT', 17, 1),
(4015, 'ПОПРАВИТЬ', 9, 1),
(4016, 'CMS', 3, 1),
(4017, 'ДОКУМЕНТАЦИЯ', 12, 1),
(4018, 'ПРЕДУПРЕДИТЬ', 12, 1),
(4019, 'ЗАГЛЯНУТЬ', 9, 3),
(4020, 'ВЕТКА', 5, 1),
(4021, 'НЕДЕЛЯ', 6, 1),
(4022, 'БД', 2, 1),
(4023, 'РАСТЯНУТЬСЯ', 11, 1),
(4024, 'ПЕРЕПИСЫВАНИЕ', 13, 1),
(4025, '_OR', 3, 1),
(4026, '-GT_AND_NOTID', 13, 1),
(4027, '-GT_ORCOUNT', 11, 1),
(4028, '-GTWHERENAMETRIXIE', 18, 1),
(4029, '-GT_ORFUNCTIONBUILDER', 21, 1),
(4030, 'EXT', 3, 1),
(4031, 'ФОРМИРОВАНИЕ', 12, 1),
(4032, 'JS', 2, 1),
(4033, 'ГРИД', 4, 1),
(4034, 'QUERY-GTWHERENAMETRIXIE', 23, 1),
(4035, 'BUILDER', 7, 1),
(4036, 'КОЛЛБЕК', 7, 1),
(4037, '-GT_ORNAME', 10, 1),
(4038, 'КЛИКНУТЬ', 8, 1),
(4039, 'ОБЪЯСНЕНИЕ', 10, 1),
(4040, 'ЛЕНЬ', 4, 1),
(4041, 'СРЕДНЕСТАТИСТИЧЕСКИЙ', 20, 1),
(4042, 'ЛОГИЧЕСКИЙ', 10, 1),
(4043, '-GTOR_WHERENAME', 15, 1),
(4044, '-GTWHERE_NOTID', 14, 1),
(4045, '-GTHAVINGCOUNTLT', 16, 1),
(4046, '-GTSTART_WHERE_GROUPOR', 22, 1),
(4047, 'РАУНД', 5, 1),
(4048, 'TECHEMPOWER', 11, 1),
(4049, '7-ГО', 4, 1),
(4050, 'PREVIEW', 7, 1),
(4051, 'ДАБЫ', 4, 2),
(4052, 'ВНЕСТИ', 6, 2),
(4053, 'ИЗМЕНЕНИЕ', 9, 2),
(4054, 'ИНСТАЛЛЯЦИЯ', 11, 1),
(4055, 'ИСПРАВЛИТЬ', 10, 1),
(4056, 'СВИДЕТЕЛЬСТВОВАТЬ', 17, 1),
(4057, '7-М', 3, 1),
(4058, 'WWWTECHEMPOWERCOMBENCHMARKSPREVIEWSROUND7', 41, 1),
(4059, 'РЕКОМЕНДОВАТЬ', 13, 1),
(4060, 'ШИРОКИЙ', 7, 1),
(4061, 'WWWTECHEMPOWERCOMBENCHMARKS', 27, 1),
(4062, 'РЕГУЛЯРНО', 9, 2),
(4063, 'ВЕБ', 3, 1),
(4064, '6-ГО', 4, 1),
(4065, 'ВОТ-ВОТ', 7, 1),
(4066, 'ФЕРЙМВОРКОВЫЙ', 13, 1),
(4067, 'СВЕЖИЙ', 6, 2),
(4068, 'APPPIXIE', 8, 2),
(4069, 'PIXIE', 5, 2),
(4070, 'PHPIXIEPIXIE', 12, 2),
(4071, 'СУЩНОСТЬ', 8, 1),
(4072, 'EXTENDS', 7, 2),
(4073, 'ИВЕНТА', 6, 1),
(4074, 'ФАКТОРИТЬ', 9, 2),
(4075, 'DI', 2, 3),
(4076, 'ЧИТАБЕЛЬНОСТЬ', 13, 2),
(4077, 'PHPIXIEORM', 10, 1),
(4078, 'ПОДМЕНИТЬ', 9, 1),
(4079, 'PHPIXIEORMMODEL', 15, 2),
(4080, 'ЛЕГКОСТЬ', 8, 1),
(4081, 'NAMESPACE', 9, 2),
(4082, 'ПАРАДИГМА', 9, 1),
(4083, 'ПОПАДАТЬ', 8, 1),
(4084, 'МОДЕЛЬ', 6, 3),
(4085, 'ЭКЗЕМПЛЯР', 9, 1),
(4086, 'ПОКАЗАТЬСЯ', 10, 3),
(4087, 'MODULES', 7, 2),
(4088, 'ФАБРИКА', 7, 1),
(4089, 'APPSINGLETON', 12, 1),
(4090, 'THIS-GTINSTANCE_CLASSESSINGLETON', 32, 1),
(4091, 'PIXIE-GTSINGLETON', 17, 1),
(4092, 'ВХОДИТЬ', 7, 1),
(4093, 'INSTANCE_CLASSES', 16, 1),
(4094, 'PHPIXEPIXIE', 11, 1),
(4095, 'СИНГЛТОН', 8, 2),
(4096, 'ЗАПУСТИТЬСЯ', 11, 1),
(4097, 'ЛИСТЕНЕР', 8, 1),
(4098, 'ВЫЗВАТЬ', 7, 1),
(4099, 'БЕКТРЕЙСОВЫЙ', 12, 1),
(4100, 'СТРАДАТЬ', 8, 1),
(4101, 'ХУК', 3, 1),
(4102, 'РАСШИРЕННЫЙ', 11, 1),
(4103, 'КАК-РАЗ', 7, 1),
(4104, 'ПЕРЕГРУЗИТЬ', 11, 1),
(4105, 'ПРОЯВЛЯТЬСЯ', 11, 1),
(4106, 'МАГИЯ', 5, 2),
(4107, 'ООП', 3, 1),
(4108, 'APPORM', 6, 1),
(4109, 'APPMODEL', 8, 2),
(4110, 'PHPIXIEDB', 9, 1),
(4111, 'DB', 2, 2),
(4112, 'PIXIE-GTDB', 10, 1),
(4113, 'PIXIE-GTORM', 11, 1),
(4114, 'УЛУЧШЫТЬ', 8, 1),
(4115, 'ФЛОВ', 4, 1),
(4116, 'EVENT', 5, 1),
(4117, 'ЄТЫЙ', 4, 1),
(4118, 'SUBCLASS_PREFIX', 15, 1),
(4119, 'ОБОЙТИСЬ', 8, 1),
(4120, 'DRIVEN', 6, 1),
(4121, 'НАРИСОВАТЬ', 10, 1),
(4122, 'VC', 2, 1),
(4123, 'MVC', 3, 3),
(4124, 'PHPIXIE-CORE', 12, 1),
(4125, 'НАСЛЕДОВАТЬ', 11, 2),
(4126, 'ОГЛАШАТЬ', 8, 1),
(4127, 'ПРЕДОСТАВЛЕНИЕ', 14, 1),
(4128, 'КУДА', 4, 1),
(4129, 'INDEXPHP', 8, 1),
(4130, 'PIXIE-GTBOOTSTRAPROOT-GTHANDLE_HTTP_REQUEST', 43, 1),
(4131, 'СЕРДЦЕ', 6, 1),
(4132, 'РИСОВАНИЕ', 9, 1),
(4133, 'ОТНОСИТЕЛЬНЫЙ', 13, 1),
(4134, 'ЛИНЕЙНОСТЬ', 10, 1),
(4135, 'SYMFONY', 7, 2),
(4136, 'ТОНКИЙ', 6, 1),
(4137, 'СЧАСТИЕ', 7, 2),
(4138, 'ВНУТРЬ', 6, 1),
(4139, 'ЖИЗНЕННЫЙ', 9, 1),
(4140, 'УМЕНИЕ', 6, 1),
(4141, 'ПРИВЕТСТВОВАТЬСЯ', 16, 1),
(4142, 'ОТСЫЛАТЬСЯ', 10, 1),
(4143, 'КОНТЕНТ', 7, 1),
(4144, 'ОТВЛЕЧЬСЯ', 9, 1),
(4145, 'PHPIXIECONTROLLER', 17, 1),
(4146, 'ХЕДЕР', 5, 1),
(4147, 'PHPIXIERESPONSE', 15, 1),
(4148, 'ACTION', 6, 2),
(4149, 'ЕКСИТЬ', 6, 1),
(4150, 'МОК', 3, 1),
(4151, 'ЗАМОКАННЫЙ', 10, 1),
(4152, 'ПРОПЕРТЬ', 8, 3),
(4153, 'СТАТИКА', 7, 1),
(4154, 'ЮНИТЬ', 5, 2),
(4155, 'ЕКЗЕМПЛЯР', 9, 1),
(4156, 'PHPIXIEREQUEST', 14, 1),
(4157, 'ПРОДОКУМЕНТИРОВАТЬ', 18, 1),
(4158, 'SILEX', 5, 3),
(4159, 'HANDLE_HTTP_REQUEST', 19, 1),
(4160, 'ИНИЦИАЛИЗИРОВАТЬ', 16, 1),
(4161, 'BOOTSTRAP', 9, 1),
(4162, 'УСЛОЖНЯТЬ', 9, 1),
(4163, 'HOME_TREE', 9, 1),
(4164, 'SYLPH', 5, 1),
(4165, 'SYLPH-GTCASTARRAY', 17, 1),
(4166, 'NUM_BUNNIES', 11, 1),
(4167, 'FRIENDS', 7, 1),
(4168, 'СТАБ', 4, 1),
(4169, 'ИНОГДА', 6, 1),
(4170, 'BUNNIES-GTADD1', 14, 1),
(4171, 'BUNNIES-GTADD2', 14, 1),
(4172, 'PHPIXIESYLPH', 12, 1),
(4173, 'СТАРАТЬСЯ', 9, 2),
(4174, 'АССОЦИИРОВАННЫЙ', 15, 1),
(4175, 'NUM_SQUIRRELS', 13, 1),
(4176, 'USENUM_BUNNIES', 14, 1),
(4177, 'ПРЕИМУЩЕСТВО', 12, 1),
(4178, 'ЛАКОНИЧНОСТЬ', 12, 1),
(4179, 'IFANIMAL', 8, 1),
(4180, 'FUNCTIONNEW', 11, 1),
(4181, 'FUNCTIONANIMAL', 14, 1),
(4182, 'NUM_ANIMALS', 11, 1),
(4183, 'BUNNY', 5, 1),
(4184, 'BUNNIES', 7, 1),
(4185, 'ЛЕТО', 4, 2),
(4186, 'FOUND', 5, 1),
(4187, 'THROW', 5, 1),
(4188, 'EXCEPTIONANIMAL', 15, 1),
(4189, 'STUB', 4, 1),
(4190, 'ФЕЙК', 4, 1),
(4191, 'ПОДХОДЯЩИЙ', 10, 1),
(4192, 'MOCK-', 5, 1),
(4193, 'STUB-', 5, 1),
(4194, 'ОБЪЕКТОВЫЙ', 10, 1),
(4195, 'ЖИТЬ', 4, 1),
(4196, 'ЛЕСЯ', 4, 1),
(4197, 'БЕЛКА', 5, 1),
(4198, 'ЗАЙКА', 5, 1),
(4199, 'ФЕЯ', 3, 4),
(4200, 'ДРУЖИТЬ', 7, 1),
(4201, 'GET_FRIENDS', 11, 1),
(4202, 'TREE', 4, 1),
(4203, 'СВЯЗЫВАТЬ', 9, 1),
(4204, 'МОКАТЬ', 6, 1),
(4205, 'THIS-GTHOME_TREE-GTNUM_SQUIRRELS', 32, 1),
(4206, 'THIS-GTHOME_TREE-GTFOREST-GTNUM_ANIMALSBUNNY', 44, 1),
(4207, 'THIS-GTHOME_TREE', 16, 1),
(4208, 'THIS-GTNAME', 11, 1),
(4209, '__CONSTRUCTNAME', 15, 1),
(4210, 'ГЛУБОКИЙ', 8, 2),
(4211, 'КОНВЕРТИРОВАТЬ', 14, 1),
(4212, 'STUB-Ы', 6, 1),
(4213, 'РИСУНОК', 7, 1),
(4214, 'ШРИФТ', 5, 1),
(4215, 'GD', 2, 1),
(4216, 'ГРАФИЧЕСКИЙ', 11, 1),
(4217, 'GMAGICK', 7, 1),
(4218, '-GTRESIZE200', 12, 1),
(4219, 'PIXIE-GTIMAGE-GTREADDIRFAIRYJPG', 31, 1),
(4220, 'IMAGICK', 7, 1),
(4221, 'НАЛОЖЕНИЕ', 9, 1),
(4222, 'I', 1, 1),
(4223, '0X5B43AA', 8, 1),
(4224, 'DIRSOFIA-REGULARTTF', 19, 1),
(4225, 'МЕТРИКА', 7, 1),
(4226, '0XFFFFFF', 8, 1),
(4227, 'PIXIE-GTIMAGE-GTCREATE300', 25, 1),
(4228, 'АВАТАРКА', 8, 1),
(4229, 'КВАДРАТНЫЙ', 10, 1),
(4230, 'АВТАРКА', 7, 1),
(4231, 'ПУСТОЙ', 6, 1),
(4232, '-GTCROP200', 10, 1),
(4233, 'ЦВЕТА', 5, 1),
(4234, 'БЕНЧМАРК', 8, 1),
(4235, 'CANVAS', 6, 1),
(4236, 'ВЕРТИКАЛЬ', 9, 1),
(4237, 'ГОРИЗОНТАЛЬ', 11, 1),
(4238, 'ОТДЕЛЬНО', 8, 1),
(4239, 'ЗАМЫСЛОВАТЫЙ', 12, 1),
(4240, 'MEMORY', 6, 1),
(4241, 'QUOTALL', 7, 1),
(4242, 'ПОНРАВИТЬСЯ', 11, 3),
(4243, 'LIGHT', 5, 1),
(4244, 'SHIMMERING', 10, 1),
(4245, 'FADED', 5, 1),
(4246, 'COULD', 5, 1),
(4247, 'CIRCLE', 6, 1),
(4248, 'MUSHROOM', 8, 1),
(4249, 'RED', 3, 1),
(4250, 'QUOTTHAT', 8, 1),
(4251, 'SEE', 3, 1),
(4252, 'ДОРОГОЙ', 7, 1),
(4253, 'ПУСТОВАТЬ', 9, 1),
(4254, 'КАЧАТЬ', 6, 1),
(4255, 'ПОБЕНЧИТЬ', 9, 1),
(4256, 'КУСОЧЕК', 7, 1),
(4257, 'MY', 2, 1),
(4258, 'EYES', 4, 1),
(4259, 'CLOSED', 6, 1),
(4260, 'ПЕСЕНКА', 7, 1),
(4261, 'TEXT', 4, 1),
(4262, 'QUOTWHEN', 8, 1),
(4263, 'ВРАППИНГ', 8, 1),
(4264, 'БОКОМ', 5, 1),
(4265, 'PIXIE-GTIMAGE-GTCREATE400', 25, 1),
(4266, 'ИЗГИБ', 5, 1),
(4267, '-GTOVERLAYFAIRY-GTFLIPTRUE', 26, 1),
(4268, '-GTOVERLAYFAIRY', 15, 1),
(4269, 'ПРЕЖДЕ', 6, 1),
(4270, 'НАНОВО', 6, 1),
(4271, 'ДИСК', 4, 2),
(4272, 'ПЕРЕСЧИТЫВАНИЕ', 14, 1),
(4273, 'ОБОРАЧИВАНИЕ', 12, 1),
(4274, 'ОБЕРНУТЬ', 8, 1),
(4275, 'ПРИСМОТРЕТЬСЯ', 13, 1),
(4276, 'ЗАМЕТНЫЙ', 8, 1),
(4277, 'РЕАЛЬНОСТЬ', 10, 1),
(4278, 'SURROUNDED', 10, 1),
(4279, 'ОТОРВАТЬ', 8, 1),
(4280, 'FAIRIES', 7, 1),
(4281, 'WHITE', 5, 1),
(4282, 'QUOTAND', 7, 1),
(4283, 'MYRIAD', 6, 1),
(4284, 'ПРОГОНЯТЬСЯ', 11, 1),
(4285, '180', 3, 1),
(4286, '-GTTEXTTEXT', 11, 1),
(4287, '300', 3, 1),
(4288, '-GTSAVEDIRWRAPJPG', 17, 1),
(4289, 'TRUE-GTROTATE90', 15, 1),
(4290, '-GTSAVEDIROVERLAYJPG', 20, 1),
(4291, 'СЛЕВА-НАПРАВО', 13, 1),
(4292, 'ДУХ', 3, 1),
(4293, 'ЭКСПЕРИМЕНТИРОВАТЬ', 18, 1),
(4294, 'ДЕВИАНТАРТ', 10, 1),
(4295, 'HTTPJ-SCOTT-CAMPBELLDEVIANTARTCOM', 33, 1),
(4296, 'LENNA', 5, 1),
(4297, 'ПЛЕЙБОЙ', 7, 1),
(4298, 'ИННУЕНДЫЙ', 9, 1),
(4299, 'НАПОМНИТЬ', 9, 1),
(4300, 'ПОСМЕТЬ', 7, 1),
(4301, 'IMAGEMAGICK', 11, 1),
(4302, 'СЕКРЕТ', 6, 2),
(4303, 'ФАКТОР', 6, 1),
(4304, 'ФОРА', 4, 1),
(4305, 'GRAPHICSMAGICK', 14, 1),
(4306, 'ОТТУДА', 6, 1),
(4307, 'СТАЛКИВАТЬ', 10, 1),
(4308, 'ФОРК', 4, 1),
(4309, 'ВЫХОДНОЙ', 8, 1),
(4310, 'TTF', 3, 1),
(4311, 'ЦВЕТ', 4, 1),
(4312, '70', 2, 1),
(4313, '-GTTEXTQUOTHELLO', 16, 1),
(4314, '-GTSAVEDIRTEXTJPG', 17, 1),
(4315, 'WORLDQUOT', 9, 1),
(4316, 'ФИОЛЕТОВЫЙ', 10, 1),
(4317, 'ПРЕДИДТИ', 8, 1),
(4318, 'ИДЕНТИЧЕСКА', 11, 1),
(4319, 'БЕЛЫЙ', 5, 1),
(4320, 'ДРАМАТИЧНЫЙ', 11, 1),
(4321, 'MAGICK-', 7, 1),
(4322, 'РАЗМЫТЫЙ', 8, 1),
(4323, 'ТЕМНЕТЬ', 7, 1),
(4324, 'КРАЙ', 4, 1),
(4325, 'АНТИАЛИАСИНГ', 12, 1),
(4326, '-GTSAVEDIRRESIZEJPG', 19, 1),
(4327, 'ОСОБА', 5, 2),
(4328, 'ШИРИНА', 6, 1),
(4329, 'ПИКСЕЛЬ', 7, 1),
(4330, 'МАСШТАБИРОВАНИЕ', 15, 1),
(4331, 'МАСШТАБИРОВАТЬ', 14, 1),
(4332, 'ОБРЕЗАТЬ', 8, 1),
(4333, 'ДЕЛАТЬСЯ', 8, 1),
(4334, '-GTSAVEDIRCROPJPG', 17, 1),
(4335, 'ЯРКО', 4, 1),
(4336, 'ЗЕЛЕНЫЙ', 7, 1),
(4337, 'ВЫРАЖЕННЫЙ', 10, 1),
(4338, 'ПРИЗ', 4, 1),
(4339, 'СИМВОЛИЧЕСКИЙ', 13, 1),
(4340, 'ЧИСТО', 5, 1),
(4341, 'AMAZON', 6, 1),
(4342, 'СЕРТИФИКАТ', 10, 1),
(4343, 'ПОДАРОЧНЫЙ', 10, 1),
(4344, 'ТУТОРИАЛ', 8, 3),
(4345, 'КОНКУРС', 7, 1),
(4346, 'УЧАСТИЕ', 7, 1),
(4347, 'ЗАПОСТИТЬ', 9, 1),
(4348, 'СТАРТ', 5, 1),
(4349, 'БЛАГОДАРНОСТЬ', 13, 1),
(4350, 'ОБЪЯВИТЬ', 8, 2),
(4351, 'БЛОГ', 4, 2),
(4352, 'ПОБЕДИТЕЛЬ', 10, 1),
(4353, 'ОБУЧАТЬ', 7, 1),
(4354, 'ТЕМАТИЧЕСКИЙ', 12, 1),
(4355, 'CI', 2, 1),
(4356, 'КОХАТЬ', 6, 1),
(4357, 'ELLISLAB', 8, 1),
(4358, 'CODEIGNITER', 11, 1),
(4359, 'ДВИГАТЬСЯ', 9, 1),
(4360, 'КОХАН', 5, 1),
(4361, 'НЕЙМСПЕЙС', 9, 1),
(4362, 'HTTPHABRAHABRRUPOST111224', 25, 1),
(4363, 'ЗНАКОМСТВО', 10, 1),
(4364, 'HTTPHABRAHABRRUPOST178899', 25, 1),
(4365, 'ФРЕМВОРК', 8, 1),
(4366, 'ВИДЕОБИБЛИОТЕКА', 15, 2),
(4367, 'УСЛЫШАТЬ', 8, 2),
(4368, 'DEPENDENCY', 10, 2),
(4369, 'ОЩУЩЕНИЕ', 8, 1),
(4370, 'INJECTION', 9, 2),
(4371, 'ОРМ', 3, 1),
(4372, 'ВСЕ-ЖИЙ', 7, 1),
(4373, 'COMPOSER', 8, 3),
(4374, 'ПОДГРУЖАТЬСЯ', 12, 1),
(4375, 'ИГНАЙТЕРЫЙ', 10, 1),
(4376, 'СОБИРАТЬСЯ', 10, 1),
(4377, 'МЕДЛЕННО', 8, 1),
(4378, 'ВЛАДЕЛЕЦ', 8, 1),
(4379, 'ИСХОДИТЬ', 8, 2),
(4380, 'СКОНЦЕНТРИРОВИТЬСЯ', 18, 1),
(4381, 'ЖЕЛАНИЕ', 7, 1),
(4382, 'ОГРАНИЧЕННОСТЬ', 14, 1),
(4383, 'УМЕРЕТЬ', 7, 1),
(4384, 'КОНЕЧНО-ЖИЙ', 11, 1),
(4385, 'АЛЬТЕРНАТИВА', 12, 1),
(4386, 'ЧТО-ЖИЙ', 7, 1),
(4387, 'ПОДДЕРЖАТЬ', 10, 1),
(4388, 'КРЫЛО', 5, 1),
(4389, 'LTDIVGT', 7, 1),
(4390, 'VIDEOS', 6, 1),
(4391, 'VIDEO', 5, 1),
(4392, 'LT--', 4, 1),
(4393, '--GT', 4, 1),
(4394, 'ПОДШАБЛОН', 9, 1),
(4395, 'VIDEO_ID', 8, 1),
(4396, 'ПРОПИСАТЬ', 9, 1),
(4397, 'CLASSQUOTOFFSET3', 16, 1),
(4398, 'СНАПШОТ', 7, 1),
(4399, 'SPAN6QUOTGT', 11, 1),
(4400, 'ACTION_ADD', 10, 1),
(4401, 'VIDEO-GTVIDEO_ID', 16, 1),
(4402, 'VARSV', 5, 1),
(4403, 'THIS-GTVIEW-GTSUBVIEW', 21, 1),
(4404, 'THIS-GTREDIRECT', 15, 1),
(4405, 'VIDEO-GTTITLE', 13, 1),
(4406, 'VIDEO-GTSAVE', 12, 1),
(4407, 'ДЕФОЛТНЫЙ', 9, 1),
(4408, 'DEFAULT', 7, 1),
(4409, 'СКАЧАТЬ', 7, 1),
(4410, 'ТАМБНЕЙЛ', 8, 1),
(4411, 'PARSE_STRPARSE_URL', 18, 1),
(4412, 'PHP_URL_QUERY', 13, 1),
(4413, 'VARS', 4, 1),
(4414, 'ЮТУБ', 4, 1),
(4415, 'THIS-GTPIXIE-GTORM-GTGETVIDEO', 29, 1),
(4416, 'ВЫБОР', 5, 2),
(4417, 'MAINPHP', 7, 1),
(4418, 'CLASSQUOTROWQUOTGT', 18, 1),
(4419, 'VIEW', 4, 1),
(4420, 'VIDEO-GTID', 10, 1),
(4421, 'LTLI', 4, 1),
(4422, 'CLASSQUOTSPAN3QUOTGT', 20, 1),
(4423, 'VIEWPHP', 7, 1),
(4424, 'AS', 2, 1),
(4425, 'LTUL', 4, 1),
(4426, 'VIDEOGT', 7, 1),
(4427, 'ASSETSVIEWSLISTPHP', 18, 1),
(4428, 'HREFQUOTVIDEOSVIEWLTPHP', 23, 1),
(4429, 'CLASSQUOTTHUMBNAILSQUOTGT', 25, 1),
(4430, 'CLASSQUOTTHUMBNAILQUOT', 22, 1),
(4431, 'FOREACHVIDEOS', 13, 1),
(4432, 'СКОНЦЕНТРИРОВАТЬСЯ', 18, 1),
(4433, 'TYPEQUOTSUBMITQUOT', 18, 1),
(4434, 'VIDSLTAGTLTH2GT', 15, 1),
(4435, 'HREFQUOTQUOTGTPHPIXIE', 21, 1),
(4436, 'LTH2GTLTA', 9, 1),
(4437, 'ЧУЖОЙ', 5, 1),
(4438, 'METHODQUOTPOSTQUOT', 18, 1),
(4439, 'CLASSQUOTFORM-INLINEQUOT', 24, 1),
(4440, 'LTFORM', 6, 1),
(4441, 'УЧИТЬСЯ', 7, 1),
(4442, 'LITHIUM', 7, 2),
(4443, 'LTDOCTYPE', 9, 1),
(4444, 'HREFQUOTNETDNABOOTSTRAPCDNCOMTWITTER-BOOTSTRAP230CSSBOOTSTRAP-COMBINEDMINCSSQUOT', 80, 1),
(4445, 'CLASSQUOTCONTAINERQUOTGT', 24, 1),
(4446, 'RELQUOTSTYLESHEETQUOTGT', 23, 1),
(4447, 'ACTIONQUOTVIDEOSADDQUOTGT', 25, 1),
(4448, 'LTINPUT', 7, 1),
(4449, 'LTFORMGT', 8, 1),
(4450, 'INCLUDESUBVIEWPHP', 17, 1),
(4451, 'NEWLTBUTTONGT', 13, 1),
(4452, 'BTN-PRIMARYQUOTGTADD', 20, 1),
(4453, 'LINKQUOT', 8, 1),
(4454, 'PLACEHOLDERQUOTPASTE', 20, 1),
(4455, 'TYPEQUOTTEXTQUOT', 16, 1),
(4456, 'NAMEQUOTURLQUOTGT', 17, 1),
(4457, 'CLASSQUOTBTN', 12, 1),
(4458, 'GTQUOTGT', 8, 1),
(4459, 'LTBUTTON', 8, 1),
(4460, 'LISTPHP', 7, 1),
(4461, 'SRCQUOTHTTPWWWYOUTUBECOMEMBEDLTPHP', 34, 1),
(4462, 'THIS-GTREQUEST-GTPOSTURL', 24, 1),
(4463, 'FILE_GET_CONTENTSQUOTHTTPYOUTUBECOMGET_VIDEO_INFOVIDEO_IDQUOTVIDEO_ID', 69, 1),
(4464, 'THIS-GTPIXIE-GTORM-GTGETVIDEO-GTFIND_ALL', 40, 1),
(4465, 'НЕДОСТАЮЩИЙ', 11, 1),
(4466, 'IFURL', 5, 1),
(4467, 'БРАТЬ', 5, 1),
(4468, 'ACTION_VIEW', 11, 1),
(4469, 'THIS-GTVIEW-GTVIDEOS', 20, 1),
(4470, 'APPCONTROLLER', 13, 1),
(4471, 'APPPAGE', 7, 1),
(4472, 'ACTION_INDEX', 12, 1),
(4473, 'PARSE_STRRESPONSE', 17, 1),
(4474, 'DATATITLE', 9, 1),
(4475, 'VIDEOVIEW3', 10, 1),
(4476, 'THIS-GTREQUEST-GTPARAMID', 24, 1),
(4477, 'ВИДЕОGT', 7, 1),
(4478, 'ДОСТАТЬ', 7, 1),
(4479, 'YOUTUBECOMGET_VIDEO_INFOVIDEO_IDLTID', 36, 1),
(4480, 'PARSE_URL', 9, 1),
(4481, 'АККУРАТНЫЙ', 10, 1),
(4482, 'WWWYOUTUBECOMWATCHV75NBENOWUL0', 30, 1),
(4483, 'V', 1, 1),
(4484, '-GTFIND', 7, 1),
(4485, '-GTWHEREID', 10, 1),
(4486, 'THIS-GTVIEW-GTVIDEO', 19, 1),
(4487, 'ИДЕНТИФИКАТОР', 13, 1),
(4488, 'СКРИНШОТ', 8, 1),
(4489, 'LTIFRAME', 8, 1),
(4490, 'АВТОПРОИГРЫВАНИЕ--GT', 20, 1),
(4491, 'LTULGT', 6, 1),
(4492, 'WIDTHQUOT420QUOT', 16, 1),
(4493, 'HEIGHTQUOT345QUOT', 17, 1),
(4494, 'РОУТИНГ', 7, 1),
(4495, 'GTREL0AUTOPLAY1QUOTGTLTIFRAMEGT', 31, 1),
(4496, 'ENDFOREACHGT', 12, 1),
(4497, 'LTLIGT', 6, 1),
(4498, 'LTIMG', 5, 1),
(4499, 'ЗАМЕТНО', 7, 2),
(4500, 'АЙДИШКА', 7, 1),
(4501, 'SRCQUOTHTTPIMGYOUTUBECOMVILTPHP', 31, 1),
(4502, 'VIDEO-GTVIDEO_IDGT0JPGQUOTGT', 28, 1),
(4503, 'LTAGT', 5, 1),
(4504, 'VIDEO-GTTITLEGTLTH3GT', 21, 1),
(4505, 'LTH3GTLTPHP', 11, 1),
(4506, 'CLASSQUOTCAPTIONQUOTGT', 22, 1),
(4507, 'ЗАЖДАТЬСЯ', 9, 1),
(4508, 'HELLO', 5, 1),
(4509, 'Б', 1, 1),
(4510, 'ARRAYLTCONTROLLERGTLTACTIONGTLTIDGT', 35, 1),
(4511, 'INDEX', 5, 1),
(4512, 'CONTROLLER', 10, 1),
(4513, 'ASSETSCONFIGROUTESPHP', 21, 1),
(4514, 'ОЖИДАТЬ', 7, 1),
(4515, 'КОНТРОЛЛЕРМЕТОДID', 17, 1),
(4516, 'WEB', 3, 1),
(4517, 'ПРИВЕТСТВИЕ', 11, 1),
(4518, 'PHPIXIECOMPHPIXIEZIP', 20, 1),
(4519, 'ОБНОВЛЯТЬСЯ', 11, 1),
(4520, 'ПРОИНСТАЛЛИРОВАТЬ', 17, 1),
(4521, 'CORE', 4, 1),
(4522, 'СЛЕДОВАТЕЛЬНО', 13, 1),
(4523, 'ПРИСУТСТОВАТЬ', 13, 1),
(4524, 'ЧИТАТЬ', 6, 1),
(4525, 'МЕРКА', 5, 1),
(4526, 'МОДУЛЬНЫЙ', 9, 1),
(4527, 'НИША', 4, 1),
(4528, 'СТАТИК', 6, 1),
(4529, 'ПРОСМАТРИВАТЬ', 13, 1),
(4530, 'НАУЧИТЬСЯ', 9, 1),
(4531, 'МЕТА', 4, 1),
(4532, 'ПОГУГЛИТЬ', 9, 1),
(4533, 'ПОВСЮДУ', 7, 1),
(4534, 'РАСШИРИТЬ', 9, 1),
(4535, 'ДОМА', 4, 1),
(4536, 'PIXIE-GTGETVIDEO', 16, 1),
(4537, 'ЯРКИЙ', 5, 1),
(4538, 'ПОЧУВСТВОВАТЬ', 13, 1);
INSERT INTO `words` (`id`, `value`, `length`, `weight`) VALUES
(4539, 'CONNECTIONGTMYSQLHOSTLOCALHOSTDBNAMEVIDEOS', 42, 1),
(4540, 'DRIVER', 6, 1),
(4541, 'PASSWORD', 8, 1),
(4542, 'KOHANA', 6, 2),
(4543, 'TEST', 4, 1),
(4544, 'PIXIE-GTGETVIDEO-GTWHERETITLETEST-GTFIND', 40, 1),
(4545, 'SUBVIEW', 7, 1),
(4546, 'ПЕРЕДЕЛАТЬ', 10, 1),
(4547, 'ВЫНОСИТЬСЯ', 10, 1),
(4548, 'МАСТЕР-СТРАНИЦА', 15, 1),
(4549, 'РЕНДЕРИТЬ', 9, 1),
(4550, 'ЧТОБ', 4, 1),
(4551, 'МИ', 2, 1),
(4552, 'РАЗМЕТКА', 8, 1),
(4553, 'PIXIE-GTGETVIDEO-GTFIND_ALL', 27, 1),
(4554, 'КОНТРОЛЕР', 9, 1),
(4555, 'USERGTROOT', 10, 1),
(4556, 'ASSETSCONFIGDBPHP', 17, 1),
(4557, 'ГЛОБАЛЬНЫЙ', 10, 1),
(4558, 'ПРОПИСЫВАТЬСЯ', 13, 1),
(4559, 'ПОСТАВЛЯТЬ', 10, 1),
(4560, 'ОБРАТИТЬ', 8, 1),
(4561, 'ИЗБРАННЫЙ', 9, 1),
(4562, 'ЗАПРАШИВАТЬ', 11, 1),
(4563, 'PIXIE-GTDB-GTQUERY', 18, 1),
(4564, 'TITLE', 5, 1),
(4565, 'VARCHAR20', 9, 1),
(4566, 'AUTO_INCREMENT', 14, 1),
(4567, 'INT10', 5, 1),
(4568, 'VARCHAR255', 10, 1),
(4569, 'PRIMARY', 7, 1),
(4570, 'ПРОПИСЫВАТЬ', 11, 1),
(4571, 'KEY', 3, 1),
(4572, 'TABLE', 5, 1),
(4573, 'СТРУКТУРИРОВАННОСТЬ', 19, 1),
(4574, 'PIXIE-GTORM-GTGET', 17, 1),
(4575, 'СУП', 3, 1),
(4576, 'УСМОТРЕНИЕ', 10, 1),
(4577, 'PHALCON', 7, 1),
(4578, 'XCACHE', 6, 1),
(4579, 'SIMPLE', 6, 1),
(4580, 'SHOULD', 6, 1),
(4581, 'THINGS', 6, 1),
(4582, 'BE', 2, 1),
(4583, 'CAKEPHP', 7, 1),
(4584, 'ФИЛОСОФИЯ', 9, 1),
(4585, 'ГИБКО', 5, 1),
(4586, 'СЕРЬЕЗНО', 8, 1),
(4587, 'МИКРОФРЕЙМВОРКОВЫЙ', 18, 1),
(4588, 'КОММЮНИТЬ', 9, 1),
(4589, 'ПРИКРУТИТЬ', 10, 1),
(4590, 'ГИБКОСТЬ', 8, 1),
(4591, 'ПОДРГРУЖАТЬТЕМА', 15, 1),
(4592, 'СУППОРТ', 7, 1),
(4593, 'ВЫБРОСИТЬ', 9, 1),
(4594, 'ОКНО', 4, 1),
(4595, 'КУЧА', 4, 1),
(4596, 'УДИВИТЬ', 7, 1),
(4597, 'ПОСТАВЛЯТЬСЯ', 12, 1),
(4598, 'СУЖАТЬ', 6, 1),
(4599, 'МИКРОФРЕЙМВОРК', 14, 1),
(4600, 'SILEXSLIM', 9, 1),
(4601, 'РАЗОЧАРОВАТЬ', 12, 1),
(4602, 'КЕШИРОВАТЬ', 10, 1),
(4603, 'СТОЯЛЫЙ', 7, 1),
(4604, 'ИННОВАЦИОННЫЙ', 13, 1),
(4605, 'УДИВИТЕЛЬНО', 11, 1),
(4606, 'WORDPRESS', 9, 1),
(4607, 'УПОРНО', 6, 1),
(4608, 'РАДОВАТЬ', 8, 1),
(4609, 'ПРИДЕСТИТЬ', 10, 1),
(4610, 'УСТРАШИТЬСЯ', 11, 1),
(4611, 'ПОРЕФАКТОРИТЬ', 13, 1),
(4612, 'УСПЕТЬ', 6, 1),
(4613, 'СТРАНА', 6, 1),
(4614, 'ТЫСЯЧА', 6, 1),
(4615, 'ДУШ', 3, 1),
(4616, 'ФРЕЙМОВРКОВЫЙ', 13, 1),
(4617, 'ПОРТИРОВАТЬ', 11, 1),
(4618, 'ПОДОБИЕ', 7, 1),
(4619, 'НЕКОГО', 6, 1),
(4620, 'SLIM', 4, 1),
(4621, 'ИНТУИТИВНО', 10, 1),
(4622, 'СОБРАНИЕ', 8, 1),
(4623, 'СОБРАННЫЙ', 9, 1),
(4624, 'ФРАНКЕНШТЕЙН', 12, 1),
(4625, 'ОСВОИТЬ', 7, 1),
(4626, 'БЕЗО', 4, 1),
(4627, 'ФИЛЬТР', 6, 1),
(4628, 'МАКАРОННЫЙ', 10, 1),
(4629, 'МЕСТАМИ', 7, 1),
(4630, 'БЫВШИЙ', 6, 1),
(4631, 'ИННОВАЦИЯ', 9, 1),
(4632, 'NOSQL', 5, 1),
(4633, 'ФИЛЬТРОВЫЙ', 10, 1),
(4634, 'ДЕЦЕНТРАЛИЗОВАННЫЙ', 18, 1),
(4635, '90', 2, 1),
(4636, 'ТАНЕЦ', 5, 1),
(4637, 'ЗАРАБОТАТЬ', 10, 1),
(4638, 'БУБЕН', 5, 1),
(4639, 'ПРИЯТНО', 7, 1),
(4640, 'ПОРАДОВАТЬ', 10, 1),
(4641, 'ТУТОРИЛ', 7, 1),
(4642, 'PHQL', 4, 1),
(4643, 'LANGUAGE', 8, 1),
(4644, 'СМЕЛЫЙ', 6, 1),
(4645, 'СЛЕДСТВИЕ', 9, 1),
(4646, 'СОБРАТ', 6, 1),
(4647, 'РАЗВИВИТЬСЯ', 11, 1),
(4648, 'СОБЛЮДАТЬ', 9, 1),
(4649, 'ОПКЕШ', 5, 1),
(4650, 'OPCACHE', 7, 1),
(4651, 'ПОПАТЧИТЬ', 9, 1),
(4652, 'ПОТВИКАТЬ', 9, 1),
(4653, 'НЕТУ', 4, 1),
(4654, '20-ТИТЬ', 7, 1),
(4655, 'БЕНЧМАРКА', 9, 1),
(4656, 'ТРУД', 4, 1),
(4657, 'ИДЕАЛ', 5, 1),
(4658, 'ФИЧ', 3, 1),
(4659, 'НЕИЗВЕСТНЫЙ', 11, 1),
(4660, 'РАСПОЗНАВАНИЕ', 13, 1),
(4661, 'ПРОЦЕДУРНЫЙ', 11, 1),
(4662, 'ВРЯД', 4, 1),
(4663, 'ВОСПРИНИМАТЬ', 12, 1),
(4664, 'ПОСРЕДСТВОМ', 11, 1),
(4665, 'ПРОЗРАЧНО', 9, 1),
(4666, 'УБЕДИТЬ', 7, 1),
(4667, 'ПОДГРУЗИТЬСЯ', 12, 1),
(4668, 'ЛИЦО', 4, 1),
(4669, 'ЧТО-ЛИБО', 8, 1),
(4670, 'FAT-FREE', 8, 1),
(4671, 'ПОНИ', 4, 1),
(4672, 'СКЛОНЯТЬСЯ', 10, 1),
(4673, 'ПРОСЛУШАТЬ', 10, 1),
(4674, 'ИНТРО', 5, 1),
(4675, 'РАССМЕЯТЬСЯ', 11, 1),
(4676, 'ТВИТЬ', 5, 1),
(4677, 'PHIL', 4, 1),
(4678, 'STURGEON', 8, 1),
(4679, 'PHP-FIG', 7, 1),
(4680, 'ЧЛЕН', 4, 1),
(4681, 'PYROCMS', 7, 1),
(4682, 'ДОСТИГНУТЬ', 10, 1),
(4683, 'ПРЕДПОЛАГАТЬСЯ', 14, 1),
(4684, 'НЕЗАЧЕМ', 7, 1),
(4685, 'POSSIBLE', 8, 1),
(4686, 'HARD', 4, 1),
(4687, 'ПИТОНИСТ', 8, 1),
(4688, 'РУТИННЫЙ', 8, 1),
(4689, 'СПРАВИТЬСЯ', 10, 1);

--
-- Триггеры `words`
--
DROP TRIGGER IF EXISTS `set_length`;
DELIMITER //
CREATE TRIGGER `set_length` BEFORE INSERT ON `words`
 FOR EACH ROW SET NEW.length = CHAR_LENGTH(NEW.value),
	NEW.value = UCASE(NEW.value)
//
DELIMITER ;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
